{"serial_num": 1, "category": "CALL", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "How much is Microsoft stock price?"}], "input_tools": [{"type": "function", "function": {"name": "convert_euro_to_koruna", "description": "Convert the Given EUR amount to Czech Coruna (CZK)", "parameters": {"type": "object", "properties": {"amount_euro": {"type": "number", "description": "EUR amount to convert"}, "exchange_rate_eur_to_czk": {"type": "number", "description": "Exchange rate from EUR to CZK"}}, "required": ["amount_euro", "exchange_rate_eur_to_czk"]}}}, {"type": "function", "function": {"name": "add_item_to_shopping_cart", "description": "Add new products to the shopping cart", "parameters": {"type": "object", "properties": {"product_id": {"type": "string", "description": "The unique identifier of the product you want to add"}, "quantity": {"type": "integer", "description": "Quantity"}}, "required": ["product_id", "quantity"]}}}, {"type": "function", "function": {"name": "get_stock_price", "description": "Search the current price of a particular stock.", "parameters": {"type": "object", "properties": {"stock_name": {"type": "string", "description": "Stock name to look up"}}, "required": ["stock_name"]}}}, {"type": "function", "function": {"name": "informWeather", "description": "Provide current weather information in a particular area", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Local name to bring weather information"}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "searchFriendBirthday", "description": "A function that enters a friend's name and searches for birthday information", "parameters": {"type": "object", "properties": {"friendName": {"type": "string", "description": "A friend's name to search"}}, "required": ["friendName"]}}}], "type_of_output": "call", "ground_truth": {"name": "get_stock_price", "arguments": "{\"stock_name\": \"마이크로소프트\"}"}, "acceptable_arguments": "{\"stock_name\": [\"Microsoft\", \"MSFT(Microsoft Corporation)\"]}"}
{"serial_num": 2, "category": "CALL", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "What is the stock price?"}], "input_tools": [{"type": "function", "function": {"name": "create_user", "description": "Create a new user account.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "User's name"}, "email": {"type": "string", "description": "User's email address"}, "password": {"type": "string", "description": "User's password"}}, "required": ["name", "email", "password"]}}}, {"type": "function", "function": {"name": "get_movie_details", "description": "Genre, directors, actors, plot, and screening time provide detailed information.", "parameters": {"type": "object", "properties": {"title": {"type": "string", "description": "Film title"}, "year": {"type": "integer", "description": "Movie release year"}}, "required": ["title"]}}}, {"type": "function", "function": {"name": "get_stock_price", "description": "Search the current price of a particular stock.", "parameters": {"type": "object", "properties": {"stock_name": {"type": "string", "description": "Stock name to look up"}}, "required": ["stock_name"]}}}, {"type": "function", "function": {"name": "OrderPizza", "description": "Order pizza.", "parameters": {"type": "object", "properties": {"PizzaType": {"type": "string", "description": "Pizza"}, "size": {"type": "string", "description": "Pizza size (extracted as it is, example: Small, L, Medium, etc.)"}, "quantity": {"type": "integer", "description": "Order quantity"}}, "required": ["PizzaType", "size", "quantity"]}}}, {"type": "function", "function": {"name": "count_lowercase_letters", "description": "The number of lowercase in the string", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Cell string for lowercase"}}, "required": ["text"]}}}], "type_of_output": "call", "ground_truth": {"name": "get_stock_price", "arguments": "{\"stock_name\": \"애플\"}"}, "acceptable_arguments": "{\"stock_name\": [\"Apple\", \"AAPL(Apple Inc.)\"]}"}
{"serial_num": 3, "category": "CALL", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "I'm going to put Netflix once this time, but let me know the price now."}], "input_tools": [{"type": "function", "function": {"name": "get_movie_schedule", "description": "Inquire a certain date and screening schedule for a specific movie theater.", "parameters": {"type": "object", "properties": {"movie_date": {"type": "string", "description": "Date to look up (YYYY-MM-DD)"}, "movie_location": {"type": "string", "description": "Cinema to look upon"}}, "required": ["movie_date", "movie_location"]}}}, {"type": "function", "function": {"name": "schedule_meeting", "description": "Book a meeting.", "parameters": {"type": "object", "properties": {"participants": {"type": "string", "description": "Participant list (if there are multiple participants, it is divided into a comma (,).)"}, "date_time": {"type": "string", "description": "Date and time of meeting (yyyy-mm-dd hh: mm format)"}}, "required": ["participants", "date_time"]}}}, {"type": "function", "function": {"name": "get_stock_price", "description": "Search the current price of a particular stock.", "parameters": {"type": "object", "properties": {"stock_name": {"type": "string", "description": "Stock name to look up"}}, "required": ["stock_name"]}}}, {"type": "function", "function": {"name": "getDailyNewsHeadlines", "description": "Today's main news headline is provided.", "parameters": {"type": "object", "properties": {}, "required": []}}}, {"type": "function", "function": {"name": "convert_eur_to_jpy", "description": "Convert the given Euro (EUR) amount to JPY", "parameters": {"type": "object", "properties": {"amount_eur": {"type": "number", "description": "EUR amount to convert"}}, "required": ["amount_eur"]}}}], "type_of_output": "call", "ground_truth": {"name": "get_stock_price", "arguments": "{\"stock_name\": \"넷플릭스\"}"}, "acceptable_arguments": "{\"stock_name\": [\"Netflix\", \"NFLX(Netflix, Inc.)\"]}"}
{"serial_num": 4, "category": "CALL", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "I'm going to buy stocks for long -term investment."}], "input_tools": [{"type": "function", "function": {"name": "convertTimeBetweenTimezones", "description": "Convert time to another time in one time.", "parameters": {"type": "object", "properties": {"originalTime": {"type": "string", "description": "Reference time to convert (format HH: mm)"}, "fromTimezone": {"type": "string", "description": "Standard time zone (region name)"}, "toTimezone": {"type": "string", "description": "Time to be converted (region name)"}}, "required": ["originalTime", "fromTimezone", "toTimezone"]}}}, {"type": "function", "function": {"name": "find_group_or_club", "description": "Provides meetings or club information on certain topics based on the area around the specific location.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Where to find a meeting or club"}, "topic": {"type": "string", "description": "Interest"}}, "required": ["location", "topic"]}}}, {"type": "function", "function": {"name": "get_stock_price", "description": "Search the current price of a particular stock.", "parameters": {"type": "object", "properties": {"stock_name": {"type": "string", "description": "Stock name to look up"}}, "required": ["stock_name"]}}}, {"type": "function", "function": {"name": "compare_it_device_prices", "description": "It compares the price of IT devices from various sellers to provide low sales information.", "parameters": {"type": "object", "properties": {"device_name": {"type": "string", "description": "Name of IT devices that want to compare prices"}}, "required": ["device_name"]}}}, {"type": "function", "function": {"name": "deleteMemo", "description": "Delete the previously stored notes", "parameters": {"type": "object", "properties": {"memo_id": {"type": "string", "description": "A unique identifier of the memo to delete"}}, "required": ["memo_id"]}}}], "type_of_output": "call", "ground_truth": {"name": "get_stock_price", "arguments": "{\"stock_name\": \"삼성전자\"}"}, "acceptable_arguments": null}
{"serial_num": 5, "category": "CALL", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Please search the order status of the order number 'ABC-1234'."}], "input_tools": [{"type": "function", "function": {"name": "update_item_quantity_in_shopping_cart", "description": "Update the quantity of specific products in the shopping cart", "parameters": {"type": "object", "properties": {"user_id": {"type": "string", "description": "User's unique identifier"}, "product_id": {"type": "string", "description": "A unique identifier of products that want to update the quantity"}, "new_quantity": {"type": "integer", "description": "New quantity to update"}}, "required": ["user_id", "product_id", "new_quantity"]}}}, {"type": "function", "function": {"name": "convert_eur_to_jpy", "description": "Convert the given Euro (EUR) amount to JPY", "parameters": {"type": "object", "properties": {"amount_eur": {"type": "number", "description": "EUR amount to convert"}}, "required": ["amount_eur"]}}}, {"type": "function", "function": {"name": "track_order", "description": "Inquire an order status (ordering, payment completion, shipping, delivery, etc.) with a given order number and informed the expected shipping date or expected delivery date.", "parameters": {"type": "object", "properties": {"order_id": {"type": "string", "description": "Order number to search"}}, "required": ["order_id"]}}}, {"type": "function", "function": {"name": "convert_euro_to_koruna", "description": "Convert the Given EUR amount to Czech Coruna (CZK)", "parameters": {"type": "object", "properties": {"amount_euro": {"type": "number", "description": "EUR amount to convert"}, "exchange_rate_eur_to_czk": {"type": "number", "description": "Exchange rate from EUR to CZK"}}, "required": ["amount_euro", "exchange_rate_eur_to_czk"]}}}, {"type": "function", "function": {"name": "generate_playlist_based_on_favorite_artist", "description": "Create customized playlist based on preferred artists", "parameters": {"type": "object", "properties": {"artist_name": {"type": "string", "description": "The name of the artist that users prefer"}}, "required": ["artist_name"]}}}], "type_of_output": "call", "ground_truth": {"name": "track_order", "arguments": "{\"order_id\": \"ABC-1234\"}"}, "acceptable_arguments": "Only ground truth is allowed."}
{"serial_num": 6, "category": "CALL", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "I wonder when things will come. Can I track your order status?"}], "input_tools": [{"type": "function", "function": {"name": "add_movie_review", "description": "Add a review of a specific movie to the movie scrapbook.", "parameters": {"type": "object", "properties": {"movie_id": {"type": "string", "description": "ID of the movie to add a review"}, "review_text": {"type": "string", "description": "Movie review contents"}}, "required": ["movie_id", "review_text"]}}}, {"type": "function", "function": {"name": "search_email_content", "description": "Search for emails containing keywords specified by the user during the saved email.", "parameters": {"type": "object", "properties": {"keyword": {"type": "string", "description": "Keyword to search"}, "from_date": {"type": "string", "description": "Date to start searching (optional)"}, "to_date": {"type": "string", "description": "Date to finish the search (optional)"}, "sender": {"type": "string", "description": "Email caller address (optional)"}}, "required": ["keyword"]}}}, {"type": "function", "function": {"name": "track_order", "description": "Inquire an order status (ordering, payment completion, shipping, delivery, etc.) with a given order number and informed the expected shipping date or expected delivery date.", "parameters": {"type": "object", "properties": {"order_id": {"type": "string", "description": "Order number to search"}}, "required": ["order_id"]}}}, {"type": "function", "function": {"name": "deleteMemo", "description": "Delete the previously stored notes", "parameters": {"type": "object", "properties": {"memo_id": {"type": "string", "description": "A unique identifier of the memo to delete"}}, "required": ["memo_id"]}}}, {"type": "function", "function": {"name": "informLottoNumberByRound", "description": "It is a function that informs the lottery winning number of a specific episode.", "parameters": {"type": "object", "properties": {"round": {"type": "integer", "description": "The round to check the lottery winning number"}}, "required": ["round"]}}}], "type_of_output": "call", "ground_truth": {"name": "track_order", "arguments": "{\"order_id\": \"5678\"}"}, "acceptable_arguments": "Only ground truth is allowed."}
{"serial_num": 7, "category": "CALL", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Did you start delivery? Order number __Protect_0__Sume your order status."}], "input_tools": [{"type": "function", "function": {"name": "CallTaxi", "description": "Call a taxi from a specific location.", "parameters": {"type": "object", "properties": {"pickup_location": {"type": "string", "description": "Departure location (address, station name, building name, etc.)"}, "destination": {"type": "string", "description": "Arrival location (address, station name, building name, etc.)"}}, "required": ["pickup_location", "destination"]}}}, {"type": "function", "function": {"name": "calculate_distance", "description": "Based on location data, the distance between the two locations (kilometer units) is calculated", "parameters": {"type": "object", "properties": {"origin": {"type": "string", "description": "Standard location (city, state, country, village, landmark, etc.)"}, "destination": {"type": "string", "description": "Destination (city, state, country, village, landmark, etc.)"}}, "required": ["origin", "destination"]}}}, {"type": "function", "function": {"name": "track_order", "description": "Inquire an order status (ordering, payment completion, shipping, delivery, etc.) with a given order number and informed the expected shipping date or expected delivery date.", "parameters": {"type": "object", "properties": {"order_id": {"type": "string", "description": "Order number to search"}}, "required": ["order_id"]}}}, {"type": "function", "function": {"name": "view_shopping_cart", "description": "User's shopping cart contents inquiry", "parameters": {"type": "object", "properties": {"user_id": {"type": "string", "description": "User's unique identifier"}}, "required": ["user_id"]}}}, {"type": "function", "function": {"name": "calculate_bill_split", "description": "Divide the billed amount evenly to calculate the amount of money for each person.", "parameters": {"type": "object", "properties": {"bill_total": {"type": "number", "description": "Allied total amount"}, "num_people": {"type": "integer", "description": "The number of people who pay the amount."}}, "required": ["bill_total", "num_people"]}}}], "type_of_output": "call", "ground_truth": {"name": "track_order", "arguments": "{\"order_id\": \"XYZ5678\"}"}, "acceptable_arguments": "Only ground truth is allowed."}
{"serial_num": 8, "category": "CALL", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "I wonder what the product I ordered is. The order number is 8765-PQ."}], "input_tools": [{"type": "function", "function": {"name": "check_traffic_status", "description": "Inquire the current traffic situation on a particular path.", "parameters": {"type": "object", "properties": {"start_location": {"type": "string", "description": "Departure"}, "end_location": {"type": "string", "description": "Arrival point"}}, "required": ["start_location", "end_location"]}}}, {"type": "function", "function": {"name": "schedule_meeting", "description": "Book a meeting.", "parameters": {"type": "object", "properties": {"participants": {"type": "string", "description": "Participant list (if there are multiple participants, it is divided into a comma (,).)"}, "date_time": {"type": "string", "description": "Date and time of meeting (yyyy-mm-dd hh: mm format)"}}, "required": ["participants", "date_time"]}}}, {"type": "function", "function": {"name": "track_order", "description": "Inquire an order status (ordering, payment completion, shipping, delivery, etc.) with a given order number and informed the expected shipping date or expected delivery date.", "parameters": {"type": "object", "properties": {"order_id": {"type": "string", "description": "Order number to search"}}, "required": ["order_id"]}}}, {"type": "function", "function": {"name": "convert_eur_to_jpy", "description": "Convert the given Euro (EUR) amount to JPY", "parameters": {"type": "object", "properties": {"amount_eur": {"type": "number", "description": "EUR amount to convert"}}, "required": ["amount_eur"]}}}, {"type": "function", "function": {"name": "informLottoWinnerPrizeByDate", "description": "It is a function that informs the amount of lottery winnings on a specific date.", "parameters": {"type": "object", "properties": {"date": {"type": "string", "description": "Date to check the amount of lottery winnings (e.g., March 4)"}}, "required": ["date"]}}}], "type_of_output": "call", "ground_truth": {"name": "track_order", "arguments": "{\"order_id\": \"8765-PQ\"}"}, "acceptable_arguments": "Only ground truth is allowed."}
{"serial_num": 9, "category": "CALL", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "I need to cook the ingredients a little bit, so I need a 50 second timer."}], "input_tools": [{"type": "function", "function": {"name": "generate_syntax_tree_from_text", "description": "Create a syntax tree for a given text", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Text to create a syntax tree"}}, "required": ["text"]}}}, {"type": "function", "function": {"name": "deleteMemo", "description": "Delete the previously stored notes", "parameters": {"type": "object", "properties": {"memo_id": {"type": "string", "description": "A unique identifier of the memo to delete"}}, "required": ["memo_id"]}}}, {"type": "function", "function": {"name": "setTimer", "description": "Set the timer as much as the user requested.", "parameters": {"type": "object", "properties": {"duration": {"type": "number", "description": "Timer setting time (unit: seconds)"}}, "required": ["duration"]}}}, {"type": "function", "function": {"name": "registerFriendBirthday", "description": "A function that registers a friend's name and birthday information", "parameters": {"type": "object", "properties": {"friendName": {"type": "string", "description": "A friend's name to register"}, "birthday": {"type": "string", "description": "The birthday of a friend to register (YYYY-MM-DD format)"}}, "required": ["friendName", "birthday"]}}}, {"type": "function", "function": {"name": "count_lowercase_letters", "description": "The number of lowercase in the string", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Cell string for lowercase"}}, "required": ["text"]}}}], "type_of_output": "call", "ground_truth": {"name": "setTimer", "arguments": "{\"duration\": 50}"}, "acceptable_arguments": "Only ground truth is allowed."}
{"serial_num": 10, "category": "CALL", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "I boiled eggs and I want to put it in cold water for a while. Start 100 seconds of timer."}], "input_tools": [{"type": "function", "function": {"name": "count_uppercase_letters", "description": "The number of uppercase letters in the string", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Cell string"}}, "required": ["text"]}}}, {"type": "function", "function": {"name": "calculateWaterIntakeRequirement", "description": "Daily recommended water intake based on weight based on weight", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}}, "required": ["weight"]}}}, {"type": "function", "function": {"name": "setTimer", "description": "Set the timer as much as the user requested.", "parameters": {"type": "object", "properties": {"duration": {"type": "number", "description": "Timer setting time (unit: seconds)"}}, "required": ["duration"]}}}, {"type": "function", "function": {"name": "get_movie_schedule", "description": "Inquire a certain date and screening schedule for a specific movie theater.", "parameters": {"type": "object", "properties": {"movie_date": {"type": "string", "description": "Date to look up (YYYY-MM-DD)"}, "movie_location": {"type": "string", "description": "Cinema to look upon"}}, "required": ["movie_date", "movie_location"]}}}, {"type": "function", "function": {"name": "compareCleaningServices", "description": "Compare the service of the cleaning company and provide information.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Location or area where cleaning services are needed"}, "requested_date": {"type": "string", "format": "date", "description": "Service date (extract user as it is. Example: next Monday, January 1, 2022, etc.)"}, "size": {"type": "string", "description": "Pyeongsu or area of ​​the house (flat, square meter)"}}, "required": ["location", "requested_date", "size"]}}}], "type_of_output": "call", "ground_truth": {"name": "setTimer", "arguments": "{\"duration\": 100}"}, "acceptable_arguments": "Only ground truth is allowed."}
{"serial_num": 11, "category": "CALL", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "I'm going to squat. Set the 60 -second timer."}], "input_tools": [{"type": "function", "function": {"name": "informLottoWinnerPrizeByRound", "description": "It is a function that informs the amount of lottery winnings of a specific episode.", "parameters": {"type": "object", "properties": {"round": {"type": "integer", "description": "A round that wants to check the amount of lottery winnings (e.g. 1001)"}}, "required": ["round"]}}}, {"type": "function", "function": {"name": "search_email_content", "description": "Search for emails containing keywords specified by the user during the saved email.", "parameters": {"type": "object", "properties": {"keyword": {"type": "string", "description": "Keyword to search"}, "from_date": {"type": "string", "description": "Date to start searching (optional)"}, "to_date": {"type": "string", "description": "Date to finish the search (optional)"}, "sender": {"type": "string", "description": "Email caller address (optional)"}}, "required": ["keyword"]}}}, {"type": "function", "function": {"name": "setTimer", "description": "Set the timer as much as the user requested.", "parameters": {"type": "object", "properties": {"duration": {"type": "number", "description": "Timer setting time (unit: seconds)"}}, "required": ["duration"]}}}, {"type": "function", "function": {"name": "getDayOfWeek", "description": "Returns the day of the given date.", "parameters": {"type": "object", "properties": {"date": {"type": "string", "description": "Yyyy-mm-DD format date"}}, "required": ["date"]}}}, {"type": "function", "function": {"name": "calculate_distance", "description": "Based on location data, the distance between the two locations (kilometer units) is calculated", "parameters": {"type": "object", "properties": {"origin": {"type": "string", "description": "Standard location (city, state, country, village, landmark, etc.)"}, "destination": {"type": "string", "description": "Destination (city, state, country, village, landmark, etc.)"}}, "required": ["origin", "destination"]}}}], "type_of_output": "call", "ground_truth": {"name": "setTimer", "arguments": "{\"duration\": 60}"}, "acceptable_arguments": "Only ground truth is allowed."}
{"serial_num": 12, "category": "CALL", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Can you start a three -hundred second timer for a brief meditation?"}], "input_tools": [{"type": "function", "function": {"name": "find_nearest_emergency_room_by_location", "description": "Based on a specific location, it provides the location and information of the nearby emergency room.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Current location (example: station, address, building name, etc.)"}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "add_contact", "description": "Register a new contact.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "Name to register a contact"}, "phone": {"type": "string", "description": "phone number"}, "email": {"type": "string", "description": "Email address"}}, "required": ["name"]}}}, {"type": "function", "function": {"name": "setTimer", "description": "Set the timer as much as the user requested.", "parameters": {"type": "object", "properties": {"duration": {"type": "number", "description": "Timer setting time (unit: seconds)"}}, "required": ["duration"]}}}, {"type": "function", "function": {"name": "create_user", "description": "Create a new user account.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "User's name"}, "email": {"type": "string", "description": "User's email address"}, "password": {"type": "string", "description": "User's password"}}, "required": ["name", "email", "password"]}}}, {"type": "function", "function": {"name": "count_words", "description": "Calculation of words in a given text (sentence or paragraph)", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Cell text"}}, "required": ["text"]}}}], "type_of_output": "call", "ground_truth": {"name": "setTimer", "arguments": "{\"duration\": 300}"}, "acceptable_arguments": "Only ground truth is allowed."}
{"serial_num": 13, "category": "CALL", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "How much is Bitcoin being traded today?"}], "input_tools": [{"type": "function", "function": {"name": "CallTaxi", "description": "Call a taxi from a specific location.", "parameters": {"type": "object", "properties": {"pickup_location": {"type": "string", "description": "Departure location (address, station name, building name, etc.)"}, "destination": {"type": "string", "description": "Arrival location (address, station name, building name, etc.)"}}, "required": ["pickup_location", "destination"]}}}, {"type": "function", "function": {"name": "convert_squaremeter_to_pyeong", "description": "Convert it to \"제곱미터\"를 입력받아서, \"평\".", "parameters": {"type": "object", "properties": {"squaremeter": {"type": "number", "description": "Square"}}, "required": ["squaremeter"]}}}, {"type": "function", "function": {"name": "getCryptocurrencyPrice", "description": "Inquire the current price of a specific cryptocurrency.", "parameters": {"type": "object", "properties": {"cryptocurrency": {"type": "string", "description": "Cryptocurrency name to view the price"}}, "required": ["cryptocurrency"]}}}, {"type": "function", "function": {"name": "search_contact", "description": "Search for a list of contacts in the name of a person and bring his phone number and email address.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "The name of a person who wants to check the contact"}}, "required": ["name"]}}}, {"type": "function", "function": {"name": "calculateIdealWeight", "description": "Ideal weight calculation using Lorentz formula", "parameters": {"type": "object", "properties": {"height": {"type": "number", "description": "Centimeter key"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["height", "gender"]}}}], "type_of_output": "call", "ground_truth": {"name": "getCryptocurrencyPrice", "arguments": "{\"cryptocurrency\": \"비트코인\"}"}, "acceptable_arguments": null}
{"serial_num": 14, "category": "CALL", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Ethereum Price can you find out what's going on?"}], "input_tools": [{"type": "function", "function": {"name": "calculate_bill_split", "description": "Divide the billed amount evenly to calculate the amount of money for each person.", "parameters": {"type": "object", "properties": {"bill_total": {"type": "number", "description": "Allied total amount"}, "num_people": {"type": "integer", "description": "The number of people who pay the amount."}}, "required": ["bill_total", "num_people"]}}}, {"type": "function", "function": {"name": "search_flight", "description": "Search for a flight from a specific airport and arriving at a specific airport.", "parameters": {"type": "object", "properties": {"departure_airport": {"type": "string", "description": "Departure airport name (extracted as user expression. Example: Los Angeles International Airport, Gimhae Airport, etc.)"}, "arrival_airport": {"type": "string", "description": "Arrival airport name (extracting as it is, Example: Los Angeles International Airport, Gimhae Airport, etc.)"}, "departure_date": {"type": "string", "description": "Departure Date (YYYY-MM-DD)"}}, "required": ["departure_airport", "arrival_airport", "departure_date"]}}}, {"type": "function", "function": {"name": "getCryptocurrencyPrice", "description": "Inquire the current price of a specific cryptocurrency.", "parameters": {"type": "object", "properties": {"cryptocurrency": {"type": "string", "description": "Cryptocurrency name to view the price"}}, "required": ["cryptocurrency"]}}}, {"type": "function", "function": {"name": "check_traffic_status", "description": "Inquire the current traffic situation on a particular path.", "parameters": {"type": "object", "properties": {"start_location": {"type": "string", "description": "Departure"}, "end_location": {"type": "string", "description": "Arrival point"}}, "required": ["start_location", "end_location"]}}}, {"type": "function", "function": {"name": "schedule_meeting", "description": "Book a meeting.", "parameters": {"type": "object", "properties": {"participants": {"type": "string", "description": "Participant list (if there are multiple participants, it is divided into a comma (,).)"}, "date_time": {"type": "string", "description": "Date and time of meeting (yyyy-mm-dd hh: mm format)"}}, "required": ["participants", "date_time"]}}}], "type_of_output": "call", "ground_truth": {"name": "getCryptocurrencyPrice", "arguments": "{\"cryptocurrency\": \"이더리움\"}"}, "acceptable_arguments": null}
{"serial_num": 15, "category": "CALL", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "How much is it now?"}], "input_tools": [{"type": "function", "function": {"name": "compareCleaningServices", "description": "Compare the service of the cleaning company and provide information.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Location or area where cleaning services are needed"}, "requested_date": {"type": "string", "format": "date", "description": "Service date (extract user as it is. Example: next Monday, January 1, 2022, etc.)"}, "size": {"type": "string", "description": "Pyeongsu or area of ​​the house (flat, square meter)"}}, "required": ["location", "requested_date", "size"]}}}, {"type": "function", "function": {"name": "checkBankBalance", "description": "Look up the balance of a specific bank account.", "parameters": {"type": "object", "properties": {"accountBank": {"type": "string", "description": "The bank name of the account to view the balance"}, "accountNumber": {"type": "string", "description": "Account number to view the balance"}}, "required": ["accountBank", "accountNumber"]}}}, {"type": "function", "function": {"name": "getCryptocurrencyPrice", "description": "Inquire the current price of a specific cryptocurrency.", "parameters": {"type": "object", "properties": {"cryptocurrency": {"type": "string", "description": "Cryptocurrency name to view the price"}}, "required": ["cryptocurrency"]}}}, {"type": "function", "function": {"name": "add_contact", "description": "Register a new contact.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "Name to register a contact"}, "phone": {"type": "string", "description": "phone number"}, "email": {"type": "string", "description": "Email address"}}, "required": ["name"]}}}, {"type": "function", "function": {"name": "CheckTaxRefund", "description": "Search for the user's tax refund.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "The name of the tax paymenter"}, "birth": {"type": "string", "description": "Date of birth of tax payers (YYYY-MM-DD)"}, "phone_number": {"type": "string", "description": "Contact of tax payers"}}, "required": ["name", "birth", "phone_number"]}}}], "type_of_output": "call", "ground_truth": {"name": "getCryptocurrencyPrice", "arguments": "{\"cryptocurrency\": \"렌더토큰\"}"}, "acceptable_arguments": "{\"cryptocurrency\": [\"Render\", \"RenderToken\"]}"}
{"serial_num": 16, "category": "CALL", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Can you know the current price of the chain link?"}], "input_tools": [{"type": "function", "function": {"name": "calculate_distance", "description": "Based on location data, the distance between the two locations (kilometer units) is calculated", "parameters": {"type": "object", "properties": {"origin": {"type": "string", "description": "Standard location (city, state, country, village, landmark, etc.)"}, "destination": {"type": "string", "description": "Destination (city, state, country, village, landmark, etc.)"}}, "required": ["origin", "destination"]}}}, {"type": "function", "function": {"name": "getHistoricalMinMaxTemperature", "description": "In the past, we look up for the minimum temperature and the highest temperature in certain regions.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "The name of the area to be searched"}, "date": {"type": "string", "description": "Date to look up ('YYYY-MM-DD' format)"}}, "required": ["location", "date"]}}}, {"type": "function", "function": {"name": "getCryptocurrencyPrice", "description": "Inquire the current price of a specific cryptocurrency.", "parameters": {"type": "object", "properties": {"cryptocurrency": {"type": "string", "description": "Cryptocurrency name to view the price"}}, "required": ["cryptocurrency"]}}}, {"type": "function", "function": {"name": "schedule_laundry_pickup", "description": "Apply for a service to collect laundry.", "parameters": {"type": "object", "properties": {"pickup_location": {"type": "string", "description": "Extract the location of the user as it is to collect the laundry. (Example: House, 101 -dong 102, etc."}, "pickup_date": {"type": "string", "description": "Extract the laundry collection date as it is. (Example: next Monday, January 1, 2022, etc.)"}, "pickup_time": {"type": "string", "description": "Extract the time to collect the laundry as it is. (Example: 2 pm, 7 pm, etc.)"}}, "required": ["pickup_location", "pickup_date", "pickup_time"]}}}, {"type": "function", "function": {"name": "calculateCaloriesBurnedByWalking", "description": "Calculate the amount of calories consumed while walking on a given street.", "parameters": {"type": "object", "properties": {"distance": {"type": "number", "description": "Walking distance (kilometers)"}, "weight": {"type": "number", "description": "User's weight (kilogram unit)"}}, "required": ["distance", "weight"]}}}], "type_of_output": "call", "ground_truth": {"name": "getCryptocurrencyPrice", "arguments": "{\"cryptocurrency\": \"체인링크\"}"}, "acceptable_arguments": null}
{"serial_num": 17, "category": "CALL", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Can you compare the price of Samsung Galaxy S22?"}], "input_tools": [{"type": "function", "function": {"name": "getDayOfWeek", "description": "Returns the day of the given date.", "parameters": {"type": "object", "properties": {"date": {"type": "string", "description": "Yyyy-mm-DD format date"}}, "required": ["date"]}}}, {"type": "function", "function": {"name": "calculateIdealWeight", "description": "Ideal weight calculation using Lorentz formula", "parameters": {"type": "object", "properties": {"height": {"type": "number", "description": "Centimeter key"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["height", "gender"]}}}, {"type": "function", "function": {"name": "compare_it_device_prices", "description": "It compares the price of IT devices from various sellers to provide low sales information.", "parameters": {"type": "object", "properties": {"device_name": {"type": "string", "description": "Name of IT devices that want to compare prices"}}, "required": ["device_name"]}}}, {"type": "function", "function": {"name": "getCryptocurrencyPrice", "description": "Inquire the current price of a specific cryptocurrency.", "parameters": {"type": "object", "properties": {"cryptocurrency": {"type": "string", "description": "Cryptocurrency name to view the price"}}, "required": ["cryptocurrency"]}}}, {"type": "function", "function": {"name": "count_words", "description": "Calculation of words in a given text (sentence or paragraph)", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Cell text"}}, "required": ["text"]}}}], "type_of_output": "call", "ground_truth": {"name": "compare_it_device_prices", "arguments": "{\"device_name\": \"삼성 갤럭시 S22\"}"}, "acceptable_arguments": null}
{"serial_num": 18, "category": "CALL", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Lenovo 2023 I want to compare the price of yoga slim notebook"}], "input_tools": [{"type": "function", "function": {"name": "informWeather", "description": "Provide current weather information in a particular area", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Local name to bring weather information"}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "convert_pyeong_to_squaremeter", "description": "Convert it to \"평\"을 입력받아서, \"제곱미터\".", "parameters": {"type": "object", "properties": {"pyeong": {"type": "number", "description": "Pyeongsu to be transformed"}}, "required": ["pyeong"]}}}, {"type": "function", "function": {"name": "compare_it_device_prices", "description": "It compares the price of IT devices from various sellers to provide low sales information.", "parameters": {"type": "object", "properties": {"device_name": {"type": "string", "description": "Name of IT devices that want to compare prices"}}, "required": ["device_name"]}}}, {"type": "function", "function": {"name": "getCurrentTopSeries", "description": "We offer the current popular TV series rankings", "parameters": {"type": "object", "properties": {}, "required": []}}}, {"type": "function", "function": {"name": "checkBankBalance", "description": "Look up the balance of a specific bank account.", "parameters": {"type": "object", "properties": {"accountBank": {"type": "string", "description": "The bank name of the account to view the balance"}, "accountNumber": {"type": "string", "description": "Account number to view the balance"}}, "required": ["accountBank", "accountNumber"]}}}], "type_of_output": "call", "ground_truth": {"name": "compare_it_device_prices", "arguments": "{\"device_name\": \"레노버 2023 요가 슬림 노트북\"}"}, "acceptable_arguments": null}
{"serial_num": 19, "category": "CALL", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Compare the price of AirPod Pro 2 at various retailers"}], "input_tools": [{"type": "function", "function": {"name": "deleteMemo", "description": "Delete the previously stored notes", "parameters": {"type": "object", "properties": {"memo_id": {"type": "string", "description": "A unique identifier of the memo to delete"}}, "required": ["memo_id"]}}}, {"type": "function", "function": {"name": "add_movie_review", "description": "Add a review of a specific movie to the movie scrapbook.", "parameters": {"type": "object", "properties": {"movie_id": {"type": "string", "description": "ID of the movie to add a review"}, "review_text": {"type": "string", "description": "Movie review contents"}}, "required": ["movie_id", "review_text"]}}}, {"type": "function", "function": {"name": "compare_it_device_prices", "description": "It compares the price of IT devices from various sellers to provide low sales information.", "parameters": {"type": "object", "properties": {"device_name": {"type": "string", "description": "Name of IT devices that want to compare prices"}}, "required": ["device_name"]}}}, {"type": "function", "function": {"name": "create_playlist", "description": "Create a music playlist that fits the user's tastes and conditions", "parameters": {"type": "object", "properties": {"genre": {"type": "string", "description": "The genre of music to be included in the playlist"}, "mood": {"type": "string", "description": "Playlist's mood or atmosphere"}, "count": {"type": "integer", "description": "The number of songs to be included in the playlist"}, "include_live": {"type": "boolean", "description": "Live version songs include"}}, "required": ["genre", "mood", "count"]}}}, {"type": "function", "function": {"name": "convert_euro_to_koruna", "description": "Convert the Given EUR amount to Czech Coruna (CZK)", "parameters": {"type": "object", "properties": {"amount_euro": {"type": "number", "description": "EUR amount to convert"}, "exchange_rate_eur_to_czk": {"type": "number", "description": "Exchange rate from EUR to CZK"}}, "required": ["amount_euro", "exchange_rate_eur_to_czk"]}}}], "type_of_output": "call", "ground_truth": {"name": "compare_it_device_prices", "arguments": "{\"device_name\": \"에어팟 프로2\"}"}, "acceptable_arguments": null}
{"serial_num": 20, "category": "CALL", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "I want to compare the price of the HP Specter X360 laptop in several companies."}], "input_tools": [{"type": "function", "function": {"name": "add_movie_review", "description": "Add a review of a specific movie to the movie scrapbook.", "parameters": {"type": "object", "properties": {"movie_id": {"type": "string", "description": "ID of the movie to add a review"}, "review_text": {"type": "string", "description": "Movie review contents"}}, "required": ["movie_id", "review_text"]}}}, {"type": "function", "function": {"name": "convert_krw_to_usd", "description": "Converted Korean money (KRW) to USD (USD)", "parameters": {"type": "object", "properties": {"amount_krw": {"type": "number", "description": "Korean money (KRW) amount to convert"}, "exchange_rate_krw_to_usd": {"type": "number", "description": "Exchange rate from KRW to USD"}}, "required": ["amount_krw", "exchange_rate_krw_to_usd"]}}}, {"type": "function", "function": {"name": "compare_it_device_prices", "description": "It compares the price of IT devices from various sellers to provide low sales information.", "parameters": {"type": "object", "properties": {"device_name": {"type": "string", "description": "Name of IT devices that want to compare prices"}}, "required": ["device_name"]}}}, {"type": "function", "function": {"name": "calculate_bill_split", "description": "Divide the billed amount evenly to calculate the amount of money for each person.", "parameters": {"type": "object", "properties": {"bill_total": {"type": "number", "description": "Allied total amount"}, "num_people": {"type": "integer", "description": "The number of people who pay the amount."}}, "required": ["bill_total", "num_people"]}}}, {"type": "function", "function": {"name": "track_order", "description": "Inquire an order status (ordering, payment completion, shipping, delivery, etc.) with a given order number and informed the expected shipping date or expected delivery date.", "parameters": {"type": "object", "properties": {"order_id": {"type": "string", "description": "Order number to search"}}, "required": ["order_id"]}}}], "type_of_output": "call", "ground_truth": {"name": "compare_it_device_prices", "arguments": "{\"device_name\": \"HP 스펙터 x360 노트북\"}"}, "acceptable_arguments": null}
{"serial_num": 21, "category": "CALL", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Gangnam N Tower, where is the emergency room around?"}], "input_tools": [{"type": "function", "function": {"name": "getCurrentKoreaTime", "description": "Currently, the time of Korea is returned to year-month-day: minor: second format.", "parameters": {}}}, {"type": "function", "function": {"name": "registerFriendBirthday", "description": "A function that registers a friend's name and birthday information", "parameters": {"type": "object", "properties": {"friendName": {"type": "string", "description": "A friend's name to register"}, "birthday": {"type": "string", "description": "The birthday of a friend to register (YYYY-MM-DD format)"}}, "required": ["friendName", "birthday"]}}}, {"type": "function", "function": {"name": "find_nearest_emergency_room_by_location", "description": "Based on a specific location, it provides the location and information of the nearby emergency room.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Current location (example: station, address, building name, etc.)"}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "FindPrinterError", "description": "Returns the current error status (lack of paper, lack of ink, etc.) of certain printers in the company.", "parameters": {"type": "object", "properties": {"PrinterLocation": {"type": "string", "description": "The location of the printer to identify the error condition"}}, "required": ["PrinterLocation"]}}}, {"type": "function", "function": {"name": "update_item_quantity_in_shopping_cart", "description": "Update the quantity of specific products in the shopping cart", "parameters": {"type": "object", "properties": {"user_id": {"type": "string", "description": "User's unique identifier"}, "product_id": {"type": "string", "description": "A unique identifier of products that want to update the quantity"}, "new_quantity": {"type": "integer", "description": "New quantity to update"}}, "required": ["user_id", "product_id", "new_quantity"]}}}], "type_of_output": "call", "ground_truth": {"name": "find_nearest_emergency_room_by_location", "arguments": "{\"location\": \"강남n타워\"}"}, "acceptable_arguments": null}
{"serial_num": 22, "category": "CALL", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "I would like to find an emergency room near Hyundai Department Store in Samseong -dong."}], "input_tools": [{"type": "function", "function": {"name": "search_message_content", "description": "Search for a message containing the keywords specified by the user among the saved messages.", "parameters": {"type": "object", "properties": {"keyword": {"type": "string", "description": "Keyword to search"}, "from_date": {"type": "string", "description": "Date to start searching (optional)"}, "to_date": {"type": "string", "description": "Date to finish the search (optional)"}}, "required": ["keyword"]}}}, {"type": "function", "function": {"name": "calculate_distance", "description": "Based on location data, the distance between the two locations (kilometer units) is calculated", "parameters": {"type": "object", "properties": {"origin": {"type": "string", "description": "Standard location (city, state, country, village, landmark, etc.)"}, "destination": {"type": "string", "description": "Destination (city, state, country, village, landmark, etc.)"}}, "required": ["origin", "destination"]}}}, {"type": "function", "function": {"name": "find_nearest_emergency_room_by_location", "description": "Based on a specific location, it provides the location and information of the nearby emergency room.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Current location (example: station, address, building name, etc.)"}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "generate_image_from_text", "description": "Create a picture based on a given text", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Text to create a picture"}}, "required": ["text"]}}}, {"type": "function", "function": {"name": "track_order", "description": "Inquire an order status (ordering, payment completion, shipping, delivery, etc.) with a given order number and informed the expected shipping date or expected delivery date.", "parameters": {"type": "object", "properties": {"order_id": {"type": "string", "description": "Order number to search"}}, "required": ["order_id"]}}}], "type_of_output": "call", "ground_truth": {"name": "find_nearest_emergency_room_by_location", "arguments": "{\"location\": \"삼성동 현대백화점\"}"}, "acceptable_arguments": null}
{"serial_num": 23, "category": "CALL", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "I'm curious about the location of the emergency room around you. The current location address is 1822 southern circulation in Gwanak -gu, Seoul."}], "input_tools": [{"type": "function", "function": {"name": "deleteMemo", "description": "Delete the previously stored notes", "parameters": {"type": "object", "properties": {"memo_id": {"type": "string", "description": "A unique identifier of the memo to delete"}}, "required": ["memo_id"]}}}, {"type": "function", "function": {"name": "discover_new_releases_kpop", "description": "Provides the latest music release information of the K -pop genre", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "find_nearest_emergency_room_by_location", "description": "Based on a specific location, it provides the location and information of the nearby emergency room.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Current location (example: station, address, building name, etc.)"}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "search_flight", "description": "Search for a flight from a specific airport and arriving at a specific airport.", "parameters": {"type": "object", "properties": {"departure_airport": {"type": "string", "description": "Departure airport name (extracted as user expression. Example: Los Angeles International Airport, Gimhae Airport, etc.)"}, "arrival_airport": {"type": "string", "description": "Arrival airport name (extracting as it is, Example: Los Angeles International Airport, Gimhae Airport, etc.)"}, "departure_date": {"type": "string", "description": "Departure Date (YYYY-MM-DD)"}}, "required": ["departure_airport", "arrival_airport", "departure_date"]}}}, {"type": "function", "function": {"name": "schedule_meeting", "description": "Book a meeting.", "parameters": {"type": "object", "properties": {"participants": {"type": "string", "description": "Participant list (if there are multiple participants, it is divided into a comma (,).)"}, "date_time": {"type": "string", "description": "Date and time of meeting (yyyy-mm-dd hh: mm format)"}}, "required": ["participants", "date_time"]}}}], "type_of_output": "call", "ground_truth": {"name": "find_nearest_emergency_room_by_location", "arguments": "{\"location\": \"서울 관악구 남부순환로 1822\"}"}, "acceptable_arguments": null}
{"serial_num": 24, "category": "CALL", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "I want to know if there is an emergency room around Cheonan Station."}], "input_tools": [{"type": "function", "function": {"name": "generate_syntax_tree_from_text", "description": "Create a syntax tree for a given text", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Text to create a syntax tree"}}, "required": ["text"]}}}, {"type": "function", "function": {"name": "getDayOfWeek", "description": "Returns the day of the given date.", "parameters": {"type": "object", "properties": {"date": {"type": "string", "description": "Yyyy-mm-DD format date"}}, "required": ["date"]}}}, {"type": "function", "function": {"name": "find_nearest_emergency_room_by_location", "description": "Based on a specific location, it provides the location and information of the nearby emergency room.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Current location (example: station, address, building name, etc.)"}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "create_playlist", "description": "Create a music playlist that fits the user's tastes and conditions", "parameters": {"type": "object", "properties": {"genre": {"type": "string", "description": "The genre of music to be included in the playlist"}, "mood": {"type": "string", "description": "Playlist's mood or atmosphere"}, "count": {"type": "integer", "description": "The number of songs to be included in the playlist"}, "include_live": {"type": "boolean", "description": "Live version songs include"}}, "required": ["genre", "mood", "count"]}}}, {"type": "function", "function": {"name": "add_item_to_shopping_cart", "description": "Add new products to the shopping cart", "parameters": {"type": "object", "properties": {"product_id": {"type": "string", "description": "The unique identifier of the product you want to add"}, "quantity": {"type": "integer", "description": "Quantity"}}, "required": ["product_id", "quantity"]}}}], "type_of_output": "call", "ground_truth": {"name": "find_nearest_emergency_room_by_location", "arguments": "{\"location\": \"천안역\"}"}, "acceptable_arguments": null}
{"serial_num": 25, "category": "CALL", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "The 3rd floor lounge printer does not work, but check what the problem is"}], "input_tools": [{"type": "function", "function": {"name": "checkBankBalance", "description": "Look up the balance of a specific bank account.", "parameters": {"type": "object", "properties": {"accountBank": {"type": "string", "description": "The bank name of the account to view the balance"}, "accountNumber": {"type": "string", "description": "Account number to view the balance"}}, "required": ["accountBank", "accountNumber"]}}}, {"type": "function", "function": {"name": "getMonthlyBoxOfficeRanking", "description": "It offers a monthly box office ranking for the designated year and month.", "parameters": {"type": "object", "properties": {"year": {"type": "string", "description": "The year to look up (yyyy format)"}, "month": {"type": "string", "description": "Month to look up (MM format)"}}, "required": ["year", "month"]}}}, {"type": "function", "function": {"name": "FindPrinterError", "description": "Returns the current error status (lack of paper, lack of ink, etc.) of certain printers in the company.", "parameters": {"type": "object", "properties": {"PrinterLocation": {"type": "string", "description": "The location of the printer to identify the error condition"}}, "required": ["PrinterLocation"]}}}, {"type": "function", "function": {"name": "translate_text_to_english", "description": "Translate the given text into English", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Text translation in English"}}, "required": ["text"]}}}, {"type": "function", "function": {"name": "calculateCaloricNeeds", "description": "A function that estimates the average daily calorie consumption", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}, "height": {"type": "number", "description": "Centimeter key"}, "age": {"type": "integer", "description": "age"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["weight", "height", "age", "gender"]}}}], "type_of_output": "call", "ground_truth": {"name": "FindPrinterError", "arguments": "{\"PrinterLocation\": \"3층 라운지\"}"}, "acceptable_arguments": null}
{"serial_num": 26, "category": "CALL", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "There was a problem in the F02 meeting room printer. Can you check your current status?"}], "input_tools": [{"type": "function", "function": {"name": "get_stock_price", "description": "Search the current price of a particular stock.", "parameters": {"type": "object", "properties": {"stock_name": {"type": "string", "description": "Stock name to look up"}}, "required": ["stock_name"]}}}, {"type": "function", "function": {"name": "generate_image_from_text", "description": "Create a picture based on a given text", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Text to create a picture"}}, "required": ["text"]}}}, {"type": "function", "function": {"name": "FindPrinterError", "description": "Returns the current error status (lack of paper, lack of ink, etc.) of certain printers in the company.", "parameters": {"type": "object", "properties": {"PrinterLocation": {"type": "string", "description": "The location of the printer to identify the error condition"}}, "required": ["PrinterLocation"]}}}, {"type": "function", "function": {"name": "generate_random_special_chars", "description": "Randomly return by selecting 5 special characters randomly from a special character set.", "parameters": {"type": "object", "properties": {}, "required": []}}}, {"type": "function", "function": {"name": "informTyphoon", "description": "It provides location information of the current typhoon.", "parameters": {"type": "object", "properties": {"typhoonName": {"type": "string", "description": "The name of the typhoon to look upon"}}, "required": ["typhoonName"]}}}], "type_of_output": "call", "ground_truth": {"name": "FindPrinterError", "arguments": "{\"PrinterLocation\": \"F02 회의실\"}"}, "acceptable_arguments": null}
{"serial_num": 27, "category": "CALL", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "The secretary's office printer floated an error message. Tell me what the problem"}], "input_tools": [{"type": "function", "function": {"name": "get_rainfall_probability", "description": "It brings probability information in a particular area.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Local name"}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "getWeatherForecastForNext7Days", "description": "For the designated area, we offer a 7 -day weather forecast, including today.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "The name of the area where the weather forecast"}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "FindPrinterError", "description": "Returns the current error status (lack of paper, lack of ink, etc.) of certain printers in the company.", "parameters": {"type": "object", "properties": {"PrinterLocation": {"type": "string", "description": "The location of the printer to identify the error condition"}}, "required": ["PrinterLocation"]}}}, {"type": "function", "function": {"name": "calculateBMR", "description": "Basal metabolic rate calculation", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}, "height": {"type": "number", "description": "Centimeter key"}, "age": {"type": "integer", "description": "age"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["weight", "height", "age", "gender"]}}}, {"type": "function", "function": {"name": "getDayOfWeek", "description": "Returns the day of the given date.", "parameters": {"type": "object", "properties": {"date": {"type": "string", "description": "Yyyy-mm-DD format date"}}, "required": ["date"]}}}], "type_of_output": "call", "ground_truth": {"name": "FindPrinterError", "arguments": "{\"PrinterLocation\": \"비서실\"}"}, "acceptable_arguments": null}
{"serial_num": 28, "category": "CALL", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "The 8th floor lobby printer continues to show an error. Can I check the situation now?"}], "input_tools": [{"type": "function", "function": {"name": "calculate_bmi", "description": "Calculation of human body mass index (BMI)", "parameters": {"type": "object", "properties": {"height": {"type": "number", "description": "Centimeter key"}, "weight": {"type": "number", "description": "Kilogram unit weight"}}, "required": ["height", "weight"]}}}, {"type": "function", "function": {"name": "convert_currency", "description": "Returns a value that exchanges a currency into another currency.", "parameters": {"type": "object", "properties": {"amount": {"type": "number", "description": "Money"}, "from": {"type": "string", "description": "Type of currency currency exchange"}, "to": {"type": "string", "description": "Type of currency exchange results"}}, "required": ["amount", "from", "to"]}}}, {"type": "function", "function": {"name": "FindPrinterError", "description": "Returns the current error status (lack of paper, lack of ink, etc.) of certain printers in the company.", "parameters": {"type": "object", "properties": {"PrinterLocation": {"type": "string", "description": "The location of the printer to identify the error condition"}}, "required": ["PrinterLocation"]}}}, {"type": "function", "function": {"name": "convert_pyeong_to_squaremeter", "description": "Convert it to \"평\"을 입력받아서, \"제곱미터\".", "parameters": {"type": "object", "properties": {"pyeong": {"type": "number", "description": "Pyeongsu to be transformed"}}, "required": ["pyeong"]}}}, {"type": "function", "function": {"name": "calculateCaloricNeeds", "description": "A function that estimates the average daily calorie consumption", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}, "height": {"type": "number", "description": "Centimeter key"}, "age": {"type": "integer", "description": "age"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["weight", "height", "age", "gender"]}}}], "type_of_output": "call", "ground_truth": {"name": "FindPrinterError", "arguments": "{\"PrinterLocation\": \"8층 로비\"}"}, "acceptable_arguments": null}
{"serial_num": 29, "category": "CALL", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Please call a taxi to the main gate of Sogang University."}], "input_tools": [{"type": "function", "function": {"name": "calculateLifeExpectancy", "description": "BMI, physical activity level, and smoking status estimates average life expectancy", "parameters": {"type": "object", "properties": {"BMI": {"type": "number", "description": "Body mass index (BMI)"}, "activityLevel": {"type": "string", "description": "Physical activity level (low, normal, high choice)"}, "smokingStatus": {"type": "boolean", "description": "Smoking state (smoking = true, non -smoking = false)"}}, "required": ["BMI", "activityLevel", "smokingStatus"]}}}, {"type": "function", "function": {"name": "deleteMemo", "description": "Delete the previously stored notes", "parameters": {"type": "object", "properties": {"memo_id": {"type": "string", "description": "A unique identifier of the memo to delete"}}, "required": ["memo_id"]}}}, {"type": "function", "function": {"name": "CallTaxi", "description": "Call a taxi from a specific location.", "parameters": {"type": "object", "properties": {"pickup_location": {"type": "string", "description": "Departure location (address, station name, building name, etc.)"}, "destination": {"type": "string", "description": "Arrival location (address, station name, building name, etc.)"}}, "required": ["pickup_location", "destination"]}}}, {"type": "function", "function": {"name": "generate_random_password", "description": "Create any password with certain conditions", "parameters": {"type": "object", "properties": {"length": {"type": "integer", "description": "Password length"}, "include_uppercase": {"type": "boolean", "description": "Including alphabet uppercase letters"}, "include_lowercase": {"type": "boolean", "description": "Including alphabet lowercase"}, "include_numbers": {"type": "boolean", "description": "Whether the number includes"}}, "required": ["length", "include_uppercase", "include_lowercase", "include_numbers"]}}}, {"type": "function", "function": {"name": "registerFriendBirthday", "description": "A function that registers a friend's name and birthday information", "parameters": {"type": "object", "properties": {"friendName": {"type": "string", "description": "A friend's name to register"}, "birthday": {"type": "string", "description": "The birthday of a friend to register (YYYY-MM-DD format)"}}, "required": ["friendName", "birthday"]}}}], "type_of_output": "call", "ground_truth": {"name": "CallTaxi", "arguments": "{\"pickup_location\": \"홍대입구 9번 출구 앞\", \"destination\": \"서강대학교 정문\"}"}, "acceptable_arguments": null}
{"serial_num": 30, "category": "CALL", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "I'm going to Gangnam University. Can you call a taxi in front of Yongin City Hall?"}], "input_tools": [{"type": "function", "function": {"name": "informLottoNumberByDate", "description": "It is a function that informs the lottery winning number on a specific date.", "parameters": {"type": "object", "properties": {"date": {"type": "string", "description": "Date to check the lottery winning number (e.g., March 4)"}}, "required": ["date"]}}}, {"type": "function", "function": {"name": "search_message_content", "description": "Search for a message containing the keywords specified by the user among the saved messages.", "parameters": {"type": "object", "properties": {"keyword": {"type": "string", "description": "Keyword to search"}, "from_date": {"type": "string", "description": "Date to start searching (optional)"}, "to_date": {"type": "string", "description": "Date to finish the search (optional)"}}, "required": ["keyword"]}}}, {"type": "function", "function": {"name": "CallTaxi", "description": "Call a taxi from a specific location.", "parameters": {"type": "object", "properties": {"pickup_location": {"type": "string", "description": "Departure location (address, station name, building name, etc.)"}, "destination": {"type": "string", "description": "Arrival location (address, station name, building name, etc.)"}}, "required": ["pickup_location", "destination"]}}}, {"type": "function", "function": {"name": "search_email_content", "description": "Search for emails containing keywords specified by the user during the saved email.", "parameters": {"type": "object", "properties": {"keyword": {"type": "string", "description": "Keyword to search"}, "from_date": {"type": "string", "description": "Date to start searching (optional)"}, "to_date": {"type": "string", "description": "Date to finish the search (optional)"}, "sender": {"type": "string", "description": "Email caller address (optional)"}}, "required": ["keyword"]}}}, {"type": "function", "function": {"name": "track_order", "description": "Inquire an order status (ordering, payment completion, shipping, delivery, etc.) with a given order number and informed the expected shipping date or expected delivery date.", "parameters": {"type": "object", "properties": {"order_id": {"type": "string", "description": "Order number to search"}}, "required": ["order_id"]}}}], "type_of_output": "call", "ground_truth": {"name": "CallTaxi", "arguments": "{\"pickup_location\": \"용인시청 앞\", \"destination\": \"강남대학교\"}"}, "acceptable_arguments": null}
{"serial_num": 31, "category": "CALL", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Call me a taxi from Lotte Cinema Wirye to Dankook University Jukjeon Campus."}], "input_tools": [{"type": "function", "function": {"name": "getCurrentKoreaTime", "description": "Currently, the time of Korea is returned to year-month-day: minor: second format.", "parameters": {}}}, {"type": "function", "function": {"name": "add_contact", "description": "Register a new contact.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "Name to register a contact"}, "phone": {"type": "string", "description": "phone number"}, "email": {"type": "string", "description": "Email address"}}, "required": ["name"]}}}, {"type": "function", "function": {"name": "CallTaxi", "description": "Call a taxi from a specific location.", "parameters": {"type": "object", "properties": {"pickup_location": {"type": "string", "description": "Departure location (address, station name, building name, etc.)"}, "destination": {"type": "string", "description": "Arrival location (address, station name, building name, etc.)"}}, "required": ["pickup_location", "destination"]}}}, {"type": "function", "function": {"name": "compareCleaningServices", "description": "Compare the service of the cleaning company and provide information.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Location or area where cleaning services are needed"}, "requested_date": {"type": "string", "format": "date", "description": "Service date (extract user as it is. Example: next Monday, January 1, 2022, etc.)"}, "size": {"type": "string", "description": "Pyeongsu or area of ​​the house (flat, square meter)"}}, "required": ["location", "requested_date", "size"]}}}, {"type": "function", "function": {"name": "calculateCaloriesBurnedByWalking", "description": "Calculate the amount of calories consumed while walking on a given street.", "parameters": {"type": "object", "properties": {"distance": {"type": "number", "description": "Walking distance (kilometers)"}, "weight": {"type": "number", "description": "User's weight (kilogram unit)"}}, "required": ["distance", "weight"]}}}], "type_of_output": "call", "ground_truth": {"name": "CallTaxi", "arguments": "{\"pickup_location\": \"롯데시네마 위례\", \"destination\": \"단국대학교 죽전캠퍼스\"}"}, "acceptable_arguments": null}
{"serial_num": 32, "category": "CALL", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Call the taxi to the front door of Gwanggyo Galleria Department Store. The destination is Gwanggyo Lake Elementary School."}], "input_tools": [{"type": "function", "function": {"name": "create_user", "description": "Create a new user account.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "User's name"}, "email": {"type": "string", "description": "User's email address"}, "password": {"type": "string", "description": "User's password"}}, "required": ["name", "email", "password"]}}}, {"type": "function", "function": {"name": "update_item_quantity_in_shopping_cart", "description": "Update the quantity of specific products in the shopping cart", "parameters": {"type": "object", "properties": {"user_id": {"type": "string", "description": "User's unique identifier"}, "product_id": {"type": "string", "description": "A unique identifier of products that want to update the quantity"}, "new_quantity": {"type": "integer", "description": "New quantity to update"}}, "required": ["user_id", "product_id", "new_quantity"]}}}, {"type": "function", "function": {"name": "CallTaxi", "description": "Call a taxi from a specific location.", "parameters": {"type": "object", "properties": {"pickup_location": {"type": "string", "description": "Departure location (address, station name, building name, etc.)"}, "destination": {"type": "string", "description": "Arrival location (address, station name, building name, etc.)"}}, "required": ["pickup_location", "destination"]}}}, {"type": "function", "function": {"name": "getCurrentUTCTime", "description": "We offer current UTC time.", "parameters": {}}}, {"type": "function", "function": {"name": "calculate_bmi", "description": "Calculation of human body mass index (BMI)", "parameters": {"type": "object", "properties": {"height": {"type": "number", "description": "Centimeter key"}, "weight": {"type": "number", "description": "Kilogram unit weight"}}, "required": ["height", "weight"]}}}], "type_of_output": "call", "ground_truth": {"name": "CallTaxi", "arguments": "{\"pickup_location\": \"광교 갤러리아 백화점 정문\", \"destination\": \"광교호수초등학교\"}"}, "acceptable_arguments": null}
{"serial_num": 33, "category": "CALL", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "I spent too much money this month. I'm curious about the balance."}], "input_tools": [{"type": "function", "function": {"name": "CallTaxi", "description": "Call a taxi from a specific location.", "parameters": {"type": "object", "properties": {"pickup_location": {"type": "string", "description": "Departure location (address, station name, building name, etc.)"}, "destination": {"type": "string", "description": "Arrival location (address, station name, building name, etc.)"}}, "required": ["pickup_location", "destination"]}}}, {"type": "function", "function": {"name": "getCurrentTimeForLocation", "description": "Provide current time information in certain areas", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Local name to bring time information"}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "checkBankBalance", "description": "Look up the balance of a specific bank account.", "parameters": {"type": "object", "properties": {"accountBank": {"type": "string", "description": "The bank name of the account to view the balance"}, "accountNumber": {"type": "string", "description": "Account number to view the balance"}}, "required": ["accountBank", "accountNumber"]}}}, {"type": "function", "function": {"name": "informLottoWinnerPrizeByDate", "description": "It is a function that informs the amount of lottery winnings on a specific date.", "parameters": {"type": "object", "properties": {"date": {"type": "string", "description": "Date to check the amount of lottery winnings (e.g., March 4)"}}, "required": ["date"]}}}, {"type": "function", "function": {"name": "view_shopping_cart", "description": "User's shopping cart contents inquiry", "parameters": {"type": "object", "properties": {"user_id": {"type": "string", "description": "User's unique identifier"}}, "required": ["user_id"]}}}], "type_of_output": "call", "ground_truth": {"name": "checkBankBalance", "arguments": "{\"accountBank\": \"신협\", \"accountNumber\": \"567890123\"}"}, "acceptable_arguments": null}
{"serial_num": 34, "category": "CALL", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "How long is the account balance left? The account I want to check is Kakao Bank 789-012-345."}], "input_tools": [{"type": "function", "function": {"name": "calculateIdealWeight", "description": "Ideal weight calculation using Lorentz formula", "parameters": {"type": "object", "properties": {"height": {"type": "number", "description": "Centimeter key"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["height", "gender"]}}}, {"type": "function", "function": {"name": "getWeatherForecastForNext7Days", "description": "For the designated area, we offer a 7 -day weather forecast, including today.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "The name of the area where the weather forecast"}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "checkBankBalance", "description": "Look up the balance of a specific bank account.", "parameters": {"type": "object", "properties": {"accountBank": {"type": "string", "description": "The bank name of the account to view the balance"}, "accountNumber": {"type": "string", "description": "Account number to view the balance"}}, "required": ["accountBank", "accountNumber"]}}}, {"type": "function", "function": {"name": "calculate_tip", "description": "Tip calculation", "parameters": {"type": "object", "properties": {"bill_amount": {"type": "number", "description": "Billed amount"}, "tip_percentage": {"type": "number", "description": "Tip 100 division (for example, 15 input for 15%)"}}, "required": ["bill_amount", "tip_percentage"]}}}, {"type": "function", "function": {"name": "translate_text_to_english", "description": "Translate the given text into English", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Text translation in English"}}, "required": ["text"]}}}], "type_of_output": "call", "ground_truth": {"name": "checkBankBalance", "arguments": "{\"accountBank\": \"카카오뱅크\", \"accountNumber\": \"789-012-345\"}"}, "acceptable_arguments": null}
{"serial_num": 35, "category": "CALL", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Can I know the account balance? The account number is Hana Bank 1234567890."}], "input_tools": [{"type": "function", "function": {"name": "calculateIdealWeight", "description": "Ideal weight calculation using Lorentz formula", "parameters": {"type": "object", "properties": {"height": {"type": "number", "description": "Centimeter key"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["height", "gender"]}}}, {"type": "function", "function": {"name": "calculate_tip", "description": "Tip calculation", "parameters": {"type": "object", "properties": {"bill_amount": {"type": "number", "description": "Billed amount"}, "tip_percentage": {"type": "number", "description": "Tip 100 division (for example, 15 input for 15%)"}}, "required": ["bill_amount", "tip_percentage"]}}}, {"type": "function", "function": {"name": "checkBankBalance", "description": "Look up the balance of a specific bank account.", "parameters": {"type": "object", "properties": {"accountBank": {"type": "string", "description": "The bank name of the account to view the balance"}, "accountNumber": {"type": "string", "description": "Account number to view the balance"}}, "required": ["accountBank", "accountNumber"]}}}, {"type": "function", "function": {"name": "sendEmail", "description": "Send email to a specific email address.", "parameters": {"type": "object", "properties": {"receiverEmail": {"type": "string", "description": "EMAIL address of the recipient"}, "subject": {"type": "string", "description": "Email title"}, "body": {"type": "string", "description": "Email content"}}, "required": ["receiverEmail", "subject", "body"]}}}, {"type": "function", "function": {"name": "calculate_tax", "description": "Calculate the tax on the given amount.", "parameters": {"type": "object", "properties": {"amount": {"type": "number", "description": "Prior to calculating"}, "tax_rate": {"type": "number", "description": "Tax rate to be applied (percentage)"}}, "required": ["amount", "tax_rate"]}}}], "type_of_output": "call", "ground_truth": {"name": "checkBankBalance", "arguments": "{\"accountBank\": \"하나은행\", \"accountNumber\": \"1234567890\"}"}, "acceptable_arguments": null}
{"serial_num": 36, "category": "CALL", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Please look up the balance of Kookmin Bank 901-234-567."}], "input_tools": [{"type": "function", "function": {"name": "get_movie_schedule", "description": "Inquire a certain date and screening schedule for a specific movie theater.", "parameters": {"type": "object", "properties": {"movie_date": {"type": "string", "description": "Date to look up (YYYY-MM-DD)"}, "movie_location": {"type": "string", "description": "Cinema to look upon"}}, "required": ["movie_date", "movie_location"]}}}, {"type": "function", "function": {"name": "getCurrentKoreaTime", "description": "Currently, the time of Korea is returned to year-month-day: minor: second format.", "parameters": {}}}, {"type": "function", "function": {"name": "checkBankBalance", "description": "Look up the balance of a specific bank account.", "parameters": {"type": "object", "properties": {"accountBank": {"type": "string", "description": "The bank name of the account to view the balance"}, "accountNumber": {"type": "string", "description": "Account number to view the balance"}}, "required": ["accountBank", "accountNumber"]}}}, {"type": "function", "function": {"name": "convert_currency", "description": "Returns a value that exchanges a currency into another currency.", "parameters": {"type": "object", "properties": {"amount": {"type": "number", "description": "Money"}, "from": {"type": "string", "description": "Type of currency currency exchange"}, "to": {"type": "string", "description": "Type of currency exchange results"}}, "required": ["amount", "from", "to"]}}}, {"type": "function", "function": {"name": "calculate_tax", "description": "Calculate the tax on the given amount.", "parameters": {"type": "object", "properties": {"amount": {"type": "number", "description": "Prior to calculating"}, "tax_rate": {"type": "number", "description": "Tax rate to be applied (percentage)"}}, "required": ["amount", "tax_rate"]}}}], "type_of_output": "call", "ground_truth": {"name": "checkBankBalance", "arguments": "{\"accountBank\": \"국민은행\", \"accountNumber\": \"901-234-567\"}"}, "acceptable_arguments": null}
{"serial_num": 37, "category": "CALL", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "On March 25, 2023, please book a meeting with Kim Mina and Song Ji -ah on AM 11:00."}], "input_tools": [{"type": "function", "function": {"name": "get_rainfall_probability", "description": "It brings probability information in a particular area.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Local name"}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "convert_krw_to_usd", "description": "Converted Korean money (KRW) to USD (USD)", "parameters": {"type": "object", "properties": {"amount_krw": {"type": "number", "description": "Korean money (KRW) amount to convert"}, "exchange_rate_krw_to_usd": {"type": "number", "description": "Exchange rate from KRW to USD"}}, "required": ["amount_krw", "exchange_rate_krw_to_usd"]}}}, {"type": "function", "function": {"name": "schedule_meeting", "description": "Book a meeting.", "parameters": {"type": "object", "properties": {"participants": {"type": "string", "description": "Participant list (if there are multiple participants, it is divided into a comma (,).)"}, "date_time": {"type": "string", "description": "Date and time of meeting (yyyy-mm-dd hh: mm format)"}}, "required": ["participants", "date_time"]}}}, {"type": "function", "function": {"name": "create_playlist", "description": "Create a music playlist that fits the user's tastes and conditions", "parameters": {"type": "object", "properties": {"genre": {"type": "string", "description": "The genre of music to be included in the playlist"}, "mood": {"type": "string", "description": "Playlist's mood or atmosphere"}, "count": {"type": "integer", "description": "The number of songs to be included in the playlist"}, "include_live": {"type": "boolean", "description": "Live version songs include"}}, "required": ["genre", "mood", "count"]}}}, {"type": "function", "function": {"name": "translate_text_to_english", "description": "Translate the given text into English", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Text translation in English"}}, "required": ["text"]}}}], "type_of_output": "call", "ground_truth": {"name": "schedule_meeting", "arguments": "{\"participants\": \"김미나, 송지아\", \"date_time\": \"2023-03-25 11:00\"}"}, "acceptable_arguments": null}
{"serial_num": 38, "category": "CALL", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "2024.7.23 Book a meeting with Choi Soo -bin, Kim Joo -ah and Ahn Yu -mi at 2 pm."}], "input_tools": [{"type": "function", "function": {"name": "compareCleaningServices", "description": "Compare the service of the cleaning company and provide information.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Location or area where cleaning services are needed"}, "requested_date": {"type": "string", "format": "date", "description": "Service date (extract user as it is. Example: next Monday, January 1, 2022, etc.)"}, "size": {"type": "string", "description": "Pyeongsu or area of ​​the house (flat, square meter)"}}, "required": ["location", "requested_date", "size"]}}}, {"type": "function", "function": {"name": "transferMoney", "description": "Send money to a specific account.", "parameters": {"type": "object", "properties": {"receiver_bank": {"type": "string", "description": "Bank"}, "receiver_account": {"type": "string", "description": "Account number to send"}, "amount": {"type": "number", "description": "Missing money (unit: krw))"}}, "required": ["receiver_bank", "receiver_account", "amount"]}}}, {"type": "function", "function": {"name": "schedule_meeting", "description": "Book a meeting.", "parameters": {"type": "object", "properties": {"participants": {"type": "string", "description": "Participant list (if there are multiple participants, it is divided into a comma (,).)"}, "date_time": {"type": "string", "description": "Date and time of meeting (yyyy-mm-dd hh: mm format)"}}, "required": ["participants", "date_time"]}}}, {"type": "function", "function": {"name": "search_flight", "description": "Search for a flight from a specific airport and arriving at a specific airport.", "parameters": {"type": "object", "properties": {"departure_airport": {"type": "string", "description": "Departure airport name (extracted as user expression. Example: Los Angeles International Airport, Gimhae Airport, etc.)"}, "arrival_airport": {"type": "string", "description": "Arrival airport name (extracting as it is, Example: Los Angeles International Airport, Gimhae Airport, etc.)"}, "departure_date": {"type": "string", "description": "Departure Date (YYYY-MM-DD)"}}, "required": ["departure_airport", "arrival_airport", "departure_date"]}}}, {"type": "function", "function": {"name": "getCurrentTimeForLocation", "description": "Provide current time information in certain areas", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Local name to bring time information"}}, "required": ["location"]}}}], "type_of_output": "call", "ground_truth": {"name": "schedule_meeting", "arguments": "{\"participants\": \"최수빈, 김주아, 안유미\", \"date_time\": \"2024-07-23 14:00\"}"}, "acceptable_arguments": null}
{"serial_num": 39, "category": "CALL", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "2022-11-11, PM 3:00 Please book a meeting with Ida-young and Min Yu-jin."}], "input_tools": [{"type": "function", "function": {"name": "informLottoNumberByRound", "description": "It is a function that informs the lottery winning number of a specific episode.", "parameters": {"type": "object", "properties": {"round": {"type": "integer", "description": "The round to check the lottery winning number"}}, "required": ["round"]}}}, {"type": "function", "function": {"name": "find_group_or_club", "description": "Provides meetings or club information on certain topics based on the area around the specific location.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Where to find a meeting or club"}, "topic": {"type": "string", "description": "Interest"}}, "required": ["location", "topic"]}}}, {"type": "function", "function": {"name": "schedule_meeting", "description": "Book a meeting.", "parameters": {"type": "object", "properties": {"participants": {"type": "string", "description": "Participant list (if there are multiple participants, it is divided into a comma (,).)"}, "date_time": {"type": "string", "description": "Date and time of meeting (yyyy-mm-dd hh: mm format)"}}, "required": ["participants", "date_time"]}}}, {"type": "function", "function": {"name": "DeleteEvent", "description": "Delete schedule from calendar", "parameters": {"type": "object", "properties": {"event_id": {"type": "string", "description": "ID of the schedule to be deleted"}}, "required": ["event_id"]}}}, {"type": "function", "function": {"name": "calculate_bmi", "description": "Calculation of human body mass index (BMI)", "parameters": {"type": "object", "properties": {"height": {"type": "number", "description": "Centimeter key"}, "weight": {"type": "number", "description": "Kilogram unit weight"}}, "required": ["height", "weight"]}}}], "type_of_output": "call", "ground_truth": {"name": "schedule_meeting", "arguments": "{\"participants\": \"이다영, 민유진\", \"date_time\": \"2022-11-11 15:00\"}"}, "acceptable_arguments": "{\"date_time\": \"Only YYYY-MM-DD HH:MM format is allowed.\"}"}
{"serial_num": 40, "category": "CALL", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "I want to book a meeting. Date and time are at 9 am on August 31, 23. Participants are Cha Hyun -woo and Shin Seung -yeop."}], "input_tools": [{"type": "function", "function": {"name": "calculateIdealWeight", "description": "Ideal weight calculation using Lorentz formula", "parameters": {"type": "object", "properties": {"height": {"type": "number", "description": "Centimeter key"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["height", "gender"]}}}, {"type": "function", "function": {"name": "registerFriendBirthday", "description": "A function that registers a friend's name and birthday information", "parameters": {"type": "object", "properties": {"friendName": {"type": "string", "description": "A friend's name to register"}, "birthday": {"type": "string", "description": "The birthday of a friend to register (YYYY-MM-DD format)"}}, "required": ["friendName", "birthday"]}}}, {"type": "function", "function": {"name": "schedule_meeting", "description": "Book a meeting.", "parameters": {"type": "object", "properties": {"participants": {"type": "string", "description": "Participant list (if there are multiple participants, it is divided into a comma (,).)"}, "date_time": {"type": "string", "description": "Date and time of meeting (yyyy-mm-dd hh: mm format)"}}, "required": ["participants", "date_time"]}}}, {"type": "function", "function": {"name": "generate_syntax_tree_from_text", "description": "Create a syntax tree for a given text", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Text to create a syntax tree"}}, "required": ["text"]}}}, {"type": "function", "function": {"name": "count_words", "description": "Calculation of words in a given text (sentence or paragraph)", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Cell text"}}, "required": ["text"]}}}], "type_of_output": "call", "ground_truth": {"name": "schedule_meeting", "arguments": "{\"participants\": \"차현우, 신승엽\", \"date_time\": \"2023-08-31 09:00\"}"}, "acceptable_arguments": null}
{"serial_num": 41, "category": "CALL", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Look up for the movie screening schedule of CGV Pangyo on October 31, 2022."}], "input_tools": [{"type": "function", "function": {"name": "informLottoNumberByRound", "description": "It is a function that informs the lottery winning number of a specific episode.", "parameters": {"type": "object", "properties": {"round": {"type": "integer", "description": "The round to check the lottery winning number"}}, "required": ["round"]}}}, {"type": "function", "function": {"name": "getCurrentKoreaTime", "description": "Currently, the time of Korea is returned to year-month-day: minor: second format.", "parameters": {}}}, {"type": "function", "function": {"name": "get_movie_schedule", "description": "Inquire a certain date and screening schedule for a specific movie theater.", "parameters": {"type": "object", "properties": {"movie_date": {"type": "string", "description": "Date to look up (YYYY-MM-DD)"}, "movie_location": {"type": "string", "description": "Cinema to look upon"}}, "required": ["movie_date", "movie_location"]}}}, {"type": "function", "function": {"name": "informLottoWinnerPrizeByRound", "description": "It is a function that informs the amount of lottery winnings of a specific episode.", "parameters": {"type": "object", "properties": {"round": {"type": "integer", "description": "A round that wants to check the amount of lottery winnings (e.g. 1001)"}}, "required": ["round"]}}}, {"type": "function", "function": {"name": "informLottoWinnerPrizeByDate", "description": "It is a function that informs the amount of lottery winnings on a specific date.", "parameters": {"type": "object", "properties": {"date": {"type": "string", "description": "Date to check the amount of lottery winnings (e.g., March 4)"}}, "required": ["date"]}}}], "type_of_output": "call", "ground_truth": {"name": "get_movie_schedule", "arguments": "{\"movie_date\": \"2022-10-31\", \"movie_location\": \"CGV 판교\"}"}, "acceptable_arguments": null}
{"serial_num": 42, "category": "CALL", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "23.1.13 Lotte Cinema Wirye Movie Timetable."}], "input_tools": [{"type": "function", "function": {"name": "get_currency_trend_3months", "description": "Provides exchange rate fluctuations for the last three months for the designated currency", "parameters": {"type": "object", "properties": {"currency_code": {"type": "string", "description": "Code of currency to bring the exchange rate fluctuations (e.g. USD, EUR, JPY)"}}, "required": ["currency_code"]}}}, {"type": "function", "function": {"name": "getHistoricalMinMaxTemperature", "description": "In the past, we look up for the minimum temperature and the highest temperature in certain regions.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "The name of the area to be searched"}, "date": {"type": "string", "description": "Date to look up ('YYYY-MM-DD' format)"}}, "required": ["location", "date"]}}}, {"type": "function", "function": {"name": "get_movie_schedule", "description": "Inquire a certain date and screening schedule for a specific movie theater.", "parameters": {"type": "object", "properties": {"movie_date": {"type": "string", "description": "Date to look up (YYYY-MM-DD)"}, "movie_location": {"type": "string", "description": "Cinema to look upon"}}, "required": ["movie_date", "movie_location"]}}}, {"type": "function", "function": {"name": "calculateBMR", "description": "Basal metabolic rate calculation", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}, "height": {"type": "number", "description": "Centimeter key"}, "age": {"type": "integer", "description": "age"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["weight", "height", "age", "gender"]}}}, {"type": "function", "function": {"name": "schedule_meeting", "description": "Book a meeting.", "parameters": {"type": "object", "properties": {"participants": {"type": "string", "description": "Participant list (if there are multiple participants, it is divided into a comma (,).)"}, "date_time": {"type": "string", "description": "Date and time of meeting (yyyy-mm-dd hh: mm format)"}}, "required": ["participants", "date_time"]}}}], "type_of_output": "call", "ground_truth": {"name": "get_movie_schedule", "arguments": "{\"movie_date\": \"2023-01-13\", \"movie_location\": \"롯데시네마 위례\"}"}, "acceptable_arguments": null}
{"serial_num": 43, "category": "CALL", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Lotte Cinema World Tower Search for the movie screening schedule on April 5, 24."}], "input_tools": [{"type": "function", "function": {"name": "calculate_tax", "description": "Calculate the tax on the given amount.", "parameters": {"type": "object", "properties": {"amount": {"type": "number", "description": "Prior to calculating"}, "tax_rate": {"type": "number", "description": "Tax rate to be applied (percentage)"}}, "required": ["amount", "tax_rate"]}}}, {"type": "function", "function": {"name": "book_concert_tickets", "description": "Tickets for specific performances are made using external ticketing systems.", "parameters": {"type": "object", "properties": {"concert_name": {"type": "string", "description": "The name of the performance you want to book"}, "number_of_tickets": {"type": "integer", "description": "Quantity"}, "seat_type": {"type": "string", "description": "Selected seat type (e.g. VIP, general)"}}, "required": ["concert_name", "number_of_tickets", "seat_type"]}}}, {"type": "function", "function": {"name": "get_movie_schedule", "description": "Inquire a certain date and screening schedule for a specific movie theater.", "parameters": {"type": "object", "properties": {"movie_date": {"type": "string", "description": "Date to look up (YYYY-MM-DD)"}, "movie_location": {"type": "string", "description": "Cinema to look upon"}}, "required": ["movie_date", "movie_location"]}}}, {"type": "function", "function": {"name": "convert_krw_to_usd", "description": "Converted Korean money (KRW) to USD (USD)", "parameters": {"type": "object", "properties": {"amount_krw": {"type": "number", "description": "Korean money (KRW) amount to convert"}, "exchange_rate_krw_to_usd": {"type": "number", "description": "Exchange rate from KRW to USD"}}, "required": ["amount_krw", "exchange_rate_krw_to_usd"]}}}, {"type": "function", "function": {"name": "calculate_bmi", "description": "Calculation of human body mass index (BMI)", "parameters": {"type": "object", "properties": {"height": {"type": "number", "description": "Centimeter key"}, "weight": {"type": "number", "description": "Kilogram unit weight"}}, "required": ["height", "weight"]}}}], "type_of_output": "call", "ground_truth": {"name": "get_movie_schedule", "arguments": "{\"movie_date\": \"2024-04-05\", \"movie_location\": \"롯데시네마 월드타워\"}"}, "acceptable_arguments": null}
{"serial_num": 44, "category": "CALL", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Megabox Mok -dong 2022/12/25 Check the movie screening schedule."}], "input_tools": [{"type": "function", "function": {"name": "convert_pyeong_to_squaremeter", "description": "Convert it to \"평\"을 입력받아서, \"제곱미터\".", "parameters": {"type": "object", "properties": {"pyeong": {"type": "number", "description": "Pyeongsu to be transformed"}}, "required": ["pyeong"]}}}, {"type": "function", "function": {"name": "recommendLuckMessage", "description": "It is a function that recommends lucky words randomly.", "parameters": {"type": "object", "properties": {}, "required": []}}}, {"type": "function", "function": {"name": "get_movie_schedule", "description": "Inquire a certain date and screening schedule for a specific movie theater.", "parameters": {"type": "object", "properties": {"movie_date": {"type": "string", "description": "Date to look up (YYYY-MM-DD)"}, "movie_location": {"type": "string", "description": "Cinema to look upon"}}, "required": ["movie_date", "movie_location"]}}}, {"type": "function", "function": {"name": "calculateBMR", "description": "Basal metabolic rate calculation", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}, "height": {"type": "number", "description": "Centimeter key"}, "age": {"type": "integer", "description": "age"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["weight", "height", "age", "gender"]}}}, {"type": "function", "function": {"name": "find_group_or_club", "description": "Provides meetings or club information on certain topics based on the area around the specific location.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Where to find a meeting or club"}, "topic": {"type": "string", "description": "Interest"}}, "required": ["location", "topic"]}}}], "type_of_output": "call", "ground_truth": {"name": "get_movie_schedule", "arguments": "{\"movie_date\": \"2022-12-25\", \"movie_location\": \"메가박스 목동\"}"}, "acceptable_arguments": "{\"movie_date\": \"Only YYYY-MM-DD format is allowed.\", \"movie_location\": \"The keywords '메가박스' and '목동' must both be included.\"}"}
{"serial_num": 45, "category": "CALL", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Will it be very blocked from Yangjae Station to Pangyo Station? I'm curious about the traffic situation"}], "input_tools": [{"type": "function", "function": {"name": "add_item_to_shopping_cart", "description": "Add new products to the shopping cart", "parameters": {"type": "object", "properties": {"product_id": {"type": "string", "description": "The unique identifier of the product you want to add"}, "quantity": {"type": "integer", "description": "Quantity"}}, "required": ["product_id", "quantity"]}}}, {"type": "function", "function": {"name": "getCurrentKoreaTime", "description": "Currently, the time of Korea is returned to year-month-day: minor: second format.", "parameters": {}}}, {"type": "function", "function": {"name": "check_traffic_status", "description": "Inquire the current traffic situation on a particular path.", "parameters": {"type": "object", "properties": {"start_location": {"type": "string", "description": "Departure"}, "end_location": {"type": "string", "description": "Arrival point"}}, "required": ["start_location", "end_location"]}}}, {"type": "function", "function": {"name": "calculateBMR", "description": "Basal metabolic rate calculation", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}, "height": {"type": "number", "description": "Centimeter key"}, "age": {"type": "integer", "description": "age"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["weight", "height", "age", "gender"]}}}, {"type": "function", "function": {"name": "generate_playlist_based_on_favorite_artist", "description": "Create customized playlist based on preferred artists", "parameters": {"type": "object", "properties": {"artist_name": {"type": "string", "description": "The name of the artist that users prefer"}}, "required": ["artist_name"]}}}], "type_of_output": "call", "ground_truth": {"name": "check_traffic_status", "arguments": "{\"start_location\": \"양재역\", \"end_location\": \"판교역\"}"}, "acceptable_arguments": null}
{"serial_num": 46, "category": "CALL", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Can you tell me about the traffic situation from Juan -dong, Nam -gu, Incheon to Dangsan -dong, Yeongdeungpo -gu, Seoul?"}], "input_tools": [{"type": "function", "function": {"name": "convert_to_uppercase", "description": "Converted strings to capital letters", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "String"}}, "required": ["text"]}}}, {"type": "function", "function": {"name": "OrderPizza", "description": "Order pizza.", "parameters": {"type": "object", "properties": {"PizzaType": {"type": "string", "description": "Pizza"}, "size": {"type": "string", "description": "Pizza size (extracted as it is, example: Small, L, Medium, etc.)"}, "quantity": {"type": "integer", "description": "Order quantity"}}, "required": ["PizzaType", "size", "quantity"]}}}, {"type": "function", "function": {"name": "check_traffic_status", "description": "Inquire the current traffic situation on a particular path.", "parameters": {"type": "object", "properties": {"start_location": {"type": "string", "description": "Departure"}, "end_location": {"type": "string", "description": "Arrival point"}}, "required": ["start_location", "end_location"]}}}, {"type": "function", "function": {"name": "create_user", "description": "Create a new user account.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "User's name"}, "email": {"type": "string", "description": "User's email address"}, "password": {"type": "string", "description": "User's password"}}, "required": ["name", "email", "password"]}}}, {"type": "function", "function": {"name": "informLottoWinnerPrizeByRound", "description": "It is a function that informs the amount of lottery winnings of a specific episode.", "parameters": {"type": "object", "properties": {"round": {"type": "integer", "description": "A round that wants to check the amount of lottery winnings (e.g. 1001)"}}, "required": ["round"]}}}], "type_of_output": "call", "ground_truth": {"name": "check_traffic_status", "arguments": "{\"start_location\": \"인천시 남구 주안동\", \"end_location\": \"서울시 영등포구 당산동\"}"}, "acceptable_arguments": null}
{"serial_num": 47, "category": "CALL", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "I think there are a lot of cars on weekends."}], "input_tools": [{"type": "function", "function": {"name": "schedule_laundry_pickup", "description": "Apply for a service to collect laundry.", "parameters": {"type": "object", "properties": {"pickup_location": {"type": "string", "description": "Extract the location of the user as it is to collect the laundry. (Example: House, 101 -dong 102, etc."}, "pickup_date": {"type": "string", "description": "Extract the laundry collection date as it is. (Example: next Monday, January 1, 2022, etc.)"}, "pickup_time": {"type": "string", "description": "Extract the time to collect the laundry as it is. (Example: 2 pm, 7 pm, etc.)"}}, "required": ["pickup_location", "pickup_date", "pickup_time"]}}}, {"type": "function", "function": {"name": "sendEmail", "description": "Send email to a specific email address.", "parameters": {"type": "object", "properties": {"receiverEmail": {"type": "string", "description": "EMAIL address of the recipient"}, "subject": {"type": "string", "description": "Email title"}, "body": {"type": "string", "description": "Email content"}}, "required": ["receiverEmail", "subject", "body"]}}}, {"type": "function", "function": {"name": "check_traffic_status", "description": "Inquire the current traffic situation on a particular path.", "parameters": {"type": "object", "properties": {"start_location": {"type": "string", "description": "Departure"}, "end_location": {"type": "string", "description": "Arrival point"}}, "required": ["start_location", "end_location"]}}}, {"type": "function", "function": {"name": "count_lowercase_letters", "description": "The number of lowercase in the string", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Cell string for lowercase"}}, "required": ["text"]}}}, {"type": "function", "function": {"name": "convertTimeBetweenTimezones", "description": "Convert time to another time in one time.", "parameters": {"type": "object", "properties": {"originalTime": {"type": "string", "description": "Reference time to convert (format HH: mm)"}, "fromTimezone": {"type": "string", "description": "Standard time zone (region name)"}, "toTimezone": {"type": "string", "description": "Time to be converted (region name)"}}, "required": ["originalTime", "fromTimezone", "toTimezone"]}}}], "type_of_output": "call", "ground_truth": {"name": "check_traffic_status", "arguments": "{\"start_location\": \"용산구 한남동\", \"end_location\": \"종로구 삼청동\"}"}, "acceptable_arguments": null}
{"serial_num": 48, "category": "CALL", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Please let me know the road situation on the way to Hallim -eup, Jeju -si."}], "input_tools": [{"type": "function", "function": {"name": "count_words", "description": "Calculation of words in a given text (sentence or paragraph)", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Cell text"}}, "required": ["text"]}}}, {"type": "function", "function": {"name": "upload_artwork_to_online_site", "description": "Upload your work to the online art platform.", "parameters": {"type": "object", "properties": {"art_image_url": {"type": "string", "description": "The image of the work to be uploaded URL"}, "title": {"type": "string", "description": "Title of the work"}, "description": {"type": "string", "description": "A brief explanation of the work"}}, "required": ["art_image_url", "title", "description"]}}}, {"type": "function", "function": {"name": "check_traffic_status", "description": "Inquire the current traffic situation on a particular path.", "parameters": {"type": "object", "properties": {"start_location": {"type": "string", "description": "Departure"}, "end_location": {"type": "string", "description": "Arrival point"}}, "required": ["start_location", "end_location"]}}}, {"type": "function", "function": {"name": "translate_text_to_english", "description": "Translate the given text into English", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Text translation in English"}}, "required": ["text"]}}}, {"type": "function", "function": {"name": "recommendLottoNumber", "description": "It is a function that recommends a lotto number randomly.", "parameters": {"type": "object", "properties": {}, "required": []}}}], "type_of_output": "call", "ground_truth": {"name": "check_traffic_status", "arguments": "{\"start_location\": \"제주시 연동\", \"end_location\": \"제주시 한림읍\"}"}, "acceptable_arguments": null}
{"serial_num": 49, "category": "CALL", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "I'm going to go on a business trip, can you make a reservation for Seoul next Monday?"}], "input_tools": [{"type": "function", "function": {"name": "DeleteEvent", "description": "Delete schedule from calendar", "parameters": {"type": "object", "properties": {"event_id": {"type": "string", "description": "ID of the schedule to be deleted"}}, "required": ["event_id"]}}}, {"type": "function", "function": {"name": "upload_artwork_to_online_site", "description": "Upload your work to the online art platform.", "parameters": {"type": "object", "properties": {"art_image_url": {"type": "string", "description": "The image of the work to be uploaded URL"}, "title": {"type": "string", "description": "Title of the work"}, "description": {"type": "string", "description": "A brief explanation of the work"}}, "required": ["art_image_url", "title", "description"]}}}, {"type": "function", "function": {"name": "bookBusinessVehicle", "description": "Book a car for business trips.", "parameters": {"type": "object", "properties": {"destination": {"type": "string", "description": "destination"}, "departure_date": {"type": "string", "description": "Express your departure date as it is. Example) '다음 주 월요일', '2022년 1월 1일'"}}, "required": ["destination", "departure_date"]}}}, {"type": "function", "function": {"name": "calculateLifeExpectancy", "description": "BMI, physical activity level, and smoking status estimates average life expectancy", "parameters": {"type": "object", "properties": {"BMI": {"type": "number", "description": "Body mass index (BMI)"}, "activityLevel": {"type": "string", "description": "Physical activity level (low, normal, high choice)"}, "smokingStatus": {"type": "boolean", "description": "Smoking state (smoking = true, non -smoking = false)"}}, "required": ["BMI", "activityLevel", "smokingStatus"]}}}, {"type": "function", "function": {"name": "informLottoWinnerPrizeByDate", "description": "It is a function that informs the amount of lottery winnings on a specific date.", "parameters": {"type": "object", "properties": {"date": {"type": "string", "description": "Date to check the amount of lottery winnings (e.g., March 4)"}}, "required": ["date"]}}}], "type_of_output": "call", "ground_truth": {"name": "bookBusinessVehicle", "arguments": "{\"destination\": \"서울\", \"departure_date\": \"다음 주 월요일\"}"}, "acceptable_arguments": null}
{"serial_num": 50, "category": "CALL", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "On May 25, 2023, I want to make a reservation for a business trip in advance."}], "input_tools": [{"type": "function", "function": {"name": "get_stock_price", "description": "Search the current price of a particular stock.", "parameters": {"type": "object", "properties": {"stock_name": {"type": "string", "description": "Stock name to look up"}}, "required": ["stock_name"]}}}, {"type": "function", "function": {"name": "search_contact", "description": "Search for a list of contacts in the name of a person and bring his phone number and email address.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "The name of a person who wants to check the contact"}}, "required": ["name"]}}}, {"type": "function", "function": {"name": "bookBusinessVehicle", "description": "Book a car for business trips.", "parameters": {"type": "object", "properties": {"destination": {"type": "string", "description": "destination"}, "departure_date": {"type": "string", "description": "Express your departure date as it is. Example) '다음 주 월요일', '2022년 1월 1일'"}}, "required": ["destination", "departure_date"]}}}, {"type": "function", "function": {"name": "getDailyNewsHeadlines", "description": "Today's main news headline is provided.", "parameters": {"type": "object", "properties": {}, "required": []}}}, {"type": "function", "function": {"name": "getCryptocurrencyPrice", "description": "Inquire the current price of a specific cryptocurrency.", "parameters": {"type": "object", "properties": {"cryptocurrency": {"type": "string", "description": "Cryptocurrency name to view the price"}}, "required": ["cryptocurrency"]}}}], "type_of_output": "call", "ground_truth": {"name": "bookBusinessVehicle", "arguments": "{\"destination\": \"부산\", \"departure_date\": \"2023년 5월 25일\"}"}, "acceptable_arguments": null}
{"serial_num": 51, "category": "CALL", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "I'm going to go on a business trip tomorrow, can you make a reservation to Gangneung?"}], "input_tools": [{"type": "function", "function": {"name": "add_item_to_shopping_cart", "description": "Add new products to the shopping cart", "parameters": {"type": "object", "properties": {"product_id": {"type": "string", "description": "The unique identifier of the product you want to add"}, "quantity": {"type": "integer", "description": "Quantity"}}, "required": ["product_id", "quantity"]}}}, {"type": "function", "function": {"name": "searchFriendBirthday", "description": "A function that enters a friend's name and searches for birthday information", "parameters": {"type": "object", "properties": {"friendName": {"type": "string", "description": "A friend's name to search"}}, "required": ["friendName"]}}}, {"type": "function", "function": {"name": "bookBusinessVehicle", "description": "Book a car for business trips.", "parameters": {"type": "object", "properties": {"destination": {"type": "string", "description": "destination"}, "departure_date": {"type": "string", "description": "Express your departure date as it is. Example) '다음 주 월요일', '2022년 1월 1일'"}}, "required": ["destination", "departure_date"]}}}, {"type": "function", "function": {"name": "getHistoricalMinMaxTemperature", "description": "In the past, we look up for the minimum temperature and the highest temperature in certain regions.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "The name of the area to be searched"}, "date": {"type": "string", "description": "Date to look up ('YYYY-MM-DD' format)"}}, "required": ["location", "date"]}}}, {"type": "function", "function": {"name": "generate_syntax_tree_from_text", "description": "Create a syntax tree for a given text", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Text to create a syntax tree"}}, "required": ["text"]}}}], "type_of_output": "call", "ground_truth": {"name": "bookBusinessVehicle", "arguments": "{\"destination\": \"강릉\", \"departure_date\": \"내일\"}"}, "acceptable_arguments": null}
{"serial_num": 52, "category": "CALL", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "On March 10, I am on a business trip to Jeju Island, but I need a car reservation."}], "input_tools": [{"type": "function", "function": {"name": "calculateIdealWeight", "description": "Ideal weight calculation using Lorentz formula", "parameters": {"type": "object", "properties": {"height": {"type": "number", "description": "Centimeter key"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["height", "gender"]}}}, {"type": "function", "function": {"name": "getDailyNewsHeadlines", "description": "Today's main news headline is provided.", "parameters": {"type": "object", "properties": {}, "required": []}}}, {"type": "function", "function": {"name": "bookBusinessVehicle", "description": "Book a car for business trips.", "parameters": {"type": "object", "properties": {"destination": {"type": "string", "description": "destination"}, "departure_date": {"type": "string", "description": "Express your departure date as it is. Example) '다음 주 월요일', '2022년 1월 1일'"}}, "required": ["destination", "departure_date"]}}}, {"type": "function", "function": {"name": "getCryptocurrencyPrice", "description": "Inquire the current price of a specific cryptocurrency.", "parameters": {"type": "object", "properties": {"cryptocurrency": {"type": "string", "description": "Cryptocurrency name to view the price"}}, "required": ["cryptocurrency"]}}}, {"type": "function", "function": {"name": "calculateCaloriesBurnedByWalking", "description": "Calculate the amount of calories consumed while walking on a given street.", "parameters": {"type": "object", "properties": {"distance": {"type": "number", "description": "Walking distance (kilometers)"}, "weight": {"type": "number", "description": "User's weight (kilogram unit)"}}, "required": ["distance", "weight"]}}}], "type_of_output": "call", "ground_truth": {"name": "bookBusinessVehicle", "arguments": "{\"destination\": \"제주도\", \"departure_date\": \"3월 10일\"}"}, "acceptable_arguments": null}
{"serial_num": 53, "category": "CALL", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Compare the price of 2,500 A4 sheets in various stores."}], "input_tools": [{"type": "function", "function": {"name": "search_contact", "description": "Search for a list of contacts in the name of a person and bring his phone number and email address.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "The name of a person who wants to check the contact"}}, "required": ["name"]}}}, {"type": "function", "function": {"name": "CheckTaxRefund", "description": "Search for the user's tax refund.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "The name of the tax paymenter"}, "birth": {"type": "string", "description": "Date of birth of tax payers (YYYY-MM-DD)"}, "phone_number": {"type": "string", "description": "Contact of tax payers"}}, "required": ["name", "birth", "phone_number"]}}}, {"type": "function", "function": {"name": "compare_office_supplies_prices", "description": "Compare office supplies prices of various stores and provide the lowest price information.", "parameters": {"type": "object", "properties": {"product_name": {"type": "string", "description": "Product name that wants to compare prices"}, "quantity": {"type": "integer", "description": "Quantity"}}, "required": ["product_name", "quantity"]}}}, {"type": "function", "function": {"name": "informLottoWinnerPrizeByRound", "description": "It is a function that informs the amount of lottery winnings of a specific episode.", "parameters": {"type": "object", "properties": {"round": {"type": "integer", "description": "A round that wants to check the amount of lottery winnings (e.g. 1001)"}}, "required": ["round"]}}}, {"type": "function", "function": {"name": "reserve_restaurant", "description": "Reservation of the restaurant with the information provided by the user. Example) Please make a reservation at 6 pm tonight", "parameters": {"type": "object", "properties": {"store": {"type": "string", "description": "Restaurant name"}, "reservationDate": {"type": "string", "description": "Reservation date (YYYY-MM-DD)"}, "reservationTime": {"type": "string", "description": "Reservation time (hh: mm)"}, "numberOfPeople": {"type": "integer", "description": "Number of reservations"}}, "required": ["store", "reservationDate", "reservationTime", "numberOfPeople"]}}}], "type_of_output": "call", "ground_truth": {"name": "compare_office_supplies_prices", "arguments": "{\"product_name\": \"A4 용지\", \"quantity\": 2500}"}, "acceptable_arguments": null}
{"serial_num": 54, "category": "CALL", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "The company is trying to order 200 black ballpoint pens, but can you find out where you are the cheapest?"}], "input_tools": [{"type": "function", "function": {"name": "get_rainfall_probability", "description": "It brings probability information in a particular area.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Local name"}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "CallTaxi", "description": "Call a taxi from a specific location.", "parameters": {"type": "object", "properties": {"pickup_location": {"type": "string", "description": "Departure location (address, station name, building name, etc.)"}, "destination": {"type": "string", "description": "Arrival location (address, station name, building name, etc.)"}}, "required": ["pickup_location", "destination"]}}}, {"type": "function", "function": {"name": "compare_office_supplies_prices", "description": "Compare office supplies prices of various stores and provide the lowest price information.", "parameters": {"type": "object", "properties": {"product_name": {"type": "string", "description": "Product name that wants to compare prices"}, "quantity": {"type": "integer", "description": "Quantity"}}, "required": ["product_name", "quantity"]}}}, {"type": "function", "function": {"name": "create_user", "description": "Create a new user account.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "User's name"}, "email": {"type": "string", "description": "User's email address"}, "password": {"type": "string", "description": "User's password"}}, "required": ["name", "email", "password"]}}}, {"type": "function", "function": {"name": "getDailyNewsHeadlines", "description": "Today's main news headline is provided.", "parameters": {"type": "object", "properties": {}, "required": []}}}], "type_of_output": "call", "ground_truth": {"name": "compare_office_supplies_prices", "arguments": "{\"product_name\": \"검정볼펜\", \"quantity\": 200}"}, "acceptable_arguments": null}
{"serial_num": 55, "category": "CALL", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "You will need 50 boardmaccar blue by tomorrow. Compare the prices of various places to tell me the lowest price"}], "input_tools": [{"type": "function", "function": {"name": "find_nearest_emergency_room_by_location", "description": "Based on a specific location, it provides the location and information of the nearby emergency room.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Current location (example: station, address, building name, etc.)"}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "getCryptocurrencyPrice", "description": "Inquire the current price of a specific cryptocurrency.", "parameters": {"type": "object", "properties": {"cryptocurrency": {"type": "string", "description": "Cryptocurrency name to view the price"}}, "required": ["cryptocurrency"]}}}, {"type": "function", "function": {"name": "compare_office_supplies_prices", "description": "Compare office supplies prices of various stores and provide the lowest price information.", "parameters": {"type": "object", "properties": {"product_name": {"type": "string", "description": "Product name that wants to compare prices"}, "quantity": {"type": "integer", "description": "Quantity"}}, "required": ["product_name", "quantity"]}}}, {"type": "function", "function": {"name": "informTyphoon", "description": "It provides location information of the current typhoon.", "parameters": {"type": "object", "properties": {"typhoonName": {"type": "string", "description": "The name of the typhoon to look upon"}}, "required": ["typhoonName"]}}}, {"type": "function", "function": {"name": "informLottoNumberByRound", "description": "It is a function that informs the lottery winning number of a specific episode.", "parameters": {"type": "object", "properties": {"round": {"type": "integer", "description": "The round to check the lottery winning number"}}, "required": ["round"]}}}], "type_of_output": "call", "ground_truth": {"name": "compare_office_supplies_prices", "arguments": "{\"product_name\": \"보드마카 청색\", \"quantity\": 50}"}, "acceptable_arguments": null}
{"serial_num": 56, "category": "CALL", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "I'm trying to buy 10 staplers. Can you compare the prices of various retailers?"}], "input_tools": [{"type": "function", "function": {"name": "get_movie_details", "description": "Genre, directors, actors, plot, and screening time provide detailed information.", "parameters": {"type": "object", "properties": {"title": {"type": "string", "description": "Film title"}, "year": {"type": "integer", "description": "Movie release year"}}, "required": ["title"]}}}, {"type": "function", "function": {"name": "recommendLuckMessage", "description": "It is a function that recommends lucky words randomly.", "parameters": {"type": "object", "properties": {}, "required": []}}}, {"type": "function", "function": {"name": "compare_office_supplies_prices", "description": "Compare office supplies prices of various stores and provide the lowest price information.", "parameters": {"type": "object", "properties": {"product_name": {"type": "string", "description": "Product name that wants to compare prices"}, "quantity": {"type": "integer", "description": "Quantity"}}, "required": ["product_name", "quantity"]}}}, {"type": "function", "function": {"name": "add_contact", "description": "Register a new contact.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "Name to register a contact"}, "phone": {"type": "string", "description": "phone number"}, "email": {"type": "string", "description": "Email address"}}, "required": ["name"]}}}, {"type": "function", "function": {"name": "add_movie_review", "description": "Add a review of a specific movie to the movie scrapbook.", "parameters": {"type": "object", "properties": {"movie_id": {"type": "string", "description": "ID of the movie to add a review"}, "review_text": {"type": "string", "description": "Movie review contents"}}, "required": ["movie_id", "review_text"]}}}], "type_of_output": "call", "ground_truth": {"name": "compare_office_supplies_prices", "arguments": "{\"product_name\": \"스테이플러\", \"quantity\": 10}"}, "acceptable_arguments": null}
{"serial_num": 57, "category": "CALL", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "I want to find a surf club held in Haeundae, Busan. Give me some information."}], "input_tools": [{"type": "function", "function": {"name": "update_contact", "description": "Update (modify or add) contents of existing contacts.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "Name stored in the current contact"}, "new_name": {"type": "string", "description": "Name to update"}, "new_phone": {"type": "string", "description": "Phone number to update"}, "new_email": {"type": "string", "description": "Email address to be updated"}}, "required": ["name"]}}}, {"type": "function", "function": {"name": "deleteMemo", "description": "Delete the previously stored notes", "parameters": {"type": "object", "properties": {"memo_id": {"type": "string", "description": "A unique identifier of the memo to delete"}}, "required": ["memo_id"]}}}, {"type": "function", "function": {"name": "find_group_or_club", "description": "Provides meetings or club information on certain topics based on the area around the specific location.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Where to find a meeting or club"}, "topic": {"type": "string", "description": "Interest"}}, "required": ["location", "topic"]}}}, {"type": "function", "function": {"name": "informLottoWinnerPrizeByRound", "description": "It is a function that informs the amount of lottery winnings of a specific episode.", "parameters": {"type": "object", "properties": {"round": {"type": "integer", "description": "A round that wants to check the amount of lottery winnings (e.g. 1001)"}}, "required": ["round"]}}}, {"type": "function", "function": {"name": "calculate_tax", "description": "Calculate the tax on the given amount.", "parameters": {"type": "object", "properties": {"amount": {"type": "number", "description": "Prior to calculating"}, "tax_rate": {"type": "number", "description": "Tax rate to be applied (percentage)"}}, "required": ["amount", "tax_rate"]}}}], "type_of_output": "call", "ground_truth": {"name": "find_group_or_club", "arguments": "{\"location\": \"부산 해운대\", \"topic\": \"서핑\"}"}, "acceptable_arguments": null}
{"serial_num": 58, "category": "CALL", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "I want to find an art class club in Suseong -gu, Daegu."}], "input_tools": [{"type": "function", "function": {"name": "calculateLifeExpectancy", "description": "BMI, physical activity level, and smoking status estimates average life expectancy", "parameters": {"type": "object", "properties": {"BMI": {"type": "number", "description": "Body mass index (BMI)"}, "activityLevel": {"type": "string", "description": "Physical activity level (low, normal, high choice)"}, "smokingStatus": {"type": "boolean", "description": "Smoking state (smoking = true, non -smoking = false)"}}, "required": ["BMI", "activityLevel", "smokingStatus"]}}}, {"type": "function", "function": {"name": "calculateTimeDifference", "description": "The time difference between the two regions is returned every time.", "parameters": {"type": "object", "properties": {"fromTimezone": {"type": "string", "description": "Time zone area"}, "toTimezone": {"type": "string", "description": "Time zone area for comparison"}}, "required": ["fromTimezone", "toTimezone"]}}}, {"type": "function", "function": {"name": "find_group_or_club", "description": "Provides meetings or club information on certain topics based on the area around the specific location.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Where to find a meeting or club"}, "topic": {"type": "string", "description": "Interest"}}, "required": ["location", "topic"]}}}, {"type": "function", "function": {"name": "informLottoWinnerPrizeByDate", "description": "It is a function that informs the amount of lottery winnings on a specific date.", "parameters": {"type": "object", "properties": {"date": {"type": "string", "description": "Date to check the amount of lottery winnings (e.g., March 4)"}}, "required": ["date"]}}}, {"type": "function", "function": {"name": "getCurrentTopSeries", "description": "We offer the current popular TV series rankings", "parameters": {"type": "object", "properties": {}, "required": []}}}], "type_of_output": "call", "ground_truth": {"name": "find_group_or_club", "arguments": "{\"location\": \"대구 수성구\", \"topic\": \"미술\"}"}, "acceptable_arguments": null}
{"serial_num": 59, "category": "CALL", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Can you find if there is a boxing meeting in Gwangju Mine -gu?"}], "input_tools": [{"type": "function", "function": {"name": "get_exchange_rate", "description": "Bring the exchange rate between the two currencies.", "parameters": {"type": "object", "properties": {"base_currency": {"type": "string", "description": "The Currency to Convert from."}, "target_currency": {"type": "string", "description": "The current to convert to."}}, "required": ["base_currency", "target_currency"]}}}, {"type": "function", "function": {"name": "search_contact", "description": "Search for a list of contacts in the name of a person and bring his phone number and email address.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "The name of a person who wants to check the contact"}}, "required": ["name"]}}}, {"type": "function", "function": {"name": "find_group_or_club", "description": "Provides meetings or club information on certain topics based on the area around the specific location.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Where to find a meeting or club"}, "topic": {"type": "string", "description": "Interest"}}, "required": ["location", "topic"]}}}, {"type": "function", "function": {"name": "calculate_bmi", "description": "Calculation of human body mass index (BMI)", "parameters": {"type": "object", "properties": {"height": {"type": "number", "description": "Centimeter key"}, "weight": {"type": "number", "description": "Kilogram unit weight"}}, "required": ["height", "weight"]}}}, {"type": "function", "function": {"name": "get_rainfall_probability", "description": "It brings probability information in a particular area.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Local name"}}, "required": ["location"]}}}], "type_of_output": "call", "ground_truth": {"name": "find_group_or_club", "arguments": "{\"location\": \"광주 광산구\", \"topic\": \"복싱\"}"}, "acceptable_arguments": null}
{"serial_num": 60, "category": "CALL", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "I want to find out the Java programming meeting. The area is Seocho -gu."}], "input_tools": [{"type": "function", "function": {"name": "informLottoWinnerPrizeByDate", "description": "It is a function that informs the amount of lottery winnings on a specific date.", "parameters": {"type": "object", "properties": {"date": {"type": "string", "description": "Date to check the amount of lottery winnings (e.g., March 4)"}}, "required": ["date"]}}}, {"type": "function", "function": {"name": "getMonthlyBoxOfficeRanking", "description": "It offers a monthly box office ranking for the designated year and month.", "parameters": {"type": "object", "properties": {"year": {"type": "string", "description": "The year to look up (yyyy format)"}, "month": {"type": "string", "description": "Month to look up (MM format)"}}, "required": ["year", "month"]}}}, {"type": "function", "function": {"name": "find_group_or_club", "description": "Provides meetings or club information on certain topics based on the area around the specific location.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Where to find a meeting or club"}, "topic": {"type": "string", "description": "Interest"}}, "required": ["location", "topic"]}}}, {"type": "function", "function": {"name": "convert_to_uppercase", "description": "Converted strings to capital letters", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "String"}}, "required": ["text"]}}}, {"type": "function", "function": {"name": "generate_random_special_chars", "description": "Randomly return by selecting 5 special characters randomly from a special character set.", "parameters": {"type": "object", "properties": {}, "required": []}}}], "type_of_output": "call", "ground_truth": {"name": "find_group_or_club", "arguments": "{\"location\": \"서초구\", \"topic\": \"자바 프로그래밍\"}"}, "acceptable_arguments": null}
{"serial_num": 61, "category": "CALL", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Please register Park Seo -yeon's birthday. It is March 15, 1995 ~~~"}], "input_tools": [{"type": "function", "function": {"name": "getCurrentUTCTime", "description": "We offer current UTC time.", "parameters": {}}}, {"type": "function", "function": {"name": "count_characters", "description": "Returns the total number of characters from a given string", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Cell string"}}, "required": ["text"]}}}, {"type": "function", "function": {"name": "registerFriendBirthday", "description": "A function that registers a friend's name and birthday information", "parameters": {"type": "object", "properties": {"friendName": {"type": "string", "description": "A friend's name to register"}, "birthday": {"type": "string", "description": "The birthday of a friend to register (YYYY-MM-DD format)"}}, "required": ["friendName", "birthday"]}}}, {"type": "function", "function": {"name": "update_item_quantity_in_shopping_cart", "description": "Update the quantity of specific products in the shopping cart", "parameters": {"type": "object", "properties": {"user_id": {"type": "string", "description": "User's unique identifier"}, "product_id": {"type": "string", "description": "A unique identifier of products that want to update the quantity"}, "new_quantity": {"type": "integer", "description": "New quantity to update"}}, "required": ["user_id", "product_id", "new_quantity"]}}}, {"type": "function", "function": {"name": "calculateTimeDifference", "description": "The time difference between the two regions is returned every time.", "parameters": {"type": "object", "properties": {"fromTimezone": {"type": "string", "description": "Time zone area"}, "toTimezone": {"type": "string", "description": "Time zone area for comparison"}}, "required": ["fromTimezone", "toTimezone"]}}}], "type_of_output": "call", "ground_truth": {"name": "registerFriendBirthday", "arguments": "{\"friendName\": \"박서연\", \"birthday\": \"1995-03-15\"}"}, "acceptable_arguments": null}
{"serial_num": 62, "category": "CALL", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Choi Yua 20050109 Birthday Please register"}], "input_tools": [{"type": "function", "function": {"name": "recommendLottoNumber", "description": "It is a function that recommends a lotto number randomly.", "parameters": {"type": "object", "properties": {}, "required": []}}}, {"type": "function", "function": {"name": "search_flight", "description": "Search for a flight from a specific airport and arriving at a specific airport.", "parameters": {"type": "object", "properties": {"departure_airport": {"type": "string", "description": "Departure airport name (extracted as user expression. Example: Los Angeles International Airport, Gimhae Airport, etc.)"}, "arrival_airport": {"type": "string", "description": "Arrival airport name (extracting as it is, Example: Los Angeles International Airport, Gimhae Airport, etc.)"}, "departure_date": {"type": "string", "description": "Departure Date (YYYY-MM-DD)"}}, "required": ["departure_airport", "arrival_airport", "departure_date"]}}}, {"type": "function", "function": {"name": "registerFriendBirthday", "description": "A function that registers a friend's name and birthday information", "parameters": {"type": "object", "properties": {"friendName": {"type": "string", "description": "A friend's name to register"}, "birthday": {"type": "string", "description": "The birthday of a friend to register (YYYY-MM-DD format)"}}, "required": ["friendName", "birthday"]}}}, {"type": "function", "function": {"name": "calculate_discount", "description": "Input the original price and discount rate (percentage unit) to calculate the discounted price.", "parameters": {"type": "object", "properties": {"original_price": {"type": "number", "description": "Original price of the product"}, "discount_percentage": {"type": "number", "description": "Discount rate to be applied (for example, 20% discount)"}}, "required": ["original_price", "discount_percentage"]}}}, {"type": "function", "function": {"name": "count_lowercase_letters", "description": "The number of lowercase in the string", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Cell string for lowercase"}}, "required": ["text"]}}}], "type_of_output": "call", "ground_truth": {"name": "registerFriendBirthday", "arguments": "{\"friendName\": \"최유나\", \"birthday\": \"2005-01-09\"}"}, "acceptable_arguments": "{\"birthday\": \"Only YYYY-MM-DD format is allowed.\"}"}
{"serial_num": 63, "category": "CALL", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Birthday Registration: Taehee 1989.02.17"}], "input_tools": [{"type": "function", "function": {"name": "search_message_content", "description": "Search for a message containing the keywords specified by the user among the saved messages.", "parameters": {"type": "object", "properties": {"keyword": {"type": "string", "description": "Keyword to search"}, "from_date": {"type": "string", "description": "Date to start searching (optional)"}, "to_date": {"type": "string", "description": "Date to finish the search (optional)"}}, "required": ["keyword"]}}}, {"type": "function", "function": {"name": "track_order", "description": "Inquire an order status (ordering, payment completion, shipping, delivery, etc.) with a given order number and informed the expected shipping date or expected delivery date.", "parameters": {"type": "object", "properties": {"order_id": {"type": "string", "description": "Order number to search"}}, "required": ["order_id"]}}}, {"type": "function", "function": {"name": "registerFriendBirthday", "description": "A function that registers a friend's name and birthday information", "parameters": {"type": "object", "properties": {"friendName": {"type": "string", "description": "A friend's name to register"}, "birthday": {"type": "string", "description": "The birthday of a friend to register (YYYY-MM-DD format)"}}, "required": ["friendName", "birthday"]}}}, {"type": "function", "function": {"name": "getMonthlyBoxOfficeRanking", "description": "It offers a monthly box office ranking for the designated year and month.", "parameters": {"type": "object", "properties": {"year": {"type": "string", "description": "The year to look up (yyyy format)"}, "month": {"type": "string", "description": "Month to look up (MM format)"}}, "required": ["year", "month"]}}}, {"type": "function", "function": {"name": "deleteMemo", "description": "Delete the previously stored notes", "parameters": {"type": "object", "properties": {"memo_id": {"type": "string", "description": "A unique identifier of the memo to delete"}}, "required": ["memo_id"]}}}], "type_of_output": "call", "ground_truth": {"name": "registerFriendBirthday", "arguments": "{\"friendName\": \"태희\", \"birthday\": \"1989-02-17\"}"}, "acceptable_arguments": null}
{"serial_num": 64, "category": "CALL", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "December 13, 2000, Hae -eun will register as a birthday !!"}], "input_tools": [{"type": "function", "function": {"name": "convert_eur_to_jpy", "description": "Convert the given Euro (EUR) amount to JPY", "parameters": {"type": "object", "properties": {"amount_eur": {"type": "number", "description": "EUR amount to convert"}}, "required": ["amount_eur"]}}}, {"type": "function", "function": {"name": "convert_pyeong_to_squaremeter", "description": "Convert it to \"평\"을 입력받아서, \"제곱미터\".", "parameters": {"type": "object", "properties": {"pyeong": {"type": "number", "description": "Pyeongsu to be transformed"}}, "required": ["pyeong"]}}}, {"type": "function", "function": {"name": "registerFriendBirthday", "description": "A function that registers a friend's name and birthday information", "parameters": {"type": "object", "properties": {"friendName": {"type": "string", "description": "A friend's name to register"}, "birthday": {"type": "string", "description": "The birthday of a friend to register (YYYY-MM-DD format)"}}, "required": ["friendName", "birthday"]}}}, {"type": "function", "function": {"name": "discover_new_releases_hiphop", "description": "Provides the latest music release information of the hip -hop genre", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "getCurrentUTCTime", "description": "We offer current UTC time.", "parameters": {}}}], "type_of_output": "call", "ground_truth": {"name": "registerFriendBirthday", "arguments": "{\"friendName\": \"하은이\", \"birthday\": \"2000-12-13\"}"}, "acceptable_arguments": "{\"friendName\": \"하은\"}"}
{"serial_num": 65, "category": "CALL", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Send email to Lee@email.com. The title is written by '신입 직원 교육 일정 문의'로 하고, 본문엔 '안녕하세요. 신입 직원 교육 일정을 문의 드립니다. 가능한 교육 일정과 내용에 관한 정보를 첨부해 주세요.'."}], "input_tools": [{"type": "function", "function": {"name": "informWeather", "description": "Provide current weather information in a particular area", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Local name to bring weather information"}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "registerFriendBirthday", "description": "A function that registers a friend's name and birthday information", "parameters": {"type": "object", "properties": {"friendName": {"type": "string", "description": "A friend's name to register"}, "birthday": {"type": "string", "description": "The birthday of a friend to register (YYYY-MM-DD format)"}}, "required": ["friendName", "birthday"]}}}, {"type": "function", "function": {"name": "sendEmail", "description": "Send email to a specific email address.", "parameters": {"type": "object", "properties": {"receiverEmail": {"type": "string", "description": "EMAIL address of the recipient"}, "subject": {"type": "string", "description": "Email title"}, "body": {"type": "string", "description": "Email content"}}, "required": ["receiverEmail", "subject", "body"]}}}, {"type": "function", "function": {"name": "informLottoWinnerPrizeByDate", "description": "It is a function that informs the amount of lottery winnings on a specific date.", "parameters": {"type": "object", "properties": {"date": {"type": "string", "description": "Date to check the amount of lottery winnings (e.g., March 4)"}}, "required": ["date"]}}}, {"type": "function", "function": {"name": "generate_playlist_based_on_favorite_artist", "description": "Create customized playlist based on preferred artists", "parameters": {"type": "object", "properties": {"artist_name": {"type": "string", "description": "The name of the artist that users prefer"}}, "required": ["artist_name"]}}}], "type_of_output": "call", "ground_truth": {"name": "sendEmail", "arguments": "{\"receiverEmail\": \"lee@email.com\", \"subject\": \"신입 직원 교육 일정 문의\", \"body\": \"안녕하세요. 신입 직원 교육 일정을 문의 드립니다. 가능한 교육 일정과 내용에 관한 정보를 첨부해 주세요.\"}"}, "acceptable_arguments": "Only ground truth is allowed."}
{"serial_num": 66, "category": "CALL", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "I want to send '주말 가족 모임 소식'이라는 제목으로 이메일을 보내고 싶어요. 본문에는 '이번주 토요일 저녁 7시에 가족 모임이 잡혔습니다. 일정 체크하셔서 참석 부탁드립니다.'. The address is park@email.com."}], "input_tools": [{"type": "function", "function": {"name": "calculate_discount", "description": "Input the original price and discount rate (percentage unit) to calculate the discounted price.", "parameters": {"type": "object", "properties": {"original_price": {"type": "number", "description": "Original price of the product"}, "discount_percentage": {"type": "number", "description": "Discount rate to be applied (for example, 20% discount)"}}, "required": ["original_price", "discount_percentage"]}}}, {"type": "function", "function": {"name": "generate_random_special_chars", "description": "Randomly return by selecting 5 special characters randomly from a special character set.", "parameters": {"type": "object", "properties": {}, "required": []}}}, {"type": "function", "function": {"name": "sendEmail", "description": "Send email to a specific email address.", "parameters": {"type": "object", "properties": {"receiverEmail": {"type": "string", "description": "EMAIL address of the recipient"}, "subject": {"type": "string", "description": "Email title"}, "body": {"type": "string", "description": "Email content"}}, "required": ["receiverEmail", "subject", "body"]}}}, {"type": "function", "function": {"name": "getDayOfWeek", "description": "Returns the day of the given date.", "parameters": {"type": "object", "properties": {"date": {"type": "string", "description": "Yyyy-mm-DD format date"}}, "required": ["date"]}}}, {"type": "function", "function": {"name": "search_flight", "description": "Search for a flight from a specific airport and arriving at a specific airport.", "parameters": {"type": "object", "properties": {"departure_airport": {"type": "string", "description": "Departure airport name (extracted as user expression. Example: Los Angeles International Airport, Gimhae Airport, etc.)"}, "arrival_airport": {"type": "string", "description": "Arrival airport name (extracting as it is, Example: Los Angeles International Airport, Gimhae Airport, etc.)"}, "departure_date": {"type": "string", "description": "Departure Date (YYYY-MM-DD)"}}, "required": ["departure_airport", "arrival_airport", "departure_date"]}}}], "type_of_output": "call", "ground_truth": {"name": "sendEmail", "arguments": "{\"receiverEmail\": \"park@email.com\", \"subject\": \"주말 가족 모임 소식\", \"body\": \"이번주 토요일 저녁 7시에 가족 모임이 잡혔습니다. 일정 체크하셔서 참석 부탁드립니다.\"}"}, "acceptable_arguments": "Only ground truth is allowed."}
{"serial_num": 67, "category": "CALL", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Hwang@email.com Please include '영수증 요청'이라는 제목의 이메일을 보내. 그리고 '지난번에 진행된 거래에 대한 영수증을 보내주시기 바랍니다.'."}], "input_tools": [{"type": "function", "function": {"name": "get_movie_schedule", "description": "Inquire a certain date and screening schedule for a specific movie theater.", "parameters": {"type": "object", "properties": {"movie_date": {"type": "string", "description": "Date to look up (YYYY-MM-DD)"}, "movie_location": {"type": "string", "description": "Cinema to look upon"}}, "required": ["movie_date", "movie_location"]}}}, {"type": "function", "function": {"name": "calculateProteinNeeds", "description": "Daily recommended protein intake considering activity level and weight", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}, "activityLevel": {"type": "string", "description": "Activity level ('low', 'moderate', 'high')"}}, "required": ["weight", "activityLevel"]}}}, {"type": "function", "function": {"name": "sendEmail", "description": "Send email to a specific email address.", "parameters": {"type": "object", "properties": {"receiverEmail": {"type": "string", "description": "EMAIL address of the recipient"}, "subject": {"type": "string", "description": "Email title"}, "body": {"type": "string", "description": "Email content"}}, "required": ["receiverEmail", "subject", "body"]}}}, {"type": "function", "function": {"name": "calculateLifeExpectancy", "description": "BMI, physical activity level, and smoking status estimates average life expectancy", "parameters": {"type": "object", "properties": {"BMI": {"type": "number", "description": "Body mass index (BMI)"}, "activityLevel": {"type": "string", "description": "Physical activity level (low, normal, high choice)"}, "smokingStatus": {"type": "boolean", "description": "Smoking state (smoking = true, non -smoking = false)"}}, "required": ["BMI", "activityLevel", "smokingStatus"]}}}, {"type": "function", "function": {"name": "convert_currency", "description": "Returns a value that exchanges a currency into another currency.", "parameters": {"type": "object", "properties": {"amount": {"type": "number", "description": "Money"}, "from": {"type": "string", "description": "Type of currency currency exchange"}, "to": {"type": "string", "description": "Type of currency exchange results"}}, "required": ["amount", "from", "to"]}}}], "type_of_output": "call", "ground_truth": {"name": "sendEmail", "arguments": "{\"receiverEmail\": \"hwang@email.com\", \"subject\": \"영수증 요청\", \"body\": \"지난번에 진행된 거래에 대한 영수증을 보내주시기 바랍니다.\"}"}, "acceptable_arguments": "Only ground truth is allowed."}
{"serial_num": 68, "category": "CALL", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Will you send an email to cho@email.com? The title is \"연말 평가 관련 자료 요청\"이고 이메일 본문은 \"연말 평가에 필요한 평가 기준과 평가받을 직원 목록을 준비해 주시기 바랍니다.\"!"}], "input_tools": [{"type": "function", "function": {"name": "generate_image_from_text", "description": "Create a picture based on a given text", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Text to create a picture"}}, "required": ["text"]}}}, {"type": "function", "function": {"name": "add_item_to_shopping_cart", "description": "Add new products to the shopping cart", "parameters": {"type": "object", "properties": {"product_id": {"type": "string", "description": "The unique identifier of the product you want to add"}, "quantity": {"type": "integer", "description": "Quantity"}}, "required": ["product_id", "quantity"]}}}, {"type": "function", "function": {"name": "sendEmail", "description": "Send email to a specific email address.", "parameters": {"type": "object", "properties": {"receiverEmail": {"type": "string", "description": "EMAIL address of the recipient"}, "subject": {"type": "string", "description": "Email title"}, "body": {"type": "string", "description": "Email content"}}, "required": ["receiverEmail", "subject", "body"]}}}, {"type": "function", "function": {"name": "compare_it_device_prices", "description": "It compares the price of IT devices from various sellers to provide low sales information.", "parameters": {"type": "object", "properties": {"device_name": {"type": "string", "description": "Name of IT devices that want to compare prices"}}, "required": ["device_name"]}}}, {"type": "function", "function": {"name": "convert_to_lowercase", "description": "Converted string to lowercase", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "String to be converted into lowercase"}}, "required": ["text"]}}}], "type_of_output": "call", "ground_truth": {"name": "sendEmail", "arguments": "{\"receiverEmail\": \"cho@email.com\", \"subject\": \"연말 평가 관련 자료 요청\", \"body\": \"연말 평가에 필요한 평가 기준과 평가받을 직원 목록을 준비해 주시기 바랍니다.\"}"}, "acceptable_arguments": "Only ground truth is allowed."}
{"serial_num": 69, "category": "CALL", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Please transfer 5,000 won to Hana Bank 123-456-789."}], "input_tools": [{"type": "function", "function": {"name": "update_movie_rating", "description": "Update (modify or add) movie rating in the movie scrapbook.", "parameters": {"type": "object", "properties": {"movie_id": {"type": "string", "description": "ID of the movie to update the rating"}, "new_rating": {"type": "integer", "description": "New rating to give to the movie (1 ~ 5)"}}, "required": ["movie_id", "new_rating"]}}}, {"type": "function", "function": {"name": "schedule_meeting", "description": "Book a meeting.", "parameters": {"type": "object", "properties": {"participants": {"type": "string", "description": "Participant list (if there are multiple participants, it is divided into a comma (,).)"}, "date_time": {"type": "string", "description": "Date and time of meeting (yyyy-mm-dd hh: mm format)"}}, "required": ["participants", "date_time"]}}}, {"type": "function", "function": {"name": "transferMoney", "description": "Send money to a specific account.", "parameters": {"type": "object", "properties": {"receiver_bank": {"type": "string", "description": "Bank"}, "receiver_account": {"type": "string", "description": "Account number to send"}, "amount": {"type": "number", "description": "Missing money (unit: krw))"}}, "required": ["receiver_bank", "receiver_account", "amount"]}}}, {"type": "function", "function": {"name": "get_currency_trend_3months", "description": "Provides exchange rate fluctuations for the last three months for the designated currency", "parameters": {"type": "object", "properties": {"currency_code": {"type": "string", "description": "Code of currency to bring the exchange rate fluctuations (e.g. USD, EUR, JPY)"}}, "required": ["currency_code"]}}}, {"type": "function", "function": {"name": "informLottoNumberByDate", "description": "It is a function that informs the lottery winning number on a specific date.", "parameters": {"type": "object", "properties": {"date": {"type": "string", "description": "Date to check the lottery winning number (e.g., March 4)"}}, "required": ["date"]}}}], "type_of_output": "call", "ground_truth": {"name": "transferMoney", "arguments": "{\"receiver_bank\": \"하나은행\", \"receiver_account\": \"123-456-789\", \"amount\": 5000}"}, "acceptable_arguments": "{\"amount\": 5000.0}"}
{"serial_num": 70, "category": "CALL", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "I have to send a dinner to my friend yesterday. Can I spend 300,000 won with Nonghyup Bank 567890123?"}], "input_tools": [{"type": "function", "function": {"name": "get_currency_trend_3months", "description": "Provides exchange rate fluctuations for the last three months for the designated currency", "parameters": {"type": "object", "properties": {"currency_code": {"type": "string", "description": "Code of currency to bring the exchange rate fluctuations (e.g. USD, EUR, JPY)"}}, "required": ["currency_code"]}}}, {"type": "function", "function": {"name": "checkBankBalance", "description": "Look up the balance of a specific bank account.", "parameters": {"type": "object", "properties": {"accountBank": {"type": "string", "description": "The bank name of the account to view the balance"}, "accountNumber": {"type": "string", "description": "Account number to view the balance"}}, "required": ["accountBank", "accountNumber"]}}}, {"type": "function", "function": {"name": "transferMoney", "description": "Send money to a specific account.", "parameters": {"type": "object", "properties": {"receiver_bank": {"type": "string", "description": "Bank"}, "receiver_account": {"type": "string", "description": "Account number to send"}, "amount": {"type": "number", "description": "Missing money (unit: krw))"}}, "required": ["receiver_bank", "receiver_account", "amount"]}}}, {"type": "function", "function": {"name": "track_order", "description": "Inquire an order status (ordering, payment completion, shipping, delivery, etc.) with a given order number and informed the expected shipping date or expected delivery date.", "parameters": {"type": "object", "properties": {"order_id": {"type": "string", "description": "Order number to search"}}, "required": ["order_id"]}}}, {"type": "function", "function": {"name": "DeleteEvent", "description": "Delete schedule from calendar", "parameters": {"type": "object", "properties": {"event_id": {"type": "string", "description": "ID of the schedule to be deleted"}}, "required": ["event_id"]}}}], "type_of_output": "call", "ground_truth": {"name": "transferMoney", "arguments": "{\"receiver_bank\": \"농협은행\", \"receiver_account\": \"567890123\", \"amount\": 30000}"}, "acceptable_arguments": "{\"amount\": 30000.0}"}
{"serial_num": 71, "category": "CALL", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Woori Bank 678-901-234 Here you will transfer to this five thousand won."}], "input_tools": [{"type": "function", "function": {"name": "search_contact", "description": "Search for a list of contacts in the name of a person and bring his phone number and email address.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "The name of a person who wants to check the contact"}}, "required": ["name"]}}}, {"type": "function", "function": {"name": "getWeatherForecastForNext7Days", "description": "For the designated area, we offer a 7 -day weather forecast, including today.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "The name of the area where the weather forecast"}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "transferMoney", "description": "Send money to a specific account.", "parameters": {"type": "object", "properties": {"receiver_bank": {"type": "string", "description": "Bank"}, "receiver_account": {"type": "string", "description": "Account number to send"}, "amount": {"type": "number", "description": "Missing money (unit: krw))"}}, "required": ["receiver_bank", "receiver_account", "amount"]}}}, {"type": "function", "function": {"name": "generate_random_special_chars", "description": "Randomly return by selecting 5 special characters randomly from a special character set.", "parameters": {"type": "object", "properties": {}, "required": []}}}, {"type": "function", "function": {"name": "check_traffic_status", "description": "Inquire the current traffic situation on a particular path.", "parameters": {"type": "object", "properties": {"start_location": {"type": "string", "description": "Departure"}, "end_location": {"type": "string", "description": "Arrival point"}}, "required": ["start_location", "end_location"]}}}], "type_of_output": "call", "ground_truth": {"name": "transferMoney", "arguments": "{\"receiver_bank\": \"우리은행\", \"receiver_account\": \"678-901-234\", \"amount\": 15000}"}, "acceptable_arguments": "{\"amount\": 15000.0}"}
{"serial_num": 72, "category": "CALL", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Send 8,000 won to your brother. The account is Kakao Bank 890-123-456."}], "input_tools": [{"type": "function", "function": {"name": "calculateBMR", "description": "Basal metabolic rate calculation", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}, "height": {"type": "number", "description": "Centimeter key"}, "age": {"type": "integer", "description": "age"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["weight", "height", "age", "gender"]}}}, {"type": "function", "function": {"name": "getCurrentKoreaTime", "description": "Currently, the time of Korea is returned to year-month-day: minor: second format.", "parameters": {}}}, {"type": "function", "function": {"name": "transferMoney", "description": "Send money to a specific account.", "parameters": {"type": "object", "properties": {"receiver_bank": {"type": "string", "description": "Bank"}, "receiver_account": {"type": "string", "description": "Account number to send"}, "amount": {"type": "number", "description": "Missing money (unit: krw))"}}, "required": ["receiver_bank", "receiver_account", "amount"]}}}, {"type": "function", "function": {"name": "create_user", "description": "Create a new user account.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "User's name"}, "email": {"type": "string", "description": "User's email address"}, "password": {"type": "string", "description": "User's password"}}, "required": ["name", "email", "password"]}}}, {"type": "function", "function": {"name": "search_email_content", "description": "Search for emails containing keywords specified by the user during the saved email.", "parameters": {"type": "object", "properties": {"keyword": {"type": "string", "description": "Keyword to search"}, "from_date": {"type": "string", "description": "Date to start searching (optional)"}, "to_date": {"type": "string", "description": "Date to finish the search (optional)"}, "sender": {"type": "string", "description": "Email caller address (optional)"}}, "required": ["keyword"]}}}], "type_of_output": "call", "ground_truth": {"name": "transferMoney", "arguments": "{\"receiver_bank\": \"카카오뱅크\", \"receiver_account\": \"890-123-456\", \"amount\": 8000}"}, "acceptable_arguments": "{\"amount\": 8000.0}"}
{"serial_num": 73, "category": "CALL", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "This evening is a pizza. Please order two editions in pepperoni pizza large size."}], "input_tools": [{"type": "function", "function": {"name": "create_playlist", "description": "Create a music playlist that fits the user's tastes and conditions", "parameters": {"type": "object", "properties": {"genre": {"type": "string", "description": "The genre of music to be included in the playlist"}, "mood": {"type": "string", "description": "Playlist's mood or atmosphere"}, "count": {"type": "integer", "description": "The number of songs to be included in the playlist"}, "include_live": {"type": "boolean", "description": "Live version songs include"}}, "required": ["genre", "mood", "count"]}}}, {"type": "function", "function": {"name": "convert_to_lowercase", "description": "Converted string to lowercase", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "String to be converted into lowercase"}}, "required": ["text"]}}}, {"type": "function", "function": {"name": "OrderPizza", "description": "Order pizza.", "parameters": {"type": "object", "properties": {"PizzaType": {"type": "string", "description": "Pizza"}, "size": {"type": "string", "description": "Pizza size (extracted as it is, example: Small, L, Medium, etc.)"}, "quantity": {"type": "integer", "description": "Order quantity"}}, "required": ["PizzaType", "size", "quantity"]}}}, {"type": "function", "function": {"name": "searchFriendBirthday", "description": "A function that enters a friend's name and searches for birthday information", "parameters": {"type": "object", "properties": {"friendName": {"type": "string", "description": "A friend's name to search"}}, "required": ["friendName"]}}}, {"type": "function", "function": {"name": "registerFriendBirthday", "description": "A function that registers a friend's name and birthday information", "parameters": {"type": "object", "properties": {"friendName": {"type": "string", "description": "A friend's name to register"}, "birthday": {"type": "string", "description": "The birthday of a friend to register (YYYY-MM-DD format)"}}, "required": ["friendName", "birthday"]}}}], "type_of_output": "call", "ground_truth": {"name": "OrderPizza", "arguments": "{\"PizzaType\": \"페퍼로니 피자\", \"size\": \"라지\", \"quantity\": 2}"}, "acceptable_arguments": "{\"PizzaType\": \"페퍼로니\"}"}
{"serial_num": 74, "category": "CALL", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "I want to order one with cheese pizza M."}], "input_tools": [{"type": "function", "function": {"name": "calculateProteinNeeds", "description": "Daily recommended protein intake considering activity level and weight", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}, "activityLevel": {"type": "string", "description": "Activity level ('low', 'moderate', 'high')"}}, "required": ["weight", "activityLevel"]}}}, {"type": "function", "function": {"name": "add_contact", "description": "Register a new contact.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "Name to register a contact"}, "phone": {"type": "string", "description": "phone number"}, "email": {"type": "string", "description": "Email address"}}, "required": ["name"]}}}, {"type": "function", "function": {"name": "OrderPizza", "description": "Order pizza.", "parameters": {"type": "object", "properties": {"PizzaType": {"type": "string", "description": "Pizza"}, "size": {"type": "string", "description": "Pizza size (extracted as it is, example: Small, L, Medium, etc.)"}, "quantity": {"type": "integer", "description": "Order quantity"}}, "required": ["PizzaType", "size", "quantity"]}}}, {"type": "function", "function": {"name": "convertTimeBetweenTimezones", "description": "Convert time to another time in one time.", "parameters": {"type": "object", "properties": {"originalTime": {"type": "string", "description": "Reference time to convert (format HH: mm)"}, "fromTimezone": {"type": "string", "description": "Standard time zone (region name)"}, "toTimezone": {"type": "string", "description": "Time to be converted (region name)"}}, "required": ["originalTime", "fromTimezone", "toTimezone"]}}}, {"type": "function", "function": {"name": "calculate_tip", "description": "Tip calculation", "parameters": {"type": "object", "properties": {"bill_amount": {"type": "number", "description": "Billed amount"}, "tip_percentage": {"type": "number", "description": "Tip 100 division (for example, 15 input for 15%)"}}, "required": ["bill_amount", "tip_percentage"]}}}], "type_of_output": "call", "ground_truth": {"name": "OrderPizza", "arguments": "{\"PizzaType\": \"치즈 피자\", \"size\": \"M\", \"quantity\": 1}"}, "acceptable_arguments": "{\"PizzaType\": \"치즈\"}"}
{"serial_num": 75, "category": "CALL", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Hawaiian Pizza Medium Size Three Edition Order"}], "input_tools": [{"type": "function", "function": {"name": "registerFriendBirthday", "description": "A function that registers a friend's name and birthday information", "parameters": {"type": "object", "properties": {"friendName": {"type": "string", "description": "A friend's name to register"}, "birthday": {"type": "string", "description": "The birthday of a friend to register (YYYY-MM-DD format)"}}, "required": ["friendName", "birthday"]}}}, {"type": "function", "function": {"name": "calculate_discount", "description": "Input the original price and discount rate (percentage unit) to calculate the discounted price.", "parameters": {"type": "object", "properties": {"original_price": {"type": "number", "description": "Original price of the product"}, "discount_percentage": {"type": "number", "description": "Discount rate to be applied (for example, 20% discount)"}}, "required": ["original_price", "discount_percentage"]}}}, {"type": "function", "function": {"name": "OrderPizza", "description": "Order pizza.", "parameters": {"type": "object", "properties": {"PizzaType": {"type": "string", "description": "Pizza"}, "size": {"type": "string", "description": "Pizza size (extracted as it is, example: Small, L, Medium, etc.)"}, "quantity": {"type": "integer", "description": "Order quantity"}}, "required": ["PizzaType", "size", "quantity"]}}}, {"type": "function", "function": {"name": "transferMoney", "description": "Send money to a specific account.", "parameters": {"type": "object", "properties": {"receiver_bank": {"type": "string", "description": "Bank"}, "receiver_account": {"type": "string", "description": "Account number to send"}, "amount": {"type": "number", "description": "Missing money (unit: krw))"}}, "required": ["receiver_bank", "receiver_account", "amount"]}}}, {"type": "function", "function": {"name": "find_nearest_emergency_room_by_location", "description": "Based on a specific location, it provides the location and information of the nearby emergency room.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Current location (example: station, address, building name, etc.)"}}, "required": ["location"]}}}], "type_of_output": "call", "ground_truth": {"name": "OrderPizza", "arguments": "{\"PizzaType\": \"하와이안 피자\", \"size\": \"미디엄\", \"quantity\": 3}"}, "acceptable_arguments": "{\"PizzaType\": \"하와이안\"}"}
{"serial_num": 76, "category": "CALL", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Please order one bulgogi pizza."}], "input_tools": [{"type": "function", "function": {"name": "convert_euro_to_koruna", "description": "Convert the Given EUR amount to Czech Coruna (CZK)", "parameters": {"type": "object", "properties": {"amount_euro": {"type": "number", "description": "EUR amount to convert"}, "exchange_rate_eur_to_czk": {"type": "number", "description": "Exchange rate from EUR to CZK"}}, "required": ["amount_euro", "exchange_rate_eur_to_czk"]}}}, {"type": "function", "function": {"name": "getCurrentTopSeries", "description": "We offer the current popular TV series rankings", "parameters": {"type": "object", "properties": {}, "required": []}}}, {"type": "function", "function": {"name": "OrderPizza", "description": "Order pizza.", "parameters": {"type": "object", "properties": {"PizzaType": {"type": "string", "description": "Pizza"}, "size": {"type": "string", "description": "Pizza size (extracted as it is, example: Small, L, Medium, etc.)"}, "quantity": {"type": "integer", "description": "Order quantity"}}, "required": ["PizzaType", "size", "quantity"]}}}, {"type": "function", "function": {"name": "calculateCaloricNeeds", "description": "A function that estimates the average daily calorie consumption", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}, "height": {"type": "number", "description": "Centimeter key"}, "age": {"type": "integer", "description": "age"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["weight", "height", "age", "gender"]}}}, {"type": "function", "function": {"name": "convert_pyeong_to_squaremeter", "description": "Convert it to \"평\"을 입력받아서, \"제곱미터\".", "parameters": {"type": "object", "properties": {"pyeong": {"type": "number", "description": "Pyeongsu to be transformed"}}, "required": ["pyeong"]}}}], "type_of_output": "call", "ground_truth": {"name": "OrderPizza", "arguments": "{\"PizzaType\": \"불고기 피자\", \"size\": \"Large\", \"quantity\": 1}"}, "acceptable_arguments": "{\"PizzaType\": \"불고기\"}"}
{"serial_num": 77, "category": "CALL", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Can you find a plane 2022/10/30 from Gimpo Airport to Gimhae Airport?"}], "input_tools": [{"type": "function", "function": {"name": "convert_currency", "description": "Returns a value that exchanges a currency into another currency.", "parameters": {"type": "object", "properties": {"amount": {"type": "number", "description": "Money"}, "from": {"type": "string", "description": "Type of currency currency exchange"}, "to": {"type": "string", "description": "Type of currency exchange results"}}, "required": ["amount", "from", "to"]}}}, {"type": "function", "function": {"name": "FindPrinterError", "description": "Returns the current error status (lack of paper, lack of ink, etc.) of certain printers in the company.", "parameters": {"type": "object", "properties": {"PrinterLocation": {"type": "string", "description": "The location of the printer to identify the error condition"}}, "required": ["PrinterLocation"]}}}, {"type": "function", "function": {"name": "search_flight", "description": "Search for a flight from a specific airport and arriving at a specific airport.", "parameters": {"type": "object", "properties": {"departure_airport": {"type": "string", "description": "Departure airport name (extracted as user expression. Example: Los Angeles International Airport, Gimhae Airport, etc.)"}, "arrival_airport": {"type": "string", "description": "Arrival airport name (extracting as it is, Example: Los Angeles International Airport, Gimhae Airport, etc.)"}, "departure_date": {"type": "string", "description": "Departure Date (YYYY-MM-DD)"}}, "required": ["departure_airport", "arrival_airport", "departure_date"]}}}, {"type": "function", "function": {"name": "get_currency_trend_3months", "description": "Provides exchange rate fluctuations for the last three months for the designated currency", "parameters": {"type": "object", "properties": {"currency_code": {"type": "string", "description": "Code of currency to bring the exchange rate fluctuations (e.g. USD, EUR, JPY)"}}, "required": ["currency_code"]}}}, {"type": "function", "function": {"name": "convert_to_lowercase", "description": "Converted string to lowercase", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "String to be converted into lowercase"}}, "required": ["text"]}}}], "type_of_output": "call", "ground_truth": {"name": "search_flight", "arguments": "{\"departure_airport\": \"김포공항\", \"arrival_airport\": \"김해공항\", \"departure_date\": \"2022-10-30\"}"}, "acceptable_arguments": null}
{"serial_num": 78, "category": "CALL", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Learn a flight from New York JFK Airport to Athens International Airport at 2024-10-26."}], "input_tools": [{"type": "function", "function": {"name": "recommendLottoNumber", "description": "It is a function that recommends a lotto number randomly.", "parameters": {"type": "object", "properties": {}, "required": []}}}, {"type": "function", "function": {"name": "get_stock_price", "description": "Search the current price of a particular stock.", "parameters": {"type": "object", "properties": {"stock_name": {"type": "string", "description": "Stock name to look up"}}, "required": ["stock_name"]}}}, {"type": "function", "function": {"name": "search_flight", "description": "Search for a flight from a specific airport and arriving at a specific airport.", "parameters": {"type": "object", "properties": {"departure_airport": {"type": "string", "description": "Departure airport name (extracted as user expression. Example: Los Angeles International Airport, Gimhae Airport, etc.)"}, "arrival_airport": {"type": "string", "description": "Arrival airport name (extracting as it is, Example: Los Angeles International Airport, Gimhae Airport, etc.)"}, "departure_date": {"type": "string", "description": "Departure Date (YYYY-MM-DD)"}}, "required": ["departure_airport", "arrival_airport", "departure_date"]}}}, {"type": "function", "function": {"name": "bookBusinessVehicle", "description": "Book a car for business trips.", "parameters": {"type": "object", "properties": {"destination": {"type": "string", "description": "destination"}, "departure_date": {"type": "string", "description": "Express your departure date as it is. Example) '다음 주 월요일', '2022년 1월 1일'"}}, "required": ["destination", "departure_date"]}}}, {"type": "function", "function": {"name": "DeleteEvent", "description": "Delete schedule from calendar", "parameters": {"type": "object", "properties": {"event_id": {"type": "string", "description": "ID of the schedule to be deleted"}}, "required": ["event_id"]}}}], "type_of_output": "call", "ground_truth": {"name": "search_flight", "arguments": "{\"departure_airport\": \"뉴욕 JFK 공항\", \"arrival_airport\": \"아테네 국제공항\", \"departure_date\": \"2024-10-26\"}"}, "acceptable_arguments": null}
{"serial_num": 79, "category": "CALL", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Find some plane information from Haneda Airport to Incheon International Airport."}], "input_tools": [{"type": "function", "function": {"name": "convert_to_lowercase", "description": "Converted string to lowercase", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "String to be converted into lowercase"}}, "required": ["text"]}}}, {"type": "function", "function": {"name": "reserve_restaurant", "description": "Reservation of the restaurant with the information provided by the user. Example) Please make a reservation at 6 pm tonight", "parameters": {"type": "object", "properties": {"store": {"type": "string", "description": "Restaurant name"}, "reservationDate": {"type": "string", "description": "Reservation date (YYYY-MM-DD)"}, "reservationTime": {"type": "string", "description": "Reservation time (hh: mm)"}, "numberOfPeople": {"type": "integer", "description": "Number of reservations"}}, "required": ["store", "reservationDate", "reservationTime", "numberOfPeople"]}}}, {"type": "function", "function": {"name": "search_flight", "description": "Search for a flight from a specific airport and arriving at a specific airport.", "parameters": {"type": "object", "properties": {"departure_airport": {"type": "string", "description": "Departure airport name (extracted as user expression. Example: Los Angeles International Airport, Gimhae Airport, etc.)"}, "arrival_airport": {"type": "string", "description": "Arrival airport name (extracting as it is, Example: Los Angeles International Airport, Gimhae Airport, etc.)"}, "departure_date": {"type": "string", "description": "Departure Date (YYYY-MM-DD)"}}, "required": ["departure_airport", "arrival_airport", "departure_date"]}}}, {"type": "function", "function": {"name": "convert_euro_to_koruna", "description": "Convert the Given EUR amount to Czech Coruna (CZK)", "parameters": {"type": "object", "properties": {"amount_euro": {"type": "number", "description": "EUR amount to convert"}, "exchange_rate_eur_to_czk": {"type": "number", "description": "Exchange rate from EUR to CZK"}}, "required": ["amount_euro", "exchange_rate_eur_to_czk"]}}}, {"type": "function", "function": {"name": "generate_random_password", "description": "Create any password with certain conditions", "parameters": {"type": "object", "properties": {"length": {"type": "integer", "description": "Password length"}, "include_uppercase": {"type": "boolean", "description": "Including alphabet uppercase letters"}, "include_lowercase": {"type": "boolean", "description": "Including alphabet lowercase"}, "include_numbers": {"type": "boolean", "description": "Whether the number includes"}}, "required": ["length", "include_uppercase", "include_lowercase", "include_numbers"]}}}], "type_of_output": "call", "ground_truth": {"name": "search_flight", "arguments": "{\"departure_airport\": \"하네다 공항\", \"arrival_airport\": \"인천국제공항\", \"departure_date\": \"2024-09-29\"}"}, "acceptable_arguments": null}
{"serial_num": 80, "category": "CALL", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "What is the plane departing from London Hydro Airport to Paris Charles de Gaulle International Airport on October 3, 2024?"}], "input_tools": [{"type": "function", "function": {"name": "convert_krw_to_usd", "description": "Converted Korean money (KRW) to USD (USD)", "parameters": {"type": "object", "properties": {"amount_krw": {"type": "number", "description": "Korean money (KRW) amount to convert"}, "exchange_rate_krw_to_usd": {"type": "number", "description": "Exchange rate from KRW to USD"}}, "required": ["amount_krw", "exchange_rate_krw_to_usd"]}}}, {"type": "function", "function": {"name": "getCurrentKoreaTime", "description": "Currently, the time of Korea is returned to year-month-day: minor: second format.", "parameters": {}}}, {"type": "function", "function": {"name": "search_flight", "description": "Search for a flight from a specific airport and arriving at a specific airport.", "parameters": {"type": "object", "properties": {"departure_airport": {"type": "string", "description": "Departure airport name (extracted as user expression. Example: Los Angeles International Airport, Gimhae Airport, etc.)"}, "arrival_airport": {"type": "string", "description": "Arrival airport name (extracting as it is, Example: Los Angeles International Airport, Gimhae Airport, etc.)"}, "departure_date": {"type": "string", "description": "Departure Date (YYYY-MM-DD)"}}, "required": ["departure_airport", "arrival_airport", "departure_date"]}}}, {"type": "function", "function": {"name": "informLottoNumberByRound", "description": "It is a function that informs the lottery winning number of a specific episode.", "parameters": {"type": "object", "properties": {"round": {"type": "integer", "description": "The round to check the lottery winning number"}}, "required": ["round"]}}}, {"type": "function", "function": {"name": "count_lowercase_letters", "description": "The number of lowercase in the string", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Cell string for lowercase"}}, "required": ["text"]}}}], "type_of_output": "call", "ground_truth": {"name": "search_flight", "arguments": "{\"departure_airport\": \"런던 히드로 공항\", \"arrival_airport\": \"파리 샤를드골 국제공항\", \"departure_date\": \"2024-10-03\"}"}, "acceptable_arguments": null}
{"serial_num": 81, "category": "CALL", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Compare the companies that can clean the 30 -pyeong apartment in Gangnam -gu, Seoul on March 15, 2024."}], "input_tools": [{"type": "function", "function": {"name": "schedule_laundry_pickup", "description": "Apply for a service to collect laundry.", "parameters": {"type": "object", "properties": {"pickup_location": {"type": "string", "description": "Extract the location of the user as it is to collect the laundry. (Example: House, 101 -dong 102, etc."}, "pickup_date": {"type": "string", "description": "Extract the laundry collection date as it is. (Example: next Monday, January 1, 2022, etc.)"}, "pickup_time": {"type": "string", "description": "Extract the time to collect the laundry as it is. (Example: 2 pm, 7 pm, etc.)"}}, "required": ["pickup_location", "pickup_date", "pickup_time"]}}}, {"type": "function", "function": {"name": "getCurrentUTCTime", "description": "We offer current UTC time.", "parameters": {}}}, {"type": "function", "function": {"name": "compareCleaningServices", "description": "Compare the service of the cleaning company and provide information.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Location or area where cleaning services are needed"}, "requested_date": {"type": "string", "format": "date", "description": "Service date (extract user as it is. Example: next Monday, January 1, 2022, etc.)"}, "size": {"type": "string", "description": "Pyeongsu or area of ​​the house (flat, square meter)"}}, "required": ["location", "requested_date", "size"]}}}, {"type": "function", "function": {"name": "convertTimeBetweenTimezones", "description": "Convert time to another time in one time.", "parameters": {"type": "object", "properties": {"originalTime": {"type": "string", "description": "Reference time to convert (format HH: mm)"}, "fromTimezone": {"type": "string", "description": "Standard time zone (region name)"}, "toTimezone": {"type": "string", "description": "Time to be converted (region name)"}}, "required": ["originalTime", "fromTimezone", "toTimezone"]}}}, {"type": "function", "function": {"name": "calculateBMR", "description": "Basal metabolic rate calculation", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}, "height": {"type": "number", "description": "Centimeter key"}, "age": {"type": "integer", "description": "age"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["weight", "height", "age", "gender"]}}}], "type_of_output": "call", "ground_truth": {"name": "compareCleaningServices", "arguments": "{\"location\": \"서울 강남구\", \"requested_date\": \"2024년 3월 15일\", \"size\": \"30평\"}"}, "acceptable_arguments": null}
{"serial_num": 82, "category": "CALL", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "This Saturday, I compare the places where you can clean the 8 -pyeong studio in Seo -gu, Daejeon."}], "input_tools": [{"type": "function", "function": {"name": "searchMemo", "description": "Search for notes containing keywords specified by the user among the saved memos.", "parameters": {"type": "object", "properties": {"keyword": {"type": "string", "description": "Keyword to search"}}, "required": ["keyword"]}}}, {"type": "function", "function": {"name": "add_movie_review", "description": "Add a review of a specific movie to the movie scrapbook.", "parameters": {"type": "object", "properties": {"movie_id": {"type": "string", "description": "ID of the movie to add a review"}, "review_text": {"type": "string", "description": "Movie review contents"}}, "required": ["movie_id", "review_text"]}}}, {"type": "function", "function": {"name": "compareCleaningServices", "description": "Compare the service of the cleaning company and provide information.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Location or area where cleaning services are needed"}, "requested_date": {"type": "string", "format": "date", "description": "Service date (extract user as it is. Example: next Monday, January 1, 2022, etc.)"}, "size": {"type": "string", "description": "Pyeongsu or area of ​​the house (flat, square meter)"}}, "required": ["location", "requested_date", "size"]}}}, {"type": "function", "function": {"name": "book_concert_tickets", "description": "Tickets for specific performances are made using external ticketing systems.", "parameters": {"type": "object", "properties": {"concert_name": {"type": "string", "description": "The name of the performance you want to book"}, "number_of_tickets": {"type": "integer", "description": "Quantity"}, "seat_type": {"type": "string", "description": "Selected seat type (e.g. VIP, general)"}}, "required": ["concert_name", "number_of_tickets", "seat_type"]}}}, {"type": "function", "function": {"name": "informTyphoon", "description": "It provides location information of the current typhoon.", "parameters": {"type": "object", "properties": {"typhoonName": {"type": "string", "description": "The name of the typhoon to look upon"}}, "required": ["typhoonName"]}}}], "type_of_output": "call", "ground_truth": {"name": "compareCleaningServices", "arguments": "{\"location\": \"대전 서구\", \"requested_date\": \"이번주 토요일\", \"size\": \"8평\"}"}, "acceptable_arguments": null}
{"serial_num": 83, "category": "CALL", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Can you find and compare the service that can clean 60 pyeong in Seogwipo, Jeju Island next Tuesday?"}], "input_tools": [{"type": "function", "function": {"name": "check_traffic_status", "description": "Inquire the current traffic situation on a particular path.", "parameters": {"type": "object", "properties": {"start_location": {"type": "string", "description": "Departure"}, "end_location": {"type": "string", "description": "Arrival point"}}, "required": ["start_location", "end_location"]}}}, {"type": "function", "function": {"name": "CheckTaxRefund", "description": "Search for the user's tax refund.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "The name of the tax paymenter"}, "birth": {"type": "string", "description": "Date of birth of tax payers (YYYY-MM-DD)"}, "phone_number": {"type": "string", "description": "Contact of tax payers"}}, "required": ["name", "birth", "phone_number"]}}}, {"type": "function", "function": {"name": "compareCleaningServices", "description": "Compare the service of the cleaning company and provide information.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Location or area where cleaning services are needed"}, "requested_date": {"type": "string", "format": "date", "description": "Service date (extract user as it is. Example: next Monday, January 1, 2022, etc.)"}, "size": {"type": "string", "description": "Pyeongsu or area of ​​the house (flat, square meter)"}}, "required": ["location", "requested_date", "size"]}}}, {"type": "function", "function": {"name": "convert_pyeong_to_squaremeter", "description": "Convert it to \"평\"을 입력받아서, \"제곱미터\".", "parameters": {"type": "object", "properties": {"pyeong": {"type": "number", "description": "Pyeongsu to be transformed"}}, "required": ["pyeong"]}}}, {"type": "function", "function": {"name": "generate_syntax_tree_from_text", "description": "Create a syntax tree for a given text", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Text to create a syntax tree"}}, "required": ["text"]}}}], "type_of_output": "call", "ground_truth": {"name": "compareCleaningServices", "arguments": "{\"location\": \"제주도 서귀포\", \"requested_date\": \"다음 주 화요일\", \"size\": \"60평\"}"}, "acceptable_arguments": null}
{"serial_num": 84, "category": "CALL", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "My house is about 130 square meters and compare companies that can be cleaned in Cheonan next Thursday."}], "input_tools": [{"type": "function", "function": {"name": "informTyphoon", "description": "It provides location information of the current typhoon.", "parameters": {"type": "object", "properties": {"typhoonName": {"type": "string", "description": "The name of the typhoon to look upon"}}, "required": ["typhoonName"]}}}, {"type": "function", "function": {"name": "bookBusinessVehicle", "description": "Book a car for business trips.", "parameters": {"type": "object", "properties": {"destination": {"type": "string", "description": "destination"}, "departure_date": {"type": "string", "description": "Express your departure date as it is. Example) '다음 주 월요일', '2022년 1월 1일'"}}, "required": ["destination", "departure_date"]}}}, {"type": "function", "function": {"name": "compareCleaningServices", "description": "Compare the service of the cleaning company and provide information.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Location or area where cleaning services are needed"}, "requested_date": {"type": "string", "format": "date", "description": "Service date (extract user as it is. Example: next Monday, January 1, 2022, etc.)"}, "size": {"type": "string", "description": "Pyeongsu or area of ​​the house (flat, square meter)"}}, "required": ["location", "requested_date", "size"]}}}, {"type": "function", "function": {"name": "count_uppercase_letters", "description": "The number of uppercase letters in the string", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Cell string"}}, "required": ["text"]}}}, {"type": "function", "function": {"name": "getDailyNewsHeadlines", "description": "Today's main news headline is provided.", "parameters": {"type": "object", "properties": {}, "required": []}}}], "type_of_output": "call", "ground_truth": {"name": "compareCleaningServices", "arguments": "{\"location\": \"천안\", \"requested_date\": \"다음 주 목요일\", \"size\": \"130제곱미터\"}"}, "acceptable_arguments": null}
{"serial_num": 85, "category": "CALL", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Upload my work: Image URL is https://example.com/myart.jpg, the title is 'Sunrise in the Mountains', 설명은 'This artwork depicts a beautiful mountain sunrise'."}], "input_tools": [{"type": "function", "function": {"name": "convert_euro_to_koruna", "description": "Convert the Given EUR amount to Czech Coruna (CZK)", "parameters": {"type": "object", "properties": {"amount_euro": {"type": "number", "description": "EUR amount to convert"}, "exchange_rate_eur_to_czk": {"type": "number", "description": "Exchange rate from EUR to CZK"}}, "required": ["amount_euro", "exchange_rate_eur_to_czk"]}}}, {"type": "function", "function": {"name": "count_characters", "description": "Returns the total number of characters from a given string", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Cell string"}}, "required": ["text"]}}}, {"type": "function", "function": {"name": "upload_artwork_to_online_site", "description": "Upload your work to the online art platform.", "parameters": {"type": "object", "properties": {"art_image_url": {"type": "string", "description": "The image of the work to be uploaded URL"}, "title": {"type": "string", "description": "Title of the work"}, "description": {"type": "string", "description": "A brief explanation of the work"}}, "required": ["art_image_url", "title", "description"]}}}, {"type": "function", "function": {"name": "add_contact", "description": "Register a new contact.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "Name to register a contact"}, "phone": {"type": "string", "description": "phone number"}, "email": {"type": "string", "description": "Email address"}}, "required": ["name"]}}}, {"type": "function", "function": {"name": "getCurrentTopSeries", "description": "We offer the current popular TV series rankings", "parameters": {"type": "object", "properties": {}, "required": []}}}], "type_of_output": "call", "ground_truth": {"name": "upload_artwork_to_online_site", "arguments": "{\"art_image_url\": \"https://example.com/myart.jpg\", \"title\": \"Sunrise in the Mountains\", \"description\": \"This artwork depicts a beautiful mountain sunrise\"}"}, "acceptable_arguments": "Only ground truth is allowed."}
{"serial_num": 86, "category": "CALL", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Can you post my work on the art platform? The image URL is https://example.com/myart.jpg, the title is '노을진 바다', 설명은 '바다 위로 지는 노을을 그린 작품입니다'"}], "input_tools": [{"type": "function", "function": {"name": "calculateCaloricNeeds", "description": "A function that estimates the average daily calorie consumption", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}, "height": {"type": "number", "description": "Centimeter key"}, "age": {"type": "integer", "description": "age"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["weight", "height", "age", "gender"]}}}, {"type": "function", "function": {"name": "track_order", "description": "Inquire an order status (ordering, payment completion, shipping, delivery, etc.) with a given order number and informed the expected shipping date or expected delivery date.", "parameters": {"type": "object", "properties": {"order_id": {"type": "string", "description": "Order number to search"}}, "required": ["order_id"]}}}, {"type": "function", "function": {"name": "upload_artwork_to_online_site", "description": "Upload your work to the online art platform.", "parameters": {"type": "object", "properties": {"art_image_url": {"type": "string", "description": "The image of the work to be uploaded URL"}, "title": {"type": "string", "description": "Title of the work"}, "description": {"type": "string", "description": "A brief explanation of the work"}}, "required": ["art_image_url", "title", "description"]}}}, {"type": "function", "function": {"name": "informWeather", "description": "Provide current weather information in a particular area", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Local name to bring weather information"}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "search_email_content", "description": "Search for emails containing keywords specified by the user during the saved email.", "parameters": {"type": "object", "properties": {"keyword": {"type": "string", "description": "Keyword to search"}, "from_date": {"type": "string", "description": "Date to start searching (optional)"}, "to_date": {"type": "string", "description": "Date to finish the search (optional)"}, "sender": {"type": "string", "description": "Email caller address (optional)"}}, "required": ["keyword"]}}}], "type_of_output": "call", "ground_truth": {"name": "upload_artwork_to_online_site", "arguments": "{\"art_image_url\": \"https://example.com/myart.jpg\", \"title\": \"노을진 바다\", \"description\": \"바다 위로 지는 노을을 그린 작품입니다\"}"}, "acceptable_arguments": "Only ground truth is allowed."}
{"serial_num": 87, "category": "CALL", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Please upload this image. The image is https://example.com/myart.jpg here and the title is \"별이 빛나는 밤\", and the description is '별이 빛나는 밤하늘을 표현한 그림입니다'."}], "input_tools": [{"type": "function", "function": {"name": "update_movie_rating", "description": "Update (modify or add) movie rating in the movie scrapbook.", "parameters": {"type": "object", "properties": {"movie_id": {"type": "string", "description": "ID of the movie to update the rating"}, "new_rating": {"type": "integer", "description": "New rating to give to the movie (1 ~ 5)"}}, "required": ["movie_id", "new_rating"]}}}, {"type": "function", "function": {"name": "getDailyNewsHeadlines", "description": "Today's main news headline is provided.", "parameters": {"type": "object", "properties": {}, "required": []}}}, {"type": "function", "function": {"name": "upload_artwork_to_online_site", "description": "Upload your work to the online art platform.", "parameters": {"type": "object", "properties": {"art_image_url": {"type": "string", "description": "The image of the work to be uploaded URL"}, "title": {"type": "string", "description": "Title of the work"}, "description": {"type": "string", "description": "A brief explanation of the work"}}, "required": ["art_image_url", "title", "description"]}}}, {"type": "function", "function": {"name": "getWeatherForecastForNext7Days", "description": "For the designated area, we offer a 7 -day weather forecast, including today.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "The name of the area where the weather forecast"}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "count_words", "description": "Calculation of words in a given text (sentence or paragraph)", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Cell text"}}, "required": ["text"]}}}], "type_of_output": "call", "ground_truth": {"name": "upload_artwork_to_online_site", "arguments": "{\"art_image_url\": \"https://example.com/myart.jpg\", \"title\": \"별이 빛나는 밤\", \"description\": \"별이 빛나는 밤하늘을 표현한 그림입니다\"}"}, "acceptable_arguments": "Only ground truth is allowed."}
{"serial_num": 88, "category": "CALL", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Post on the platform. Image https://example.com/myart5.jpg attaches this, and the title and description are \"morning in the forest\", \"This artwork shows a peaceful morning in the forest\"."}], "input_tools": [{"type": "function", "function": {"name": "informWeather", "description": "Provide current weather information in a particular area", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Local name to bring weather information"}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "create_playlist", "description": "Create a music playlist that fits the user's tastes and conditions", "parameters": {"type": "object", "properties": {"genre": {"type": "string", "description": "The genre of music to be included in the playlist"}, "mood": {"type": "string", "description": "Playlist's mood or atmosphere"}, "count": {"type": "integer", "description": "The number of songs to be included in the playlist"}, "include_live": {"type": "boolean", "description": "Live version songs include"}}, "required": ["genre", "mood", "count"]}}}, {"type": "function", "function": {"name": "upload_artwork_to_online_site", "description": "Upload your work to the online art platform.", "parameters": {"type": "object", "properties": {"art_image_url": {"type": "string", "description": "The image of the work to be uploaded URL"}, "title": {"type": "string", "description": "Title of the work"}, "description": {"type": "string", "description": "A brief explanation of the work"}}, "required": ["art_image_url", "title", "description"]}}}, {"type": "function", "function": {"name": "calculate_bmi", "description": "Calculation of human body mass index (BMI)", "parameters": {"type": "object", "properties": {"height": {"type": "number", "description": "Centimeter key"}, "weight": {"type": "number", "description": "Kilogram unit weight"}}, "required": ["height", "weight"]}}}, {"type": "function", "function": {"name": "CheckTaxRefund", "description": "Search for the user's tax refund.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "The name of the tax paymenter"}, "birth": {"type": "string", "description": "Date of birth of tax payers (YYYY-MM-DD)"}, "phone_number": {"type": "string", "description": "Contact of tax payers"}}, "required": ["name", "birth", "phone_number"]}}}], "type_of_output": "call", "ground_truth": {"name": "upload_artwork_to_online_site", "arguments": "{\"art_image_url\": \"https://example.com/myart5.jpg\", \"title\": \"morning in the forest\", \"description\": \"This artwork shows a peaceful morning in the forest\"}"}, "acceptable_arguments": "Only ground truth is allowed."}
{"serial_num": 89, "category": "CALL", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Book 2 VIP seats in the Bangbangcon 23 concert ticket in June."}], "input_tools": [{"type": "function", "function": {"name": "upload_artwork_to_online_site", "description": "Upload your work to the online art platform.", "parameters": {"type": "object", "properties": {"art_image_url": {"type": "string", "description": "The image of the work to be uploaded URL"}, "title": {"type": "string", "description": "Title of the work"}, "description": {"type": "string", "description": "A brief explanation of the work"}}, "required": ["art_image_url", "title", "description"]}}}, {"type": "function", "function": {"name": "getCurrentTimeForLocation", "description": "Provide current time information in certain areas", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Local name to bring time information"}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "book_concert_tickets", "description": "Tickets for specific performances are made using external ticketing systems.", "parameters": {"type": "object", "properties": {"concert_name": {"type": "string", "description": "The name of the performance you want to book"}, "number_of_tickets": {"type": "integer", "description": "Quantity"}, "seat_type": {"type": "string", "description": "Selected seat type (e.g. VIP, general)"}}, "required": ["concert_name", "number_of_tickets", "seat_type"]}}}, {"type": "function", "function": {"name": "calculateBMR", "description": "Basal metabolic rate calculation", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}, "height": {"type": "number", "description": "Centimeter key"}, "age": {"type": "integer", "description": "age"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["weight", "height", "age", "gender"]}}}, {"type": "function", "function": {"name": "search_email_content", "description": "Search for emails containing keywords specified by the user during the saved email.", "parameters": {"type": "object", "properties": {"keyword": {"type": "string", "description": "Keyword to search"}, "from_date": {"type": "string", "description": "Date to start searching (optional)"}, "to_date": {"type": "string", "description": "Date to finish the search (optional)"}, "sender": {"type": "string", "description": "Email caller address (optional)"}}, "required": ["keyword"]}}}], "type_of_output": "call", "ground_truth": {"name": "book_concert_tickets", "arguments": "{\"concert_name\": \"방방콘23\", \"number_of_tickets\": 2, \"seat_type\": \"VIP\"}"}, "acceptable_arguments": null}
{"serial_num": 90, "category": "CALL", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "2024 I want to make a reservation for 4 red Velvet Fancon Tour."}], "input_tools": [{"type": "function", "function": {"name": "generate_image_from_text", "description": "Create a picture based on a given text", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Text to create a picture"}}, "required": ["text"]}}}, {"type": "function", "function": {"name": "calculate_tax", "description": "Calculate the tax on the given amount.", "parameters": {"type": "object", "properties": {"amount": {"type": "number", "description": "Prior to calculating"}, "tax_rate": {"type": "number", "description": "Tax rate to be applied (percentage)"}}, "required": ["amount", "tax_rate"]}}}, {"type": "function", "function": {"name": "book_concert_tickets", "description": "Tickets for specific performances are made using external ticketing systems.", "parameters": {"type": "object", "properties": {"concert_name": {"type": "string", "description": "The name of the performance you want to book"}, "number_of_tickets": {"type": "integer", "description": "Quantity"}, "seat_type": {"type": "string", "description": "Selected seat type (e.g. VIP, general)"}}, "required": ["concert_name", "number_of_tickets", "seat_type"]}}}, {"type": "function", "function": {"name": "start_playlist", "description": "Play the playlist that the user requests.", "parameters": {"type": "object", "properties": {"playlist": {"type": "string", "description": "Name of playlist"}, "shuffle": {"type": "boolean", "description": "Playlist shuffle"}, "repeat": {"type": "boolean", "description": "Repeating playlists"}}, "required": ["playlist"]}}}, {"type": "function", "function": {"name": "informWeather", "description": "Provide current weather information in a particular area", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Local name to bring weather information"}}, "required": ["location"]}}}], "type_of_output": "call", "ground_truth": {"name": "book_concert_tickets", "arguments": "{\"concert_name\": \"2024 Red Velvet FANCON TOUR\", \"number_of_tickets\": 4, \"seat_type\": \"일반\"}"}, "acceptable_arguments": "{\"seat_type\": \"일반석\"}"}
{"serial_num": 91, "category": "CALL", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "COLDPLAY Hyundai Card Super Concert 22 is on April 15th, and I want to buy three VIP seats."}], "input_tools": [{"type": "function", "function": {"name": "get_stock_price", "description": "Search the current price of a particular stock.", "parameters": {"type": "object", "properties": {"stock_name": {"type": "string", "description": "Stock name to look up"}}, "required": ["stock_name"]}}}, {"type": "function", "function": {"name": "start_playlist", "description": "Play the playlist that the user requests.", "parameters": {"type": "object", "properties": {"playlist": {"type": "string", "description": "Name of playlist"}, "shuffle": {"type": "boolean", "description": "Playlist shuffle"}, "repeat": {"type": "boolean", "description": "Repeating playlists"}}, "required": ["playlist"]}}}, {"type": "function", "function": {"name": "book_concert_tickets", "description": "Tickets for specific performances are made using external ticketing systems.", "parameters": {"type": "object", "properties": {"concert_name": {"type": "string", "description": "The name of the performance you want to book"}, "number_of_tickets": {"type": "integer", "description": "Quantity"}, "seat_type": {"type": "string", "description": "Selected seat type (e.g. VIP, general)"}}, "required": ["concert_name", "number_of_tickets", "seat_type"]}}}, {"type": "function", "function": {"name": "convert_eur_to_jpy", "description": "Convert the given Euro (EUR) amount to JPY", "parameters": {"type": "object", "properties": {"amount_eur": {"type": "number", "description": "EUR amount to convert"}}, "required": ["amount_eur"]}}}, {"type": "function", "function": {"name": "count_words", "description": "Calculation of words in a given text (sentence or paragraph)", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Cell text"}}, "required": ["text"]}}}], "type_of_output": "call", "ground_truth": {"name": "book_concert_tickets", "arguments": "{\"concert_name\": \"COLDPLAY 현대카드 슈퍼콘서트 22\", \"number_of_tickets\": 3, \"seat_type\": \"VIP\"}"}, "acceptable_arguments": null}
{"serial_num": 92, "category": "CALL", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Can I make a two -year -old tour of Incheon concert ticket in 2019? The seat is a regular seat."}], "input_tools": [{"type": "function", "function": {"name": "search_contact", "description": "Search for a list of contacts in the name of a person and bring his phone number and email address.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "The name of a person who wants to check the contact"}}, "required": ["name"]}}}, {"type": "function", "function": {"name": "CallTaxi", "description": "Call a taxi from a specific location.", "parameters": {"type": "object", "properties": {"pickup_location": {"type": "string", "description": "Departure location (address, station name, building name, etc.)"}, "destination": {"type": "string", "description": "Arrival location (address, station name, building name, etc.)"}}, "required": ["pickup_location", "destination"]}}}, {"type": "function", "function": {"name": "book_concert_tickets", "description": "Tickets for specific performances are made using external ticketing systems.", "parameters": {"type": "object", "properties": {"concert_name": {"type": "string", "description": "The name of the performance you want to book"}, "number_of_tickets": {"type": "integer", "description": "Quantity"}, "seat_type": {"type": "string", "description": "Selected seat type (e.g. VIP, general)"}}, "required": ["concert_name", "number_of_tickets", "seat_type"]}}}, {"type": "function", "function": {"name": "calculateCaloriesBurnedByWalking", "description": "Calculate the amount of calories consumed while walking on a given street.", "parameters": {"type": "object", "properties": {"distance": {"type": "number", "description": "Walking distance (kilometers)"}, "weight": {"type": "number", "description": "User's weight (kilogram unit)"}}, "required": ["distance", "weight"]}}}, {"type": "function", "function": {"name": "calculateCaloricNeeds", "description": "A function that estimates the average daily calorie consumption", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}, "height": {"type": "number", "description": "Centimeter key"}, "age": {"type": "integer", "description": "age"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["weight", "height", "age", "gender"]}}}], "type_of_output": "call", "ground_truth": {"name": "book_concert_tickets", "arguments": "{\"concert_name\": \"2019년 에드 시런 내한공연 인천 콘서트\", \"number_of_tickets\": 2, \"seat_type\": \"일반\"}"}, "acceptable_arguments": "{\"seat_type\": \"일반석\"}"}
{"serial_num": 93, "category": "CALL", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Can you check my tax refund? The name is Kim Young-hee, the date of birth is 1980-05-15, and the phone number is 010-1234-5678."}], "input_tools": [{"type": "function", "function": {"name": "getWeatherForecastForNext7Days", "description": "For the designated area, we offer a 7 -day weather forecast, including today.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "The name of the area where the weather forecast"}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "DeleteEvent", "description": "Delete schedule from calendar", "parameters": {"type": "object", "properties": {"event_id": {"type": "string", "description": "ID of the schedule to be deleted"}}, "required": ["event_id"]}}}, {"type": "function", "function": {"name": "CheckTaxRefund", "description": "Search for the user's tax refund.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "The name of the tax paymenter"}, "birth": {"type": "string", "description": "Date of birth of tax payers (YYYY-MM-DD)"}, "phone_number": {"type": "string", "description": "Contact of tax payers"}}, "required": ["name", "birth", "phone_number"]}}}, {"type": "function", "function": {"name": "update_contact", "description": "Update (modify or add) contents of existing contacts.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "Name stored in the current contact"}, "new_name": {"type": "string", "description": "Name to update"}, "new_phone": {"type": "string", "description": "Phone number to update"}, "new_email": {"type": "string", "description": "Email address to be updated"}}, "required": ["name"]}}}, {"type": "function", "function": {"name": "transferMoney", "description": "Send money to a specific account.", "parameters": {"type": "object", "properties": {"receiver_bank": {"type": "string", "description": "Bank"}, "receiver_account": {"type": "string", "description": "Account number to send"}, "amount": {"type": "number", "description": "Missing money (unit: krw))"}}, "required": ["receiver_bank", "receiver_account", "amount"]}}}], "type_of_output": "call", "ground_truth": {"name": "CheckTaxRefund", "arguments": "{\"name\": \"김영희\", \"birth\": \"1980-05-15\", \"phone_number\": \"010-1234-5678\"}"}, "acceptable_arguments": null}
{"serial_num": 94, "category": "CALL", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Hong Gil-dong, phone number 010-1111-2222, born July 21, 1994, check the tax refund."}], "input_tools": [{"type": "function", "function": {"name": "translate_text_to_english", "description": "Translate the given text into English", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Text translation in English"}}, "required": ["text"]}}}, {"type": "function", "function": {"name": "informLottoNumberByRound", "description": "It is a function that informs the lottery winning number of a specific episode.", "parameters": {"type": "object", "properties": {"round": {"type": "integer", "description": "The round to check the lottery winning number"}}, "required": ["round"]}}}, {"type": "function", "function": {"name": "CheckTaxRefund", "description": "Search for the user's tax refund.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "The name of the tax paymenter"}, "birth": {"type": "string", "description": "Date of birth of tax payers (YYYY-MM-DD)"}, "phone_number": {"type": "string", "description": "Contact of tax payers"}}, "required": ["name", "birth", "phone_number"]}}}, {"type": "function", "function": {"name": "getMonthlyBoxOfficeRanking", "description": "It offers a monthly box office ranking for the designated year and month.", "parameters": {"type": "object", "properties": {"year": {"type": "string", "description": "The year to look up (yyyy format)"}, "month": {"type": "string", "description": "Month to look up (MM format)"}}, "required": ["year", "month"]}}}, {"type": "function", "function": {"name": "calculateWaterIntakeRequirement", "description": "Daily recommended water intake based on weight based on weight", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}}, "required": ["weight"]}}}], "type_of_output": "call", "ground_truth": {"name": "CheckTaxRefund", "arguments": "{\"name\": \"홍길동\", \"birth\": \"1994-07-21\", \"phone_number\": \"010-1111-2222\"}"}, "acceptable_arguments": null}
{"serial_num": 95, "category": "CALL", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Please check the tax refund status. Jung Min-ho, 1992-01-16, mobile phone number 010-5555-6666"}], "input_tools": [{"type": "function", "function": {"name": "convert_currency", "description": "Returns a value that exchanges a currency into another currency.", "parameters": {"type": "object", "properties": {"amount": {"type": "number", "description": "Money"}, "from": {"type": "string", "description": "Type of currency currency exchange"}, "to": {"type": "string", "description": "Type of currency exchange results"}}, "required": ["amount", "from", "to"]}}}, {"type": "function", "function": {"name": "transferMoney", "description": "Send money to a specific account.", "parameters": {"type": "object", "properties": {"receiver_bank": {"type": "string", "description": "Bank"}, "receiver_account": {"type": "string", "description": "Account number to send"}, "amount": {"type": "number", "description": "Missing money (unit: krw))"}}, "required": ["receiver_bank", "receiver_account", "amount"]}}}, {"type": "function", "function": {"name": "CheckTaxRefund", "description": "Search for the user's tax refund.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "The name of the tax paymenter"}, "birth": {"type": "string", "description": "Date of birth of tax payers (YYYY-MM-DD)"}, "phone_number": {"type": "string", "description": "Contact of tax payers"}}, "required": ["name", "birth", "phone_number"]}}}, {"type": "function", "function": {"name": "getCurrentTopSeries", "description": "We offer the current popular TV series rankings", "parameters": {"type": "object", "properties": {}, "required": []}}}, {"type": "function", "function": {"name": "calculateTimeDifference", "description": "The time difference between the two regions is returned every time.", "parameters": {"type": "object", "properties": {"fromTimezone": {"type": "string", "description": "Time zone area"}, "toTimezone": {"type": "string", "description": "Time zone area for comparison"}}, "required": ["fromTimezone", "toTimezone"]}}}], "type_of_output": "call", "ground_truth": {"name": "CheckTaxRefund", "arguments": "{\"name\": \"정민호\", \"birth\": \"1992-01-16\", \"phone_number\": \"010-5555-6666\"}"}, "acceptable_arguments": null}
{"serial_num": 96, "category": "CALL", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "I want to check the tax refund. The name Seo Yoon-mi, the date of birth is 1964-12-31, and the contacts are 010-5656-7878."}], "input_tools": [{"type": "function", "function": {"name": "convert_eur_to_jpy", "description": "Convert the given Euro (EUR) amount to JPY", "parameters": {"type": "object", "properties": {"amount_eur": {"type": "number", "description": "EUR amount to convert"}}, "required": ["amount_eur"]}}}, {"type": "function", "function": {"name": "compare_office_supplies_prices", "description": "Compare office supplies prices of various stores and provide the lowest price information.", "parameters": {"type": "object", "properties": {"product_name": {"type": "string", "description": "Product name that wants to compare prices"}, "quantity": {"type": "integer", "description": "Quantity"}}, "required": ["product_name", "quantity"]}}}, {"type": "function", "function": {"name": "CheckTaxRefund", "description": "Search for the user's tax refund.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "The name of the tax paymenter"}, "birth": {"type": "string", "description": "Date of birth of tax payers (YYYY-MM-DD)"}, "phone_number": {"type": "string", "description": "Contact of tax payers"}}, "required": ["name", "birth", "phone_number"]}}}, {"type": "function", "function": {"name": "update_contact", "description": "Update (modify or add) contents of existing contacts.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "Name stored in the current contact"}, "new_name": {"type": "string", "description": "Name to update"}, "new_phone": {"type": "string", "description": "Phone number to update"}, "new_email": {"type": "string", "description": "Email address to be updated"}}, "required": ["name"]}}}, {"type": "function", "function": {"name": "informTyphoon", "description": "It provides location information of the current typhoon.", "parameters": {"type": "object", "properties": {"typhoonName": {"type": "string", "description": "The name of the typhoon to look upon"}}, "required": ["typhoonName"]}}}], "type_of_output": "call", "ground_truth": {"name": "CheckTaxRefund", "arguments": "{\"name\": \"서윤미\", \"birth\": \"1964-12-31\", \"phone_number\": \"010-5656-7878\"}"}, "acceptable_arguments": null}
{"serial_num": 97, "category": "CALL", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Take the laundry from the office tomorrow at 1 pm."}], "input_tools": [{"type": "function", "function": {"name": "calculate_bmi", "description": "Calculation of human body mass index (BMI)", "parameters": {"type": "object", "properties": {"height": {"type": "number", "description": "Centimeter key"}, "weight": {"type": "number", "description": "Kilogram unit weight"}}, "required": ["height", "weight"]}}}, {"type": "function", "function": {"name": "add_item_to_shopping_cart", "description": "Add new products to the shopping cart", "parameters": {"type": "object", "properties": {"product_id": {"type": "string", "description": "The unique identifier of the product you want to add"}, "quantity": {"type": "integer", "description": "Quantity"}}, "required": ["product_id", "quantity"]}}}, {"type": "function", "function": {"name": "schedule_laundry_pickup", "description": "Apply for a service to collect laundry.", "parameters": {"type": "object", "properties": {"pickup_location": {"type": "string", "description": "Extract the location of the user as it is to collect the laundry. (Example: House, 101 -dong 102, etc."}, "pickup_date": {"type": "string", "description": "Extract the laundry collection date as it is. (Example: next Monday, January 1, 2022, etc.)"}, "pickup_time": {"type": "string", "description": "Extract the time to collect the laundry as it is. (Example: 2 pm, 7 pm, etc.)"}}, "required": ["pickup_location", "pickup_date", "pickup_time"]}}}, {"type": "function", "function": {"name": "searchFriendBirthday", "description": "A function that enters a friend's name and searches for birthday information", "parameters": {"type": "object", "properties": {"friendName": {"type": "string", "description": "A friend's name to search"}}, "required": ["friendName"]}}}, {"type": "function", "function": {"name": "track_order", "description": "Inquire an order status (ordering, payment completion, shipping, delivery, etc.) with a given order number and informed the expected shipping date or expected delivery date.", "parameters": {"type": "object", "properties": {"order_id": {"type": "string", "description": "Order number to search"}}, "required": ["order_id"]}}}], "type_of_output": "call", "ground_truth": {"name": "schedule_laundry_pickup", "arguments": "{\"pickup_location\": \"사무실\", \"pickup_date\": \"내일\", \"pickup_time\": \"오후 1시\"}"}, "acceptable_arguments": null}
{"serial_num": 98, "category": "CALL", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "I'm going to apply for a laundry collection service tomorrow evening at 6 pm."}], "input_tools": [{"type": "function", "function": {"name": "translate_text_to_english", "description": "Translate the given text into English", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Text translation in English"}}, "required": ["text"]}}}, {"type": "function", "function": {"name": "add_contact", "description": "Register a new contact.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "Name to register a contact"}, "phone": {"type": "string", "description": "phone number"}, "email": {"type": "string", "description": "Email address"}}, "required": ["name"]}}}, {"type": "function", "function": {"name": "schedule_laundry_pickup", "description": "Apply for a service to collect laundry.", "parameters": {"type": "object", "properties": {"pickup_location": {"type": "string", "description": "Extract the location of the user as it is to collect the laundry. (Example: House, 101 -dong 102, etc."}, "pickup_date": {"type": "string", "description": "Extract the laundry collection date as it is. (Example: next Monday, January 1, 2022, etc.)"}, "pickup_time": {"type": "string", "description": "Extract the time to collect the laundry as it is. (Example: 2 pm, 7 pm, etc.)"}}, "required": ["pickup_location", "pickup_date", "pickup_time"]}}}, {"type": "function", "function": {"name": "setTimer", "description": "Set the timer as much as the user requested.", "parameters": {"type": "object", "properties": {"duration": {"type": "number", "description": "Timer setting time (unit: seconds)"}}, "required": ["duration"]}}}, {"type": "function", "function": {"name": "get_exchange_rate", "description": "Bring the exchange rate between the two currencies.", "parameters": {"type": "object", "properties": {"base_currency": {"type": "string", "description": "The Currency to Convert from."}, "target_currency": {"type": "string", "description": "The current to convert to."}}, "required": ["base_currency", "target_currency"]}}}], "type_of_output": "call", "ground_truth": {"name": "schedule_laundry_pickup", "arguments": "{\"pickup_location\": \"집\", \"pickup_date\": \"내일\", \"pickup_time\": \"저녁 6시\"}"}, "acceptable_arguments": null}
{"serial_num": 99, "category": "CALL", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Is it possible to collect laundry at Gongneung -dong Gymnasium today at 4 pm?"}], "input_tools": [{"type": "function", "function": {"name": "add_item_to_shopping_cart", "description": "Add new products to the shopping cart", "parameters": {"type": "object", "properties": {"product_id": {"type": "string", "description": "The unique identifier of the product you want to add"}, "quantity": {"type": "integer", "description": "Quantity"}}, "required": ["product_id", "quantity"]}}}, {"type": "function", "function": {"name": "CheckTaxRefund", "description": "Search for the user's tax refund.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "The name of the tax paymenter"}, "birth": {"type": "string", "description": "Date of birth of tax payers (YYYY-MM-DD)"}, "phone_number": {"type": "string", "description": "Contact of tax payers"}}, "required": ["name", "birth", "phone_number"]}}}, {"type": "function", "function": {"name": "schedule_laundry_pickup", "description": "Apply for a service to collect laundry.", "parameters": {"type": "object", "properties": {"pickup_location": {"type": "string", "description": "Extract the location of the user as it is to collect the laundry. (Example: House, 101 -dong 102, etc."}, "pickup_date": {"type": "string", "description": "Extract the laundry collection date as it is. (Example: next Monday, January 1, 2022, etc.)"}, "pickup_time": {"type": "string", "description": "Extract the time to collect the laundry as it is. (Example: 2 pm, 7 pm, etc.)"}}, "required": ["pickup_location", "pickup_date", "pickup_time"]}}}, {"type": "function", "function": {"name": "discover_new_releases_hiphop", "description": "Provides the latest music release information of the hip -hop genre", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "recommendLottoNumber", "description": "It is a function that recommends a lotto number randomly.", "parameters": {"type": "object", "properties": {}, "required": []}}}], "type_of_output": "call", "ground_truth": {"name": "schedule_laundry_pickup", "arguments": "{\"pickup_location\": \"공릉동 체육관\", \"pickup_date\": \"오늘\", \"pickup_time\": \"오후 4시\"}"}, "acceptable_arguments": null}
{"serial_num": 100, "category": "CALL", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "I would like to apply for a laundry collection service to Pangyo office."}], "input_tools": [{"type": "function", "function": {"name": "discover_new_releases_kpop", "description": "Provides the latest music release information of the K -pop genre", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "recommendLottoNumber", "description": "It is a function that recommends a lotto number randomly.", "parameters": {"type": "object", "properties": {}, "required": []}}}, {"type": "function", "function": {"name": "schedule_laundry_pickup", "description": "Apply for a service to collect laundry.", "parameters": {"type": "object", "properties": {"pickup_location": {"type": "string", "description": "Extract the location of the user as it is to collect the laundry. (Example: House, 101 -dong 102, etc."}, "pickup_date": {"type": "string", "description": "Extract the laundry collection date as it is. (Example: next Monday, January 1, 2022, etc.)"}, "pickup_time": {"type": "string", "description": "Extract the time to collect the laundry as it is. (Example: 2 pm, 7 pm, etc.)"}}, "required": ["pickup_location", "pickup_date", "pickup_time"]}}}, {"type": "function", "function": {"name": "check_traffic_status", "description": "Inquire the current traffic situation on a particular path.", "parameters": {"type": "object", "properties": {"start_location": {"type": "string", "description": "Departure"}, "end_location": {"type": "string", "description": "Arrival point"}}, "required": ["start_location", "end_location"]}}}, {"type": "function", "function": {"name": "count_lowercase_letters", "description": "The number of lowercase in the string", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Cell string for lowercase"}}, "required": ["text"]}}}], "type_of_output": "call", "ground_truth": {"name": "schedule_laundry_pickup", "arguments": "{\"pickup_location\": \"판교 사무실\", \"pickup_date\": \"이번주 일요일\", \"pickup_time\": \"아침 8시\"}"}, "acceptable_arguments": null}
{"serial_num": 1, "category": "REJECT", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "How much is Microsoft stock price?"}], "input_tools": [{"type": "function", "function": {"name": "convert_euro_to_koruna", "description": "Convert the Given EUR amount to Czech Coruna (CZK)", "parameters": {"type": "object", "properties": {"amount_euro": {"type": "number", "description": "EUR amount to convert"}, "exchange_rate_eur_to_czk": {"type": "number", "description": "Exchange rate from EUR to CZK"}}, "required": ["amount_euro", "exchange_rate_eur_to_czk"]}}}, {"type": "function", "function": {"name": "add_item_to_shopping_cart", "description": "Add new products to the shopping cart", "parameters": {"type": "object", "properties": {"product_id": {"type": "string", "description": "The unique identifier of the product you want to add"}, "quantity": {"type": "integer", "description": "Quantity"}}, "required": ["product_id", "quantity"]}}}, {"type": "function", "function": {"name": "update_contact", "description": "Update (modify or add) contents of existing contacts.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "Name stored in the current contact"}, "new_name": {"type": "string", "description": "Name to update"}, "new_phone": {"type": "string", "description": "Phone number to update"}, "new_email": {"type": "string", "description": "Email address to be updated"}}, "required": ["name"]}}}, {"type": "function", "function": {"name": "informWeather", "description": "Provide current weather information in a particular area", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Local name to bring weather information"}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "searchFriendBirthday", "description": "A function that enters a friend's name and searches for birthday information", "parameters": {"type": "object", "properties": {"friendName": {"type": "string", "description": "A friend's name to search"}}, "required": ["friendName"]}}}], "type_of_output": "relevance", "ground_truth": {"role": "assistant", "content": "There is no function to provide real -time stock price information."}, "acceptable_arguments": null}
{"serial_num": 2, "category": "REJECT", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "What is the stock price?"}], "input_tools": [{"type": "function", "function": {"name": "create_user", "description": "Create a new user account.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "User's name"}, "email": {"type": "string", "description": "User's email address"}, "password": {"type": "string", "description": "User's password"}}, "required": ["name", "email", "password"]}}}, {"type": "function", "function": {"name": "get_movie_details", "description": "Genre, directors, actors, plot, and screening time provide detailed information.", "parameters": {"type": "object", "properties": {"title": {"type": "string", "description": "Film title"}, "year": {"type": "integer", "description": "Movie release year"}}, "required": ["title"]}}}, {"type": "function", "function": {"name": "check_traffic_status", "description": "Inquire the current traffic situation on a particular path.", "parameters": {"type": "object", "properties": {"start_location": {"type": "string", "description": "Departure"}, "end_location": {"type": "string", "description": "Arrival point"}}, "required": ["start_location", "end_location"]}}}, {"type": "function", "function": {"name": "OrderPizza", "description": "Order pizza.", "parameters": {"type": "object", "properties": {"PizzaType": {"type": "string", "description": "Pizza"}, "size": {"type": "string", "description": "Pizza size (extracted as it is, example: Small, L, Medium, etc.)"}, "quantity": {"type": "integer", "description": "Order quantity"}}, "required": ["PizzaType", "size", "quantity"]}}}, {"type": "function", "function": {"name": "count_lowercase_letters", "description": "The number of lowercase in the string", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Cell string for lowercase"}}, "required": ["text"]}}}], "type_of_output": "relevance", "ground_truth": {"role": "assistant", "content": "There is no function to provide real -time stock price information."}, "acceptable_arguments": null}
{"serial_num": 3, "category": "REJECT", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "I'm going to put Netflix once this time, but let me know the price now."}], "input_tools": [{"type": "function", "function": {"name": "get_movie_schedule", "description": "Inquire a certain date and screening schedule for a specific movie theater.", "parameters": {"type": "object", "properties": {"movie_date": {"type": "string", "description": "Date to look up (YYYY-MM-DD)"}, "movie_location": {"type": "string", "description": "Cinema to look upon"}}, "required": ["movie_date", "movie_location"]}}}, {"type": "function", "function": {"name": "schedule_meeting", "description": "Book a meeting.", "parameters": {"type": "object", "properties": {"participants": {"type": "string", "description": "Participant list (if there are multiple participants, it is divided into a comma (,).)"}, "date_time": {"type": "string", "description": "Date and time of meeting (yyyy-mm-dd hh: mm format)"}}, "required": ["participants", "date_time"]}}}, {"type": "function", "function": {"name": "convert_euro_to_koruna", "description": "Convert the Given EUR amount to Czech Coruna (CZK)", "parameters": {"type": "object", "properties": {"amount_euro": {"type": "number", "description": "EUR amount to convert"}, "exchange_rate_eur_to_czk": {"type": "number", "description": "Exchange rate from EUR to CZK"}}, "required": ["amount_euro", "exchange_rate_eur_to_czk"]}}}, {"type": "function", "function": {"name": "getDailyNewsHeadlines", "description": "Today's main news headline is provided.", "parameters": {"type": "object", "properties": {}, "required": []}}}, {"type": "function", "function": {"name": "convert_eur_to_jpy", "description": "Convert the given Euro (EUR) amount to JPY", "parameters": {"type": "object", "properties": {"amount_eur": {"type": "number", "description": "EUR amount to convert"}}, "required": ["amount_eur"]}}}], "type_of_output": "relevance", "ground_truth": {"role": "assistant", "content": "There is no function to provide real -time stock price information."}, "acceptable_arguments": null}
{"serial_num": 4, "category": "REJECT", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "I'm going to buy stocks for long -term investment."}], "input_tools": [{"type": "function", "function": {"name": "convertTimeBetweenTimezones", "description": "Convert time to another time in one time.", "parameters": {"type": "object", "properties": {"originalTime": {"type": "string", "description": "Reference time to convert (format HH: mm)"}, "fromTimezone": {"type": "string", "description": "Standard time zone (region name)"}, "toTimezone": {"type": "string", "description": "Time to be converted (region name)"}}, "required": ["originalTime", "fromTimezone", "toTimezone"]}}}, {"type": "function", "function": {"name": "find_group_or_club", "description": "Provides meetings or club information on certain topics based on the area around the specific location.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Where to find a meeting or club"}, "topic": {"type": "string", "description": "Interest"}}, "required": ["location", "topic"]}}}, {"type": "function", "function": {"name": "track_order", "description": "Inquire an order status (ordering, payment completion, shipping, delivery, etc.) with a given order number and informed the expected shipping date or expected delivery date.", "parameters": {"type": "object", "properties": {"order_id": {"type": "string", "description": "Order number to search"}}, "required": ["order_id"]}}}, {"type": "function", "function": {"name": "compare_it_device_prices", "description": "It compares the price of IT devices from various sellers to provide low sales information.", "parameters": {"type": "object", "properties": {"device_name": {"type": "string", "description": "Name of IT devices that want to compare prices"}}, "required": ["device_name"]}}}, {"type": "function", "function": {"name": "deleteMemo", "description": "Delete the previously stored notes", "parameters": {"type": "object", "properties": {"memo_id": {"type": "string", "description": "A unique identifier of the memo to delete"}}, "required": ["memo_id"]}}}], "type_of_output": "relevance", "ground_truth": {"role": "assistant", "content": "There is no function to provide real -time stock price information."}, "acceptable_arguments": null}
{"serial_num": 5, "category": "REJECT", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Please search the order status of the order number 'ABC-1234'."}], "input_tools": [{"type": "function", "function": {"name": "update_item_quantity_in_shopping_cart", "description": "Update the quantity of specific products in the shopping cart", "parameters": {"type": "object", "properties": {"user_id": {"type": "string", "description": "User's unique identifier"}, "product_id": {"type": "string", "description": "A unique identifier of products that want to update the quantity"}, "new_quantity": {"type": "integer", "description": "New quantity to update"}}, "required": ["user_id", "product_id", "new_quantity"]}}}, {"type": "function", "function": {"name": "convert_eur_to_jpy", "description": "Convert the given Euro (EUR) amount to JPY", "parameters": {"type": "object", "properties": {"amount_eur": {"type": "number", "description": "EUR amount to convert"}}, "required": ["amount_eur"]}}}, {"type": "function", "function": {"name": "getCurrentKoreaTime", "description": "Currently, the time of Korea is returned to year-month-day: minor: second format.", "parameters": {}}}, {"type": "function", "function": {"name": "convert_euro_to_koruna", "description": "Convert the Given EUR amount to Czech Coruna (CZK)", "parameters": {"type": "object", "properties": {"amount_euro": {"type": "number", "description": "EUR amount to convert"}, "exchange_rate_eur_to_czk": {"type": "number", "description": "Exchange rate from EUR to CZK"}}, "required": ["amount_euro", "exchange_rate_eur_to_czk"]}}}, {"type": "function", "function": {"name": "generate_playlist_based_on_favorite_artist", "description": "Create customized playlist based on preferred artists", "parameters": {"type": "object", "properties": {"artist_name": {"type": "string", "description": "The name of the artist that users prefer"}}, "required": ["artist_name"]}}}], "type_of_output": "relevance", "ground_truth": {"role": "assistant", "content": "It does not provide the ability to search the order status directly."}, "acceptable_arguments": null}
{"serial_num": 6, "category": "REJECT", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "I wonder when things will come. Can I track your order status?"}], "input_tools": [{"type": "function", "function": {"name": "add_movie_review", "description": "Add a review of a specific movie to the movie scrapbook.", "parameters": {"type": "object", "properties": {"movie_id": {"type": "string", "description": "ID of the movie to add a review"}, "review_text": {"type": "string", "description": "Movie review contents"}}, "required": ["movie_id", "review_text"]}}}, {"type": "function", "function": {"name": "search_email_content", "description": "Search for emails containing keywords specified by the user during the saved email.", "parameters": {"type": "object", "properties": {"keyword": {"type": "string", "description": "Keyword to search"}, "from_date": {"type": "string", "description": "Date to start searching (optional)"}, "to_date": {"type": "string", "description": "Date to finish the search (optional)"}, "sender": {"type": "string", "description": "Email caller address (optional)"}}, "required": ["keyword"]}}}, {"type": "function", "function": {"name": "generate_playlist_based_on_favorite_artist", "description": "Create customized playlist based on preferred artists", "parameters": {"type": "object", "properties": {"artist_name": {"type": "string", "description": "The name of the artist that users prefer"}}, "required": ["artist_name"]}}}, {"type": "function", "function": {"name": "deleteMemo", "description": "Delete the previously stored notes", "parameters": {"type": "object", "properties": {"memo_id": {"type": "string", "description": "A unique identifier of the memo to delete"}}, "required": ["memo_id"]}}}, {"type": "function", "function": {"name": "informLottoNumberByRound", "description": "It is a function that informs the lottery winning number of a specific episode.", "parameters": {"type": "object", "properties": {"round": {"type": "integer", "description": "The round to check the lottery winning number"}}, "required": ["round"]}}}], "type_of_output": "relevance", "ground_truth": {"role": "assistant", "content": "It does not provide the ability to search the order status directly."}, "acceptable_arguments": null}
{"serial_num": 7, "category": "REJECT", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Did you start delivery? Order number __Protect_0__Sume your order status."}], "input_tools": [{"type": "function", "function": {"name": "CallTaxi", "description": "Call a taxi from a specific location.", "parameters": {"type": "object", "properties": {"pickup_location": {"type": "string", "description": "Departure location (address, station name, building name, etc.)"}, "destination": {"type": "string", "description": "Arrival location (address, station name, building name, etc.)"}}, "required": ["pickup_location", "destination"]}}}, {"type": "function", "function": {"name": "calculate_distance", "description": "Based on location data, the distance between the two locations (kilometer units) is calculated", "parameters": {"type": "object", "properties": {"origin": {"type": "string", "description": "Standard location (city, state, country, village, landmark, etc.)"}, "destination": {"type": "string", "description": "Destination (city, state, country, village, landmark, etc.)"}}, "required": ["origin", "destination"]}}}, {"type": "function", "function": {"name": "getHistoricalMinMaxTemperature", "description": "In the past, we look up for the minimum temperature and the highest temperature in certain regions.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "The name of the area to be searched"}, "date": {"type": "string", "description": "Date to look up ('YYYY-MM-DD' format)"}}, "required": ["location", "date"]}}}, {"type": "function", "function": {"name": "view_shopping_cart", "description": "User's shopping cart contents inquiry", "parameters": {"type": "object", "properties": {"user_id": {"type": "string", "description": "User's unique identifier"}}, "required": ["user_id"]}}}, {"type": "function", "function": {"name": "calculate_bill_split", "description": "Divide the billed amount evenly to calculate the amount of money for each person.", "parameters": {"type": "object", "properties": {"bill_total": {"type": "number", "description": "Allied total amount"}, "num_people": {"type": "integer", "description": "The number of people who pay the amount."}}, "required": ["bill_total", "num_people"]}}}], "type_of_output": "relevance", "ground_truth": {"role": "assistant", "content": "It does not provide the ability to search the order status directly."}, "acceptable_arguments": null}
{"serial_num": 8, "category": "REJECT", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "I wonder what the product I ordered is. The order number is 8765-PQ."}], "input_tools": [{"type": "function", "function": {"name": "check_traffic_status", "description": "Inquire the current traffic situation on a particular path.", "parameters": {"type": "object", "properties": {"start_location": {"type": "string", "description": "Departure"}, "end_location": {"type": "string", "description": "Arrival point"}}, "required": ["start_location", "end_location"]}}}, {"type": "function", "function": {"name": "schedule_meeting", "description": "Book a meeting.", "parameters": {"type": "object", "properties": {"participants": {"type": "string", "description": "Participant list (if there are multiple participants, it is divided into a comma (,).)"}, "date_time": {"type": "string", "description": "Date and time of meeting (yyyy-mm-dd hh: mm format)"}}, "required": ["participants", "date_time"]}}}, {"type": "function", "function": {"name": "find_group_or_club", "description": "Provides meetings or club information on certain topics based on the area around the specific location.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Where to find a meeting or club"}, "topic": {"type": "string", "description": "Interest"}}, "required": ["location", "topic"]}}}, {"type": "function", "function": {"name": "convert_eur_to_jpy", "description": "Convert the given Euro (EUR) amount to JPY", "parameters": {"type": "object", "properties": {"amount_eur": {"type": "number", "description": "EUR amount to convert"}}, "required": ["amount_eur"]}}}, {"type": "function", "function": {"name": "informLottoWinnerPrizeByDate", "description": "It is a function that informs the amount of lottery winnings on a specific date.", "parameters": {"type": "object", "properties": {"date": {"type": "string", "description": "Date to check the amount of lottery winnings (e.g., March 4)"}}, "required": ["date"]}}}], "type_of_output": "relevance", "ground_truth": {"role": "assistant", "content": "It does not provide the ability to search the order status directly."}, "acceptable_arguments": null}
{"serial_num": 9, "category": "REJECT", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "I need to cook the ingredients a little bit, so I need a 50 second timer."}], "input_tools": [{"type": "function", "function": {"name": "generate_syntax_tree_from_text", "description": "Create a syntax tree for a given text", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Text to create a syntax tree"}}, "required": ["text"]}}}, {"type": "function", "function": {"name": "deleteMemo", "description": "Delete the previously stored notes", "parameters": {"type": "object", "properties": {"memo_id": {"type": "string", "description": "A unique identifier of the memo to delete"}}, "required": ["memo_id"]}}}, {"type": "function", "function": {"name": "informTyphoon", "description": "It provides location information of the current typhoon.", "parameters": {"type": "object", "properties": {"typhoonName": {"type": "string", "description": "The name of the typhoon to look upon"}}, "required": ["typhoonName"]}}}, {"type": "function", "function": {"name": "registerFriendBirthday", "description": "A function that registers a friend's name and birthday information", "parameters": {"type": "object", "properties": {"friendName": {"type": "string", "description": "A friend's name to register"}, "birthday": {"type": "string", "description": "The birthday of a friend to register (YYYY-MM-DD format)"}}, "required": ["friendName", "birthday"]}}}, {"type": "function", "function": {"name": "count_lowercase_letters", "description": "The number of lowercase in the string", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Cell string for lowercase"}}, "required": ["text"]}}}], "type_of_output": "relevance", "ground_truth": {"role": "assistant", "content": "There is no timer setting function."}, "acceptable_arguments": null}
{"serial_num": 10, "category": "REJECT", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "I boiled eggs and I want to put it in cold water for a while. Start 100 seconds of timer."}], "input_tools": [{"type": "function", "function": {"name": "count_uppercase_letters", "description": "The number of uppercase letters in the string", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Cell string"}}, "required": ["text"]}}}, {"type": "function", "function": {"name": "calculateWaterIntakeRequirement", "description": "Daily recommended water intake based on weight based on weight", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}}, "required": ["weight"]}}}, {"type": "function", "function": {"name": "update_movie_rating", "description": "Update (modify or add) movie rating in the movie scrapbook.", "parameters": {"type": "object", "properties": {"movie_id": {"type": "string", "description": "ID of the movie to update the rating"}, "new_rating": {"type": "integer", "description": "New rating to give to the movie (1 ~ 5)"}}, "required": ["movie_id", "new_rating"]}}}, {"type": "function", "function": {"name": "get_movie_schedule", "description": "Inquire a certain date and screening schedule for a specific movie theater.", "parameters": {"type": "object", "properties": {"movie_date": {"type": "string", "description": "Date to look up (YYYY-MM-DD)"}, "movie_location": {"type": "string", "description": "Cinema to look upon"}}, "required": ["movie_date", "movie_location"]}}}, {"type": "function", "function": {"name": "compareCleaningServices", "description": "Compare the service of the cleaning company and provide information.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Location or area where cleaning services are needed"}, "requested_date": {"type": "string", "format": "date", "description": "Service date (extract user as it is. Example: next Monday, January 1, 2022, etc.)"}, "size": {"type": "string", "description": "Pyeongsu or area of ​​the house (flat, square meter)"}}, "required": ["location", "requested_date", "size"]}}}], "type_of_output": "relevance", "ground_truth": {"role": "assistant", "content": "There is no timer setting function."}, "acceptable_arguments": null}
{"serial_num": 11, "category": "REJECT", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "I'm going to squat. Set the 60 -second timer."}], "input_tools": [{"type": "function", "function": {"name": "informLottoWinnerPrizeByRound", "description": "It is a function that informs the amount of lottery winnings of a specific episode.", "parameters": {"type": "object", "properties": {"round": {"type": "integer", "description": "A round that wants to check the amount of lottery winnings (e.g. 1001)"}}, "required": ["round"]}}}, {"type": "function", "function": {"name": "search_email_content", "description": "Search for emails containing keywords specified by the user during the saved email.", "parameters": {"type": "object", "properties": {"keyword": {"type": "string", "description": "Keyword to search"}, "from_date": {"type": "string", "description": "Date to start searching (optional)"}, "to_date": {"type": "string", "description": "Date to finish the search (optional)"}, "sender": {"type": "string", "description": "Email caller address (optional)"}}, "required": ["keyword"]}}}, {"type": "function", "function": {"name": "count_uppercase_letters", "description": "The number of uppercase letters in the string", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Cell string"}}, "required": ["text"]}}}, {"type": "function", "function": {"name": "getDayOfWeek", "description": "Returns the day of the given date.", "parameters": {"type": "object", "properties": {"date": {"type": "string", "description": "Yyyy-mm-DD format date"}}, "required": ["date"]}}}, {"type": "function", "function": {"name": "calculate_distance", "description": "Based on location data, the distance between the two locations (kilometer units) is calculated", "parameters": {"type": "object", "properties": {"origin": {"type": "string", "description": "Standard location (city, state, country, village, landmark, etc.)"}, "destination": {"type": "string", "description": "Destination (city, state, country, village, landmark, etc.)"}}, "required": ["origin", "destination"]}}}], "type_of_output": "relevance", "ground_truth": {"role": "assistant", "content": "There is no timer setting function."}, "acceptable_arguments": null}
{"serial_num": 12, "category": "REJECT", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Can you start a three -hundred second timer for a brief meditation?"}], "input_tools": [{"type": "function", "function": {"name": "find_nearest_emergency_room_by_location", "description": "Based on a specific location, it provides the location and information of the nearby emergency room.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Current location (example: station, address, building name, etc.)"}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "add_contact", "description": "Register a new contact.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "Name to register a contact"}, "phone": {"type": "string", "description": "phone number"}, "email": {"type": "string", "description": "Email address"}}, "required": ["name"]}}}, {"type": "function", "function": {"name": "add_movie_review", "description": "Add a review of a specific movie to the movie scrapbook.", "parameters": {"type": "object", "properties": {"movie_id": {"type": "string", "description": "ID of the movie to add a review"}, "review_text": {"type": "string", "description": "Movie review contents"}}, "required": ["movie_id", "review_text"]}}}, {"type": "function", "function": {"name": "create_user", "description": "Create a new user account.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "User's name"}, "email": {"type": "string", "description": "User's email address"}, "password": {"type": "string", "description": "User's password"}}, "required": ["name", "email", "password"]}}}, {"type": "function", "function": {"name": "count_words", "description": "Calculation of words in a given text (sentence or paragraph)", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Cell text"}}, "required": ["text"]}}}], "type_of_output": "relevance", "ground_truth": {"role": "assistant", "content": "There is no timer setting function."}, "acceptable_arguments": null}
{"serial_num": 13, "category": "REJECT", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "How much is Bitcoin being traded today?"}], "input_tools": [{"type": "function", "function": {"name": "CallTaxi", "description": "Call a taxi from a specific location.", "parameters": {"type": "object", "properties": {"pickup_location": {"type": "string", "description": "Departure location (address, station name, building name, etc.)"}, "destination": {"type": "string", "description": "Arrival location (address, station name, building name, etc.)"}}, "required": ["pickup_location", "destination"]}}}, {"type": "function", "function": {"name": "convert_squaremeter_to_pyeong", "description": "Convert it to \"제곱미터\"를 입력받아서, \"평\".", "parameters": {"type": "object", "properties": {"squaremeter": {"type": "number", "description": "Square"}}, "required": ["squaremeter"]}}}, {"type": "function", "function": {"name": "generate_playlist_based_on_favorite_artist", "description": "Create customized playlist based on preferred artists", "parameters": {"type": "object", "properties": {"artist_name": {"type": "string", "description": "The name of the artist that users prefer"}}, "required": ["artist_name"]}}}, {"type": "function", "function": {"name": "search_contact", "description": "Search for a list of contacts in the name of a person and bring his phone number and email address.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "The name of a person who wants to check the contact"}}, "required": ["name"]}}}, {"type": "function", "function": {"name": "calculateIdealWeight", "description": "Ideal weight calculation using Lorentz formula", "parameters": {"type": "object", "properties": {"height": {"type": "number", "description": "Centimeter key"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["height", "gender"]}}}], "type_of_output": "relevance", "ground_truth": {"role": "assistant", "content": "There is no function to search the current price of cryptocurrency."}, "acceptable_arguments": null}
{"serial_num": 14, "category": "REJECT", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Ethereum Price can you find out what's going on?"}], "input_tools": [{"type": "function", "function": {"name": "calculate_bill_split", "description": "Divide the billed amount evenly to calculate the amount of money for each person.", "parameters": {"type": "object", "properties": {"bill_total": {"type": "number", "description": "Allied total amount"}, "num_people": {"type": "integer", "description": "The number of people who pay the amount."}}, "required": ["bill_total", "num_people"]}}}, {"type": "function", "function": {"name": "search_flight", "description": "Search for a flight from a specific airport and arriving at a specific airport.", "parameters": {"type": "object", "properties": {"departure_airport": {"type": "string", "description": "Departure airport name (extracted as user expression. Example: Los Angeles International Airport, Gimhae Airport, etc.)"}, "arrival_airport": {"type": "string", "description": "Arrival airport name (extracting as it is, Example: Los Angeles International Airport, Gimhae Airport, etc.)"}, "departure_date": {"type": "string", "description": "Departure Date (YYYY-MM-DD)"}}, "required": ["departure_airport", "arrival_airport", "departure_date"]}}}, {"type": "function", "function": {"name": "getWeatherForecastForNext7Days", "description": "For the designated area, we offer a 7 -day weather forecast, including today.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "The name of the area where the weather forecast"}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "check_traffic_status", "description": "Inquire the current traffic situation on a particular path.", "parameters": {"type": "object", "properties": {"start_location": {"type": "string", "description": "Departure"}, "end_location": {"type": "string", "description": "Arrival point"}}, "required": ["start_location", "end_location"]}}}, {"type": "function", "function": {"name": "schedule_meeting", "description": "Book a meeting.", "parameters": {"type": "object", "properties": {"participants": {"type": "string", "description": "Participant list (if there are multiple participants, it is divided into a comma (,).)"}, "date_time": {"type": "string", "description": "Date and time of meeting (yyyy-mm-dd hh: mm format)"}}, "required": ["participants", "date_time"]}}}], "type_of_output": "relevance", "ground_truth": {"role": "assistant", "content": "There is no function to search the current price of cryptocurrency."}, "acceptable_arguments": null}
{"serial_num": 15, "category": "REJECT", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "How much is it now?"}], "input_tools": [{"type": "function", "function": {"name": "compareCleaningServices", "description": "Compare the service of the cleaning company and provide information.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Location or area where cleaning services are needed"}, "requested_date": {"type": "string", "format": "date", "description": "Service date (extract user as it is. Example: next Monday, January 1, 2022, etc.)"}, "size": {"type": "string", "description": "Pyeongsu or area of ​​the house (flat, square meter)"}}, "required": ["location", "requested_date", "size"]}}}, {"type": "function", "function": {"name": "checkBankBalance", "description": "Look up the balance of a specific bank account.", "parameters": {"type": "object", "properties": {"accountBank": {"type": "string", "description": "The bank name of the account to view the balance"}, "accountNumber": {"type": "string", "description": "Account number to view the balance"}}, "required": ["accountBank", "accountNumber"]}}}, {"type": "function", "function": {"name": "calculateLifeExpectancy", "description": "BMI, physical activity level, and smoking status estimates average life expectancy", "parameters": {"type": "object", "properties": {"BMI": {"type": "number", "description": "Body mass index (BMI)"}, "activityLevel": {"type": "string", "description": "Physical activity level (low, normal, high choice)"}, "smokingStatus": {"type": "boolean", "description": "Smoking state (smoking = true, non -smoking = false)"}}, "required": ["BMI", "activityLevel", "smokingStatus"]}}}, {"type": "function", "function": {"name": "add_contact", "description": "Register a new contact.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "Name to register a contact"}, "phone": {"type": "string", "description": "phone number"}, "email": {"type": "string", "description": "Email address"}}, "required": ["name"]}}}, {"type": "function", "function": {"name": "CheckTaxRefund", "description": "Search for the user's tax refund.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "The name of the tax paymenter"}, "birth": {"type": "string", "description": "Date of birth of tax payers (YYYY-MM-DD)"}, "phone_number": {"type": "string", "description": "Contact of tax payers"}}, "required": ["name", "birth", "phone_number"]}}}], "type_of_output": "relevance", "ground_truth": {"role": "assistant", "content": "There is no function to search the current price of cryptocurrency."}, "acceptable_arguments": null}
{"serial_num": 16, "category": "REJECT", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Can you know the current price of the chain link?"}], "input_tools": [{"type": "function", "function": {"name": "calculate_distance", "description": "Based on location data, the distance between the two locations (kilometer units) is calculated", "parameters": {"type": "object", "properties": {"origin": {"type": "string", "description": "Standard location (city, state, country, village, landmark, etc.)"}, "destination": {"type": "string", "description": "Destination (city, state, country, village, landmark, etc.)"}}, "required": ["origin", "destination"]}}}, {"type": "function", "function": {"name": "getHistoricalMinMaxTemperature", "description": "In the past, we look up for the minimum temperature and the highest temperature in certain regions.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "The name of the area to be searched"}, "date": {"type": "string", "description": "Date to look up ('YYYY-MM-DD' format)"}}, "required": ["location", "date"]}}}, {"type": "function", "function": {"name": "start_playlist", "description": "Play the playlist that the user requests.", "parameters": {"type": "object", "properties": {"playlist": {"type": "string", "description": "Name of playlist"}, "shuffle": {"type": "boolean", "description": "Playlist shuffle"}, "repeat": {"type": "boolean", "description": "Repeating playlists"}}, "required": ["playlist"]}}}, {"type": "function", "function": {"name": "schedule_laundry_pickup", "description": "Apply for a service to collect laundry.", "parameters": {"type": "object", "properties": {"pickup_location": {"type": "string", "description": "Extract the location of the user as it is to collect the laundry. (Example: House, 101 -dong 102, etc."}, "pickup_date": {"type": "string", "description": "Extract the laundry collection date as it is. (Example: next Monday, January 1, 2022, etc.)"}, "pickup_time": {"type": "string", "description": "Extract the time to collect the laundry as it is. (Example: 2 pm, 7 pm, etc.)"}}, "required": ["pickup_location", "pickup_date", "pickup_time"]}}}, {"type": "function", "function": {"name": "calculateCaloriesBurnedByWalking", "description": "Calculate the amount of calories consumed while walking on a given street.", "parameters": {"type": "object", "properties": {"distance": {"type": "number", "description": "Walking distance (kilometers)"}, "weight": {"type": "number", "description": "User's weight (kilogram unit)"}}, "required": ["distance", "weight"]}}}], "type_of_output": "relevance", "ground_truth": {"role": "assistant", "content": "There is no function to search the current price of cryptocurrency."}, "acceptable_arguments": null}
{"serial_num": 17, "category": "REJECT", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Can you compare the price of Samsung Galaxy S22?"}], "input_tools": [{"type": "function", "function": {"name": "getDayOfWeek", "description": "Returns the day of the given date.", "parameters": {"type": "object", "properties": {"date": {"type": "string", "description": "Yyyy-mm-DD format date"}}, "required": ["date"]}}}, {"type": "function", "function": {"name": "calculateIdealWeight", "description": "Ideal weight calculation using Lorentz formula", "parameters": {"type": "object", "properties": {"height": {"type": "number", "description": "Centimeter key"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["height", "gender"]}}}, {"type": "function", "function": {"name": "start_playlist", "description": "Play the playlist that the user requests.", "parameters": {"type": "object", "properties": {"playlist": {"type": "string", "description": "Name of playlist"}, "shuffle": {"type": "boolean", "description": "Playlist shuffle"}, "repeat": {"type": "boolean", "description": "Repeating playlists"}}, "required": ["playlist"]}}}, {"type": "function", "function": {"name": "getCryptocurrencyPrice", "description": "Inquire the current price of a specific cryptocurrency.", "parameters": {"type": "object", "properties": {"cryptocurrency": {"type": "string", "description": "Cryptocurrency name to view the price"}}, "required": ["cryptocurrency"]}}}, {"type": "function", "function": {"name": "count_words", "description": "Calculation of words in a given text (sentence or paragraph)", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Cell text"}}, "required": ["text"]}}}], "type_of_output": "relevance", "ground_truth": {"role": "assistant", "content": "There is no ability to compare the selling price of a specific product."}, "acceptable_arguments": null}
{"serial_num": 18, "category": "REJECT", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Lenovo 2023 I want to compare the price of yoga slim notebook"}], "input_tools": [{"type": "function", "function": {"name": "informWeather", "description": "Provide current weather information in a particular area", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Local name to bring weather information"}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "convert_pyeong_to_squaremeter", "description": "Convert it to \"평\"을 입력받아서, \"제곱미터\".", "parameters": {"type": "object", "properties": {"pyeong": {"type": "number", "description": "Pyeongsu to be transformed"}}, "required": ["pyeong"]}}}, {"type": "function", "function": {"name": "calculate_bmi", "description": "Calculation of human body mass index (BMI)", "parameters": {"type": "object", "properties": {"height": {"type": "number", "description": "Centimeter key"}, "weight": {"type": "number", "description": "Kilogram unit weight"}}, "required": ["height", "weight"]}}}, {"type": "function", "function": {"name": "getCurrentTopSeries", "description": "We offer the current popular TV series rankings", "parameters": {"type": "object", "properties": {}, "required": []}}}, {"type": "function", "function": {"name": "checkBankBalance", "description": "Look up the balance of a specific bank account.", "parameters": {"type": "object", "properties": {"accountBank": {"type": "string", "description": "The bank name of the account to view the balance"}, "accountNumber": {"type": "string", "description": "Account number to view the balance"}}, "required": ["accountBank", "accountNumber"]}}}], "type_of_output": "relevance", "ground_truth": {"role": "assistant", "content": "There is no ability to compare the selling price of a specific product."}, "acceptable_arguments": null}
{"serial_num": 19, "category": "REJECT", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Compare the price of AirPod Pro 2 at various retailers"}], "input_tools": [{"type": "function", "function": {"name": "deleteMemo", "description": "Delete the previously stored notes", "parameters": {"type": "object", "properties": {"memo_id": {"type": "string", "description": "A unique identifier of the memo to delete"}}, "required": ["memo_id"]}}}, {"type": "function", "function": {"name": "add_movie_review", "description": "Add a review of a specific movie to the movie scrapbook.", "parameters": {"type": "object", "properties": {"movie_id": {"type": "string", "description": "ID of the movie to add a review"}, "review_text": {"type": "string", "description": "Movie review contents"}}, "required": ["movie_id", "review_text"]}}}, {"type": "function", "function": {"name": "OrderPizza", "description": "Order pizza.", "parameters": {"type": "object", "properties": {"PizzaType": {"type": "string", "description": "Pizza"}, "size": {"type": "string", "description": "Pizza size (extracted as it is, example: Small, L, Medium, etc.)"}, "quantity": {"type": "integer", "description": "Order quantity"}}, "required": ["PizzaType", "size", "quantity"]}}}, {"type": "function", "function": {"name": "create_playlist", "description": "Create a music playlist that fits the user's tastes and conditions", "parameters": {"type": "object", "properties": {"genre": {"type": "string", "description": "The genre of music to be included in the playlist"}, "mood": {"type": "string", "description": "Playlist's mood or atmosphere"}, "count": {"type": "integer", "description": "The number of songs to be included in the playlist"}, "include_live": {"type": "boolean", "description": "Live version songs include"}}, "required": ["genre", "mood", "count"]}}}, {"type": "function", "function": {"name": "convert_euro_to_koruna", "description": "Convert the Given EUR amount to Czech Coruna (CZK)", "parameters": {"type": "object", "properties": {"amount_euro": {"type": "number", "description": "EUR amount to convert"}, "exchange_rate_eur_to_czk": {"type": "number", "description": "Exchange rate from EUR to CZK"}}, "required": ["amount_euro", "exchange_rate_eur_to_czk"]}}}], "type_of_output": "relevance", "ground_truth": {"role": "assistant", "content": "There is no ability to compare prices in various retailers."}, "acceptable_arguments": null}
{"serial_num": 20, "category": "REJECT", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "I want to compare the price of the HP Specter X360 laptop in several companies."}], "input_tools": [{"type": "function", "function": {"name": "add_movie_review", "description": "Add a review of a specific movie to the movie scrapbook.", "parameters": {"type": "object", "properties": {"movie_id": {"type": "string", "description": "ID of the movie to add a review"}, "review_text": {"type": "string", "description": "Movie review contents"}}, "required": ["movie_id", "review_text"]}}}, {"type": "function", "function": {"name": "convert_krw_to_usd", "description": "Converted Korean money (KRW) to USD (USD)", "parameters": {"type": "object", "properties": {"amount_krw": {"type": "number", "description": "Korean money (KRW) amount to convert"}, "exchange_rate_krw_to_usd": {"type": "number", "description": "Exchange rate from KRW to USD"}}, "required": ["amount_krw", "exchange_rate_krw_to_usd"]}}}, {"type": "function", "function": {"name": "getCurrentKoreaTime", "description": "Currently, the time of Korea is returned to year-month-day: minor: second format.", "parameters": {}}}, {"type": "function", "function": {"name": "calculate_bill_split", "description": "Divide the billed amount evenly to calculate the amount of money for each person.", "parameters": {"type": "object", "properties": {"bill_total": {"type": "number", "description": "Allied total amount"}, "num_people": {"type": "integer", "description": "The number of people who pay the amount."}}, "required": ["bill_total", "num_people"]}}}, {"type": "function", "function": {"name": "track_order", "description": "Inquire an order status (ordering, payment completion, shipping, delivery, etc.) with a given order number and informed the expected shipping date or expected delivery date.", "parameters": {"type": "object", "properties": {"order_id": {"type": "string", "description": "Order number to search"}}, "required": ["order_id"]}}}], "type_of_output": "relevance", "ground_truth": {"role": "assistant", "content": "It does not provide the function of comparing the price of a specific product by various companies."}, "acceptable_arguments": null}
{"serial_num": 21, "category": "REJECT", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Gangnam N Tower, where is the emergency room around?"}], "input_tools": [{"type": "function", "function": {"name": "getCurrentKoreaTime", "description": "Currently, the time of Korea is returned to year-month-day: minor: second format.", "parameters": {}}}, {"type": "function", "function": {"name": "registerFriendBirthday", "description": "A function that registers a friend's name and birthday information", "parameters": {"type": "object", "properties": {"friendName": {"type": "string", "description": "A friend's name to register"}, "birthday": {"type": "string", "description": "The birthday of a friend to register (YYYY-MM-DD format)"}}, "required": ["friendName", "birthday"]}}}, {"type": "function", "function": {"name": "add_contact", "description": "Register a new contact.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "Name to register a contact"}, "phone": {"type": "string", "description": "phone number"}, "email": {"type": "string", "description": "Email address"}}, "required": ["name"]}}}, {"type": "function", "function": {"name": "FindPrinterError", "description": "Returns the current error status (lack of paper, lack of ink, etc.) of certain printers in the company.", "parameters": {"type": "object", "properties": {"PrinterLocation": {"type": "string", "description": "The location of the printer to identify the error condition"}}, "required": ["PrinterLocation"]}}}, {"type": "function", "function": {"name": "update_item_quantity_in_shopping_cart", "description": "Update the quantity of specific products in the shopping cart", "parameters": {"type": "object", "properties": {"user_id": {"type": "string", "description": "User's unique identifier"}, "product_id": {"type": "string", "description": "A unique identifier of products that want to update the quantity"}, "new_quantity": {"type": "integer", "description": "New quantity to update"}}, "required": ["user_id", "product_id", "new_quantity"]}}}], "type_of_output": "relevance", "ground_truth": {"role": "assistant", "content": "There is no function that provides specific and specific location information directly."}, "acceptable_arguments": null}
{"serial_num": 22, "category": "REJECT", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "I would like to find an emergency room near Hyundai Department Store in Samseong -dong."}], "input_tools": [{"type": "function", "function": {"name": "search_message_content", "description": "Search for a message containing the keywords specified by the user among the saved messages.", "parameters": {"type": "object", "properties": {"keyword": {"type": "string", "description": "Keyword to search"}, "from_date": {"type": "string", "description": "Date to start searching (optional)"}, "to_date": {"type": "string", "description": "Date to finish the search (optional)"}}, "required": ["keyword"]}}}, {"type": "function", "function": {"name": "calculate_distance", "description": "Based on location data, the distance between the two locations (kilometer units) is calculated", "parameters": {"type": "object", "properties": {"origin": {"type": "string", "description": "Standard location (city, state, country, village, landmark, etc.)"}, "destination": {"type": "string", "description": "Destination (city, state, country, village, landmark, etc.)"}}, "required": ["origin", "destination"]}}}, {"type": "function", "function": {"name": "FindPrinterError", "description": "Returns the current error status (lack of paper, lack of ink, etc.) of certain printers in the company.", "parameters": {"type": "object", "properties": {"PrinterLocation": {"type": "string", "description": "The location of the printer to identify the error condition"}}, "required": ["PrinterLocation"]}}}, {"type": "function", "function": {"name": "generate_image_from_text", "description": "Create a picture based on a given text", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Text to create a picture"}}, "required": ["text"]}}}, {"type": "function", "function": {"name": "track_order", "description": "Inquire an order status (ordering, payment completion, shipping, delivery, etc.) with a given order number and informed the expected shipping date or expected delivery date.", "parameters": {"type": "object", "properties": {"order_id": {"type": "string", "description": "Order number to search"}}, "required": ["order_id"]}}}], "type_of_output": "relevance", "ground_truth": {"role": "assistant", "content": "There is no function that provides specific and specific location information directly."}, "acceptable_arguments": null}
{"serial_num": 23, "category": "REJECT", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "I'm curious about the location of the emergency room around you. The current location address is 1822 southern circulation in Gwanak -gu, Seoul."}], "input_tools": [{"type": "function", "function": {"name": "deleteMemo", "description": "Delete the previously stored notes", "parameters": {"type": "object", "properties": {"memo_id": {"type": "string", "description": "A unique identifier of the memo to delete"}}, "required": ["memo_id"]}}}, {"type": "function", "function": {"name": "discover_new_releases_kpop", "description": "Provides the latest music release information of the K -pop genre", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "calculateLifeExpectancy", "description": "BMI, physical activity level, and smoking status estimates average life expectancy", "parameters": {"type": "object", "properties": {"BMI": {"type": "number", "description": "Body mass index (BMI)"}, "activityLevel": {"type": "string", "description": "Physical activity level (low, normal, high choice)"}, "smokingStatus": {"type": "boolean", "description": "Smoking state (smoking = true, non -smoking = false)"}}, "required": ["BMI", "activityLevel", "smokingStatus"]}}}, {"type": "function", "function": {"name": "search_flight", "description": "Search for a flight from a specific airport and arriving at a specific airport.", "parameters": {"type": "object", "properties": {"departure_airport": {"type": "string", "description": "Departure airport name (extracted as user expression. Example: Los Angeles International Airport, Gimhae Airport, etc.)"}, "arrival_airport": {"type": "string", "description": "Arrival airport name (extracting as it is, Example: Los Angeles International Airport, Gimhae Airport, etc.)"}, "departure_date": {"type": "string", "description": "Departure Date (YYYY-MM-DD)"}}, "required": ["departure_airport", "arrival_airport", "departure_date"]}}}, {"type": "function", "function": {"name": "schedule_meeting", "description": "Book a meeting.", "parameters": {"type": "object", "properties": {"participants": {"type": "string", "description": "Participant list (if there are multiple participants, it is divided into a comma (,).)"}, "date_time": {"type": "string", "description": "Date and time of meeting (yyyy-mm-dd hh: mm format)"}}, "required": ["participants", "date_time"]}}}], "type_of_output": "relevance", "ground_truth": {"role": "assistant", "content": "There is no function that provides specific and specific location information directly."}, "acceptable_arguments": null}
{"serial_num": 24, "category": "REJECT", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "I want to know if there is an emergency room around Cheonan Station."}], "input_tools": [{"type": "function", "function": {"name": "generate_syntax_tree_from_text", "description": "Create a syntax tree for a given text", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Text to create a syntax tree"}}, "required": ["text"]}}}, {"type": "function", "function": {"name": "getDayOfWeek", "description": "Returns the day of the given date.", "parameters": {"type": "object", "properties": {"date": {"type": "string", "description": "Yyyy-mm-DD format date"}}, "required": ["date"]}}}, {"type": "function", "function": {"name": "calculate_tip", "description": "Tip calculation", "parameters": {"type": "object", "properties": {"bill_amount": {"type": "number", "description": "Billed amount"}, "tip_percentage": {"type": "number", "description": "Tip 100 division (for example, 15 input for 15%)"}}, "required": ["bill_amount", "tip_percentage"]}}}, {"type": "function", "function": {"name": "create_playlist", "description": "Create a music playlist that fits the user's tastes and conditions", "parameters": {"type": "object", "properties": {"genre": {"type": "string", "description": "The genre of music to be included in the playlist"}, "mood": {"type": "string", "description": "Playlist's mood or atmosphere"}, "count": {"type": "integer", "description": "The number of songs to be included in the playlist"}, "include_live": {"type": "boolean", "description": "Live version songs include"}}, "required": ["genre", "mood", "count"]}}}, {"type": "function", "function": {"name": "add_item_to_shopping_cart", "description": "Add new products to the shopping cart", "parameters": {"type": "object", "properties": {"product_id": {"type": "string", "description": "The unique identifier of the product you want to add"}, "quantity": {"type": "integer", "description": "Quantity"}}, "required": ["product_id", "quantity"]}}}], "type_of_output": "relevance", "ground_truth": {"role": "assistant", "content": "There is no function that provides specific and specific location information directly."}, "acceptable_arguments": null}
{"serial_num": 25, "category": "REJECT", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "The 3rd floor lounge printer doesn't work, but check what the problem is"}], "input_tools": [{"type": "function", "function": {"name": "checkBankBalance", "description": "Look up the balance of a specific bank account.", "parameters": {"type": "object", "properties": {"accountBank": {"type": "string", "description": "The bank name of the account to view the balance"}, "accountNumber": {"type": "string", "description": "Account number to view the balance"}}, "required": ["accountBank", "accountNumber"]}}}, {"type": "function", "function": {"name": "getMonthlyBoxOfficeRanking", "description": "It offers a monthly box office ranking for the designated year and month.", "parameters": {"type": "object", "properties": {"year": {"type": "string", "description": "The year to look up (yyyy format)"}, "month": {"type": "string", "description": "Month to look up (MM format)"}}, "required": ["year", "month"]}}}, {"type": "function", "function": {"name": "search_contact", "description": "Search for a list of contacts in the name of a person and bring his phone number and email address.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "The name of a person who wants to check the contact"}}, "required": ["name"]}}}, {"type": "function", "function": {"name": "translate_text_to_english", "description": "Translate the given text into English", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Text translation in English"}}, "required": ["text"]}}}, {"type": "function", "function": {"name": "calculateC를aloricNeeds", "description": "A function that estimates the average daily calorie consumption", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}, "height": {"type": "number", "description": "Centimeter key"}, "age": {"type": "integer", "description": "age"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["weight", "height", "age", "gender"]}}}], "type_of_output": "relevance", "ground_truth": {"role": "assistant", "content": "There is no function to directly check the actual printer's operating problem."}, "acceptable_arguments": null}
{"serial_num": 26, "category": "REJECT", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "There was a problem in the F02 meeting room printer. Can you check your current status?"}], "input_tools": [{"type": "function", "function": {"name": "get_stock_price", "description": "Search the current price of a particular stock.", "parameters": {"type": "object", "properties": {"stock_name": {"type": "string", "description": "Stock name to look up"}}, "required": ["stock_name"]}}}, {"type": "function", "function": {"name": "generate_image_from_text", "description": "Create a picture based on a given text", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Text to create a picture"}}, "required": ["text"]}}}, {"type": "function", "function": {"name": "getDailyNewsHeadlines", "description": "Today's main news headline is provided.", "parameters": {"type": "object", "properties": {}, "required": []}}}, {"type": "function", "function": {"name": "generate_random_special_chars", "description": "Randomly return by selecting 5 special characters randomly from a special character set.", "parameters": {"type": "object", "properties": {}, "required": []}}}, {"type": "function", "function": {"name": "informTyphoon", "description": "It provides location information of the current typhoon.", "parameters": {"type": "object", "properties": {"typhoonName": {"type": "string", "description": "The name of the typhoon to look upon"}}, "required": ["typhoonName"]}}}], "type_of_output": "relevance", "ground_truth": {"role": "assistant", "content": "There is no function to directly check the actual printer's operating problem."}, "acceptable_arguments": null}
{"serial_num": 27, "category": "REJECT", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "The secretary's office printer floated an error message. Tell me what the problem"}], "input_tools": [{"type": "function", "function": {"name": "get_rainfall_probability", "description": "It brings probability information in a particular area.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Local name"}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "getWeatherForecastForNext7Days", "description": "For the designated area, we offer a 7 -day weather forecast, including today.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "The name of the area where the weather forecast"}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "count_words", "description": "Calculation of words in a given text (sentence or paragraph)", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Cell text"}}, "required": ["text"]}}}, {"type": "function", "function": {"name": "calculateBMR", "description": "Basal metabolic rate calculation", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}, "height": {"type": "number", "description": "Centimeter key"}, "age": {"type": "integer", "description": "age"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["weight", "height", "age", "gender"]}}}, {"type": "function", "function": {"name": "getDayOfWeek", "description": "Returns the day of the given date.", "parameters": {"type": "object", "properties": {"date": {"type": "string", "description": "Yyyy-mm-DD format date"}}, "required": ["date"]}}}], "type_of_output": "relevance", "ground_truth": {"role": "assistant", "content": "There is no function to directly check the actual printer's operating problem."}, "acceptable_arguments": null}
{"serial_num": 28, "category": "REJECT", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "The 8th floor lobby printer continues to show an error. Can I check the situation now?"}], "input_tools": [{"type": "function", "function": {"name": "calculate_bmi", "description": "Calculation of human body mass index (BMI)", "parameters": {"type": "object", "properties": {"height": {"type": "number", "description": "Centimeter key"}, "weight": {"type": "number", "description": "Kilogram unit weight"}}, "required": ["height", "weight"]}}}, {"type": "function", "function": {"name": "convert_currency", "description": "Returns a value that exchanges a currency into another currency.", "parameters": {"type": "object", "properties": {"amount": {"type": "number", "description": "Money"}, "from": {"type": "string", "description": "Type of currency currency exchange"}, "to": {"type": "string", "description": "Type of currency exchange results"}}, "required": ["amount", "from", "to"]}}}, {"type": "function", "function": {"name": "recommendLuckMessage", "description": "It is a function that recommends lucky words randomly.", "parameters": {"type": "object", "properties": {}, "required": []}}}, {"type": "function", "function": {"name": "convert_pyeong_to_squaremeter", "description": "Convert it to \"평\"을 입력받아서, \"제곱미터\".", "parameters": {"type": "object", "properties": {"pyeong": {"type": "number", "description": "Pyeongsu to be transformed"}}, "required": ["pyeong"]}}}, {"type": "function", "function": {"name": "calculateCaloricNeeds", "description": "A function that estimates the average daily calorie consumption", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}, "height": {"type": "number", "description": "Centimeter key"}, "age": {"type": "integer", "description": "age"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["weight", "height", "age", "gender"]}}}], "type_of_output": "relevance", "ground_truth": {"role": "assistant", "content": "There is no function to directly check the actual printer's operating problem."}, "acceptable_arguments": null}
{"serial_num": 29, "category": "REJECT", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Please call a taxi to the main gate of Sogang University."}], "input_tools": [{"type": "function", "function": {"name": "calculateLifeExpectancy", "description": "BMI, physical activity level, and smoking status estimates average life expectancy", "parameters": {"type": "object", "properties": {"BMI": {"type": "number", "description": "Body mass index (BMI)"}, "activityLevel": {"type": "string", "description": "Physical activity level (low, normal, high choice)"}, "smokingStatus": {"type": "boolean", "description": "Smoking state (smoking = true, non -smoking = false)"}}, "required": ["BMI", "activityLevel", "smokingStatus"]}}}, {"type": "function", "function": {"name": "deleteMemo", "description": "Delete the previously stored notes", "parameters": {"type": "object", "properties": {"memo_id": {"type": "string", "description": "A unique identifier of the memo to delete"}}, "required": ["memo_id"]}}}, {"type": "function", "function": {"name": "calculateTimeDifference", "description": "The time difference between the two regions is returned every time.", "parameters": {"type": "object", "properties": {"fromTimezone": {"type": "string", "description": "Time zone area"}, "toTimezone": {"type": "string", "description": "Time zone area for comparison"}}, "required": ["fromTimezone", "toTimezone"]}}}, {"type": "function", "function": {"name": "generate_random_password", "description": "Create any password with certain conditions", "parameters": {"type": "object", "properties": {"length": {"type": "integer", "description": "Password length"}, "include_uppercase": {"type": "boolean", "description": "Including alphabet uppercase letters"}, "include_lowercase": {"type": "boolean", "description": "Including alphabet lowercase"}, "include_numbers": {"type": "boolean", "description": "Whether the number includes"}}, "required": ["length", "include_uppercase", "include_lowercase", "include_numbers"]}}}, {"type": "function", "function": {"name": "registerFriendBirthday", "description": "A function that registers a friend's name and birthday information", "parameters": {"type": "object", "properties": {"friendName": {"type": "string", "description": "A friend's name to register"}, "birthday": {"type": "string", "description": "The birthday of a friend to register (YYYY-MM-DD format)"}}, "required": ["friendName", "birthday"]}}}], "type_of_output": "relevance", "ground_truth": {"role": "assistant", "content": "There is no function of calling a taxi directly."}, "acceptable_arguments": null}
{"serial_num": 30, "category": "REJECT", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "I'm going to Gangnam University. Can you call a taxi in front of Yongin City Hall?"}], "input_tools": [{"type": "function", "function": {"name": "informLottoNumberByDate", "description": "It is a function that informs the lottery winning number on a specific date.", "parameters": {"type": "object", "properties": {"date": {"type": "string", "description": "Date to check the lottery winning number (e.g., March 4)"}}, "required": ["date"]}}}, {"type": "function", "function": {"name": "search_message_content", "description": "Search for a message containing the keywords specified by the user among the saved messages.", "parameters": {"type": "object", "properties": {"keyword": {"type": "string", "description": "Keyword to search"}, "from_date": {"type": "string", "description": "Date to start searching (optional)"}, "to_date": {"type": "string", "description": "Date to finish the search (optional)"}}, "required": ["keyword"]}}}, {"type": "function", "function": {"name": "calculateProteinNeeds", "description": "Daily recommended protein intake considering activity level and weight", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}, "activityLevel": {"type": "string", "description": "Activity level ('low', 'moderate', 'high')"}}, "required": ["weight", "activityLevel"]}}}, {"type": "function", "function": {"name": "search_email_content", "description": "Search for emails containing keywords specified by the user during the saved email.", "parameters": {"type": "object", "properties": {"keyword": {"type": "string", "description": "Keyword to search"}, "from_date": {"type": "string", "description": "Date to start searching (optional)"}, "to_date": {"type": "string", "description": "Date to finish the search (optional)"}, "sender": {"type": "string", "description": "Email caller address (optional)"}}, "required": ["keyword"]}}}, {"type": "function", "function": {"name": "track_order", "description": "Inquire an order status (ordering, payment completion, shipping, delivery, etc.) with a given order number and informed the expected shipping date or expected delivery date.", "parameters": {"type": "object", "properties": {"order_id": {"type": "string", "description": "Order number to search"}}, "required": ["order_id"]}}}], "type_of_output": "relevance", "ground_truth": {"role": "assistant", "content": "There is no function of calling a taxi directly."}, "acceptable_arguments": null}
{"serial_num": 31, "category": "REJECT", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Call me a taxi from Lotte Cinema Wirye to Dankook University Jukjeon Campus."}], "input_tools": [{"type": "function", "function": {"name": "getCurrentKoreaTime", "description": "Currently, the time of Korea is returned to year-month-day: minor: second format.", "parameters": {}}}, {"type": "function", "function": {"name": "add_contact", "description": "Register a new contact.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "Name to register a contact"}, "phone": {"type": "string", "description": "phone number"}, "email": {"type": "string", "description": "Email address"}}, "required": ["name"]}}}, {"type": "function", "function": {"name": "informLottoWinnerPrizeByDate", "description": "It is a function that informs the amount of lottery winnings on a specific date.", "parameters": {"type": "object", "properties": {"date": {"type": "string", "description": "Date to check the amount of lottery winnings (e.g., March 4)"}}, "required": ["date"]}}}, {"type": "function", "function": {"name": "compareCleaningServices", "description": "Compare the service of the cleaning company and provide information.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Location or area where cleaning services are needed"}, "requested_date": {"type": "string", "format": "date", "description": "Service date (extract user as it is. Example: next Monday, January 1, 2022, etc.)"}, "size": {"type": "string", "description": "Pyeongsu or area of ​​the house (flat, square meter)"}}, "required": ["location", "requested_date", "size"]}}}, {"type": "function", "function": {"name": "calculateCaloriesBurnedByWalking", "description": "Calculate the amount of calories consumed while walking on a given street.", "parameters": {"type": "object", "properties": {"distance": {"type": "number", "description": "Walking distance (kilometers)"}, "weight": {"type": "number", "description": "User's weight (kilogram unit)"}}, "required": ["distance", "weight"]}}}], "type_of_output": "relevance", "ground_truth": {"role": "assistant", "content": "There is no function of calling a taxi directly."}, "acceptable_arguments": null}
{"serial_num": 32, "category": "REJECT", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Call the taxi to the front door of Gwanggyo Galleria Department Store. The destination is Gwanggyo Lake Elementary School."}], "input_tools": [{"type": "function", "function": {"name": "create_user", "description": "Create a new user account.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "User's name"}, "email": {"type": "string", "description": "User's email address"}, "password": {"type": "string", "description": "User's password"}}, "required": ["name", "email", "password"]}}}, {"type": "function", "function": {"name": "update_item_quantity_in_shopping_cart", "description": "Update the quantity of specific products in the shopping cart", "parameters": {"type": "object", "properties": {"user_id": {"type": "string", "description": "User's unique identifier"}, "product_id": {"type": "string", "description": "A unique identifier of products that want to update the quantity"}, "new_quantity": {"type": "integer", "description": "New quantity to update"}}, "required": ["user_id", "product_id", "new_quantity"]}}}, {"type": "function", "function": {"name": "generate_syntax_tree_from_text", "description": "Create a syntax tree for a given text", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Text to create a syntax tree"}}, "required": ["text"]}}}, {"type": "function", "function": {"name": "getCurrentUTCTime", "description": "We offer current UTC time.", "parameters": {}}}, {"type": "function", "function": {"name": "calculate_bmi", "description": "Calculation of human body mass index (BMI)", "parameters": {"type": "object", "properties": {"height": {"type": "number", "description": "Centimeter key"}, "weight": {"type": "number", "description": "Kilogram unit weight"}}, "required": ["height", "weight"]}}}], "type_of_output": "relevance", "ground_truth": {"role": "assistant", "content": "There is no function of calling a taxi directly."}, "acceptable_arguments": null}
{"serial_num": 33, "category": "REJECT", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "I spent too much money this month. I'm curious about the balance."}], "input_tools": [{"type": "function", "function": {"name": "CallTaxi", "description": "Call a taxi from a specific location.", "parameters": {"type": "object", "properties": {"pickup_location": {"type": "string", "description": "Departure location (address, station name, building name, etc.)"}, "destination": {"type": "string", "description": "Arrival location (address, station name, building name, etc.)"}}, "required": ["pickup_location", "destination"]}}}, {"type": "function", "function": {"name": "getCurrentTimeForLocation", "description": "Provide current time information in certain areas", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Local name to bring time information"}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "calculateIdealWeight", "description": "Ideal weight calculation using Lorentz formula", "parameters": {"type": "object", "properties": {"height": {"type": "number", "description": "Centimeter key"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["height", "gender"]}}}, {"type": "function", "function": {"name": "informLottoWinnerPrizeByDate", "description": "It is a function that informs the amount of lottery winnings on a specific date.", "parameters": {"type": "object", "properties": {"date": {"type": "string", "description": "Date to check the amount of lottery winnings (e.g., March 4)"}}, "required": ["date"]}}}, {"type": "function", "function": {"name": "view_shopping_cart", "description": "User's shopping cart contents inquiry", "parameters": {"type": "object", "properties": {"user_id": {"type": "string", "description": "User's unique identifier"}}, "required": ["user_id"]}}}], "type_of_output": "relevance", "ground_truth": {"role": "assistant", "content": "There is no function to look up the balance of a specific bank account."}, "acceptable_arguments": null}
{"serial_num": 34, "category": "REJECT", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "How long is the account balance left? The account I want to check is Kakao Bank 789-012-345."}], "input_tools": [{"type": "function", "function": {"name": "calculateIdealWeight", "description": "Ideal weight calculation using Lorentz formula", "parameters": {"type": "object", "properties": {"height": {"type": "number", "description": "Centimeter key"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["height", "gender"]}}}, {"type": "function", "function": {"name": "getWeatherForecastForNext7Days", "description": "For the designated area, we offer a 7 -day weather forecast, including today.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "The name of the area where the weather forecast"}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "get_movie_schedule", "description": "Inquire a certain date and screening schedule for a specific movie theater.", "parameters": {"type": "object", "properties": {"movie_date": {"type": "string", "description": "Date to look up (YYYY-MM-DD)"}, "movie_location": {"type": "string", "description": "Cinema to look upon"}}, "required": ["movie_date", "movie_location"]}}}, {"type": "function", "function": {"name": "calculate_tip", "description": "Tip calculation", "parameters": {"type": "object", "properties": {"bill_amount": {"type": "number", "description": "Billed amount"}, "tip_percentage": {"type": "number", "description": "Tip 100 division (for example, 15 input for 15%)"}}, "required": ["bill_amount", "tip_percentage"]}}}, {"type": "function", "function": {"name": "translate_text_to_english", "description": "Translate the given text into English", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Text translation in English"}}, "required": ["text"]}}}], "type_of_output": "relevance", "ground_truth": {"role": "assistant", "content": "There is no function to look up the balance of a specific bank account."}, "acceptable_arguments": null}
{"serial_num": 35, "category": "REJECT", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Can I know the account balance? The account number is Hana Bank 1234567890."}], "input_tools": [{"type": "function", "function": {"name": "calculateIdealWeight", "description": "Ideal weight calculation using Lorentz formula", "parameters": {"type": "object", "properties": {"height": {"type": "number", "description": "Centimeter key"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["height", "gender"]}}}, {"type": "function", "function": {"name": "calculate_tip", "description": "Tip calculation", "parameters": {"type": "object", "properties": {"bill_amount": {"type": "number", "description": "Billed amount"}, "tip_percentage": {"type": "number", "description": "Tip 100 division (for example, 15 input for 15%)"}}, "required": ["bill_amount", "tip_percentage"]}}}, {"type": "function", "function": {"name": "calculate_distance", "description": "Based on location data, the distance between the two locations (kilometer units) is calculated", "parameters": {"type": "object", "properties": {"origin": {"type": "string", "description": "Standard location (city, state, country, village, landmark, etc.)"}, "destination": {"type": "string", "description": "Destination (city, state, country, village, landmark, etc.)"}}, "required": ["origin", "destination"]}}}, {"type": "function", "function": {"name": "sendEmail", "description": "Send email to a specific email address.", "parameters": {"type": "object", "properties": {"receiverEmail": {"type": "string", "description": "EMAIL address of the recipient"}, "subject": {"type": "string", "description": "Email title"}, "body": {"type": "string", "description": "Email content"}}, "required": ["receiverEmail", "subject", "body"]}}}, {"type": "function", "function": {"name": "calculate_tax", "description": "Calculate the tax on the given amount.", "parameters": {"type": "object", "properties": {"amount": {"type": "number", "description": "Prior to calculating"}, "tax_rate": {"type": "number", "description": "Tax rate to be applied (percentage)"}}, "required": ["amount", "tax_rate"]}}}], "type_of_output": "relevance", "ground_truth": {"role": "assistant", "content": "There is no function to look up the balance of a specific bank account."}, "acceptable_arguments": null}
{"serial_num": 36, "category": "REJECT", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Please look up the balance of Kookmin Bank 901-234-567."}], "input_tools": [{"type": "function", "function": {"name": "get_movie_schedule", "description": "Inquire a certain date and screening schedule for a specific movie theater.", "parameters": {"type": "object", "properties": {"movie_date": {"type": "string", "description": "Date to look up (YYYY-MM-DD)"}, "movie_location": {"type": "string", "description": "Cinema to look upon"}}, "required": ["movie_date", "movie_location"]}}}, {"type": "function", "function": {"name": "getCurrentKoreaTime", "description": "Currently, the time of Korea is returned to year-month-day: minor: second format.", "parameters": {}}}, {"type": "function", "function": {"name": "bookBusinessVehicle", "description": "Book a car for business trips.", "parameters": {"type": "object", "properties": {"destination": {"type": "string", "description": "destination"}, "departure_date": {"type": "string", "description": "Express your departure date as it is. Example) '다음 주 월요일', '2022년 1월 1일'"}}, "required": ["destination", "departure_date"]}}}, {"type": "function", "function": {"name": "convert_currency", "description": "Returns a value that exchanges a currency into another currency.", "parameters": {"type": "object", "properties": {"amount": {"type": "number", "description": "Money"}, "from": {"type": "string", "description": "Type of currency currency exchange"}, "to": {"type": "string", "description": "Type of currency exchange results"}}, "required": ["amount", "from", "to"]}}}, {"type": "function", "function": {"name": "calculate_tax", "description": "Calculate the tax on the given amount.", "parameters": {"type": "object", "properties": {"amount": {"type": "number", "description": "Prior to calculating"}, "tax_rate": {"type": "number", "description": "Tax rate to be applied (percentage)"}}, "required": ["amount", "tax_rate"]}}}], "type_of_output": "relevance", "ground_truth": {"role": "assistant", "content": "There is no function to look up the balance of a specific bank account."}, "acceptable_arguments": null}
{"serial_num": 37, "category": "REJECT", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "On March 25, 2023, please book a meeting with Kim Mina and Song Ji -ah on AM 11:00."}], "input_tools": [{"type": "function", "function": {"name": "get_rainfall_probability", "description": "It brings probability information in a particular area.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Local name"}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "convert_krw_to_usd", "description": "Converted Korean money (KRW) to USD (USD)", "parameters": {"type": "object", "properties": {"amount_krw": {"type": "number", "description": "Korean money (KRW) amount to convert"}, "exchange_rate_krw_to_usd": {"type": "number", "description": "Exchange rate from KRW to USD"}}, "required": ["amount_krw", "exchange_rate_krw_to_usd"]}}}, {"type": "function", "function": {"name": "generate_random_password", "description": "Create any password with certain conditions", "parameters": {"type": "object", "properties": {"length": {"type": "integer", "description": "Password length"}, "include_uppercase": {"type": "boolean", "description": "Including alphabet uppercase letters"}, "include_lowercase": {"type": "boolean", "description": "Including alphabet lowercase"}, "include_numbers": {"type": "boolean", "description": "Whether the number includes"}}, "required": ["length", "include_uppercase", "include_lowercase", "include_numbers"]}}}, {"type": "function", "function": {"name": "create_playlist", "description": "Create a music playlist that fits the user's tastes and conditions", "parameters": {"type": "object", "properties": {"genre": {"type": "string", "description": "The genre of music to be included in the playlist"}, "mood": {"type": "string", "description": "Playlist's mood or atmosphere"}, "count": {"type": "integer", "description": "The number of songs to be included in the playlist"}, "include_live": {"type": "boolean", "description": "Live version songs include"}}, "required": ["genre", "mood", "count"]}}}, {"type": "function", "function": {"name": "translate_text_to_english", "description": "Translate the given text into English", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Text translation in English"}}, "required": ["text"]}}}], "type_of_output": "relevance", "ground_truth": {"role": "assistant", "content": "There is no meeting reservation function."}, "acceptable_arguments": null}
{"serial_num": 38, "category": "REJECT", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "2024.7.23 Book a meeting with Choi Soo -bin, Kim Joo -ah and Ahn Yu -mi at 2 pm."}], "input_tools": [{"type": "function", "function": {"name": "compareCleaningServices", "description": "Compare the service of the cleaning company and provide information.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Location or area where cleaning services are needed"}, "requested_date": {"type": "string", "format": "date", "description": "Service date (extract user as it is. Example: next Monday, January 1, 2022, etc.)"}, "size": {"type": "string", "description": "Pyeongsu or area of ​​the house (flat, square meter)"}}, "required": ["location", "requested_date", "size"]}}}, {"type": "function", "function": {"name": "transferMoney", "description": "Send money to a specific account.", "parameters": {"type": "object", "properties": {"receiver_bank": {"type": "string", "description": "Bank"}, "receiver_account": {"type": "string", "description": "Account number to send"}, "amount": {"type": "number", "description": "Missing money (unit: krw))"}}, "required": ["receiver_bank", "receiver_account", "amount"]}}}, {"type": "function", "function": {"name": "get_stock_price", "description": "Search the current price of a particular stock.", "parameters": {"type": "object", "properties": {"stock_name": {"type": "string", "description": "Stock name to look up"}}, "required": ["stock_name"]}}}, {"type": "function", "function": {"name": "search_flight", "description": "Search for a flight from a specific airport and arriving at a specific airport.", "parameters": {"type": "object", "properties": {"departure_airport": {"type": "string", "description": "Departure airport name (extracted as user expression. Example: Los Angeles International Airport, Gimhae Airport, etc.)"}, "arrival_airport": {"type": "string", "description": "Arrival airport name (extracting as it is, Example: Los Angeles International Airport, Gimhae Airport, etc.)"}, "departure_date": {"type": "string", "description": "Departure Date (YYYY-MM-DD)"}}, "required": ["departure_airport", "arrival_airport", "departure_date"]}}}, {"type": "function", "function": {"name": "getCurrentTimeForLocation", "description": "Provide current time information in certain areas", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Local name to bring time information"}}, "required": ["location"]}}}], "type_of_output": "relevance", "ground_truth": {"role": "assistant", "content": "There is no meeting reservation function."}, "acceptable_arguments": null}
{"serial_num": 39, "category": "REJECT", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "2022-11-11, PM 3:00 Please book a meeting with Ida-young and Min Yu-jin."}], "input_tools": [{"type": "function", "function": {"name": "informLottoNumberByRound", "description": "It is a function that informs the lottery winning number of a specific episode.", "parameters": {"type": "object", "properties": {"round": {"type": "integer", "description": "The round to check the lottery winning number"}}, "required": ["round"]}}}, {"type": "function", "function": {"name": "find_group_or_club", "description": "Provides meetings or club information on certain topics based on the area around the specific location.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Where to find a meeting or club"}, "topic": {"type": "string", "description": "Interest"}}, "required": ["location", "topic"]}}}, {"type": "function", "function": {"name": "FindPrinterError", "description": "Returns the current error status (lack of paper, lack of ink, etc.) of certain printers in the company.", "parameters": {"type": "object", "properties": {"PrinterLocation": {"type": "string", "description": "The location of the printer to identify the error condition"}}, "required": ["PrinterLocation"]}}}, {"type": "function", "function": {"name": "DeleteEvent", "description": "Delete schedule from calendar", "parameters": {"type": "object", "properties": {"event_id": {"type": "string", "description": "ID of the schedule to be deleted"}}, "required": ["event_id"]}}}, {"type": "function", "function": {"name": "calculate_bmi", "description": "Calculation of human body mass index (BMI)", "parameters": {"type": "object", "properties": {"height": {"type": "number", "description": "Centimeter key"}, "weight": {"type": "number", "description": "Kilogram unit weight"}}, "required": ["height", "weight"]}}}], "type_of_output": "relevance", "ground_truth": {"role": "assistant", "content": "There is no meeting reservation function."}, "acceptable_arguments": null}
{"serial_num": 40, "category": "REJECT", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "I want to book a meeting. Date and time are at 9 am on August 31, 23. Participants are Cha Hyun -woo and Shin Seung -yeop."}], "input_tools": [{"type": "function", "function": {"name": "calculateIdealWeight", "description": "Ideal weight calculation using Lorentz formula", "parameters": {"type": "object", "properties": {"height": {"type": "number", "description": "Centimeter key"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["height", "gender"]}}}, {"type": "function", "function": {"name": "registerFriendBirthday", "description": "A function that registers a friend's name and birthday information", "parameters": {"type": "object", "properties": {"friendName": {"type": "string", "description": "A friend's name to register"}, "birthday": {"type": "string", "description": "The birthday of a friend to register (YYYY-MM-DD format)"}}, "required": ["friendName", "birthday"]}}}, {"type": "function", "function": {"name": "add_contact", "description": "Register a new contact.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "Name to register a contact"}, "phone": {"type": "string", "description": "phone number"}, "email": {"type": "string", "description": "Email address"}}, "required": ["name"]}}}, {"type": "function", "function": {"name": "generate_syntax_tree_from_text", "description": "Create a syntax tree for a given text", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Text to create a syntax tree"}}, "required": ["text"]}}}, {"type": "function", "function": {"name": "count_words", "description": "Calculation of words in a given text (sentence or paragraph)", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Cell text"}}, "required": ["text"]}}}], "type_of_output": "relevance", "ground_truth": {"role": "assistant", "content": "There is no meeting reservation function."}, "acceptable_arguments": null}
{"serial_num": 41, "category": "REJECT", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Look up for the movie screening schedule of CGV Pangyo on October 31, 2022."}], "input_tools": [{"type": "function", "function": {"name": "informLottoNumberByRound", "description": "It is a function that informs the lottery winning number of a specific episode.", "parameters": {"type": "object", "properties": {"round": {"type": "integer", "description": "The round to check the lottery winning number"}}, "required": ["round"]}}}, {"type": "function", "function": {"name": "getCurrentKoreaTime", "description": "Currently, the time of Korea is returned to year-month-day: minor: second format.", "parameters": {}}}, {"type": "function", "function": {"name": "translate_text_to_english", "description": "Translate the given text into English", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Text translation in English"}}, "required": ["text"]}}}, {"type": "function", "function": {"name": "informLottoWinnerPrizeByRound", "description": "It is a function that informs the amount of lottery winnings of a specific episode.", "parameters": {"type": "object", "properties": {"round": {"type": "integer", "description": "A round that wants to check the amount of lottery winnings (e.g. 1001)"}}, "required": ["round"]}}}, {"type": "function", "function": {"name": "informLottoWinnerPrizeByDate", "description": "It is a function that informs the amount of lottery winnings on a specific date.", "parameters": {"type": "object", "properties": {"date": {"type": "string", "description": "Date to check the amount of lottery winnings (e.g., March 4)"}}, "required": ["date"]}}}], "type_of_output": "relevance", "ground_truth": {"role": "assistant", "content": "There is no function to directly view the screening schedule of a specific cinema."}, "acceptable_arguments": null}
{"serial_num": 42, "category": "REJECT", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "23.1.13 Lotte Cinema Wirye Movie Timetable."}], "input_tools": [{"type": "function", "function": {"name": "get_currency_trend_3months", "description": "Provides exchange rate fluctuations for the last three months for the designated currency", "parameters": {"type": "object", "properties": {"currency_code": {"type": "string", "description": "Code of currency to bring the exchange rate fluctuations (e.g. USD, EUR, JPY)"}}, "required": ["currency_code"]}}}, {"type": "function", "function": {"name": "getHistoricalMinMaxTemperature", "description": "In the past, we look up for the minimum temperature and the highest temperature in certain regions.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "The name of the area to be searched"}, "date": {"type": "string", "description": "Date to look up ('YYYY-MM-DD' format)"}}, "required": ["location", "date"]}}}, {"type": "function", "function": {"name": "add_item_to_shopping_cart", "description": "Add new products to the shopping cart", "parameters": {"type": "object", "properties": {"product_id": {"type": "string", "description": "The unique identifier of the product you want to add"}, "quantity": {"type": "integer", "description": "Quantity"}}, "required": ["product_id", "quantity"]}}}, {"type": "function", "function": {"name": "calculateBMR", "description": "Basal metabolic rate calculation", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}, "height": {"type": "number", "description": "Centimeter key"}, "age": {"type": "integer", "description": "age"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["weight", "height", "age", "gender"]}}}, {"type": "function", "function": {"name": "schedule_meeting", "description": "Book a meeting.", "parameters": {"type": "object", "properties": {"participants": {"type": "string", "description": "Participant list (if there are multiple participants, it is divided into a comma (,).)"}, "date_time": {"type": "string", "description": "Date and time of meeting (yyyy-mm-dd hh: mm format)"}}, "required": ["participants", "date_time"]}}}], "type_of_output": "relevance", "ground_truth": {"role": "assistant", "content": "There is no function to directly view the screening schedule of a specific cinema."}, "acceptable_arguments": null}
{"serial_num": 43, "category": "REJECT", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Lotte Cinema World Tower Search for the movie screening schedule on April 5, 24."}], "input_tools": [{"type": "function", "function": {"name": "calculate_tax", "description": "Calculate the tax on the given amount.", "parameters": {"type": "object", "properties": {"amount": {"type": "number", "description": "Prior to calculating"}, "tax_rate": {"type": "number", "description": "Tax rate to be applied (percentage)"}}, "required": ["amount", "tax_rate"]}}}, {"type": "function", "function": {"name": "book_concert_tickets", "description": "Tickets for specific performances are made using external ticketing systems.", "parameters": {"type": "object", "properties": {"concert_name": {"type": "string", "description": "The name of the performance you want to book"}, "number_of_tickets": {"type": "integer", "description": "Quantity"}, "seat_type": {"type": "string", "description": "Selected seat type (e.g. VIP, general)"}}, "required": ["concert_name", "number_of_tickets", "seat_type"]}}}, {"type": "function", "function": {"name": "getDailyNewsHeadlines", "description": "Today's main news headline is provided.", "parameters": {"type": "object", "properties": {}, "required": []}}}, {"type": "function", "function": {"name": "convert_krw_to_usd", "description": "Converted Korean money (KRW) to USD (USD)", "parameters": {"type": "object", "properties": {"amount_krw": {"type": "number", "description": "Korean money (KRW) amount to convert"}, "exchange_rate_krw_to_usd": {"type": "number", "description": "Exchange rate from KRW to USD"}}, "required": ["amount_krw", "exchange_rate_krw_to_usd"]}}}, {"type": "function", "function": {"name": "calculate_bmi", "description": "Calculation of human body mass index (BMI)", "parameters": {"type": "object", "properties": {"height": {"type": "number", "description": "Centimeter key"}, "weight": {"type": "number", "description": "Kilogram unit weight"}}, "required": ["height", "weight"]}}}], "type_of_output": "relevance", "ground_truth": {"role": "assistant", "content": "There is no function to directly view the screening schedule of a specific cinema."}, "acceptable_arguments": null}
{"serial_num": 44, "category": "REJECT", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Megabox Mok -dong 2022/12/25 Check the movie screening schedule."}], "input_tools": [{"type": "function", "function": {"name": "convert_pyeong_to_squaremeter", "description": "Convert it to \"평\"을 입력받아서, \"제곱미터\".", "parameters": {"type": "object", "properties": {"pyeong": {"type": "number", "description": "Pyeongsu to be transformed"}}, "required": ["pyeong"]}}}, {"type": "function", "function": {"name": "recommendLuckMessage", "description": "It is a function that recommends lucky words randomly.", "parameters": {"type": "object", "properties": {}, "required": []}}}, {"type": "function", "function": {"name": "generate_syntax_tree_from_text", "description": "Create a syntax tree for a given text", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Text to create a syntax tree"}}, "required": ["text"]}}}, {"type": "function", "function": {"name": "calculateBMR", "description": "Basal metabolic rate calculation", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}, "height": {"type": "number", "description": "Centimeter key"}, "age": {"type": "integer", "description": "age"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["weight", "height", "age", "gender"]}}}, {"type": "function", "function": {"name": "find_group_or_club", "description": "Provides meetings or club information on certain topics based on the area around the specific location.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Where to find a meeting or club"}, "topic": {"type": "string", "description": "Interest"}}, "required": ["location", "topic"]}}}], "type_of_output": "relevance", "ground_truth": {"role": "assistant", "content": "There is no function to directly view the screening schedule of a specific cinema."}, "acceptable_arguments": null}
{"serial_num": 45, "category": "REJECT", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Will it be very blocked from Yangjae Station to Pangyo Station? I'm curious about the traffic situation"}], "input_tools": [{"type": "function", "function": {"name": "add_item_to_shopping_cart", "description": "Add new products to the shopping cart", "parameters": {"type": "object", "properties": {"product_id": {"type": "string", "description": "The unique identifier of the product you want to add"}, "quantity": {"type": "integer", "description": "Quantity"}}, "required": ["product_id", "quantity"]}}}, {"type": "function", "function": {"name": "getCurrentKoreaTime", "description": "Currently, the time of Korea is returned to year-month-day: minor: second format.", "parameters": {}}}, {"type": "function", "function": {"name": "discover_new_releases_hiphop", "description": "Provides the latest music release information of the hip -hop genre", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "calculateBMR", "description": "Basal metabolic rate calculation", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}, "height": {"type": "number", "description": "Centimeter key"}, "age": {"type": "integer", "description": "age"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["weight", "height", "age", "gender"]}}}, {"type": "function", "function": {"name": "generate_playlist_based_on_favorite_artist", "description": "Create customized playlist based on preferred artists", "parameters": {"type": "object", "properties": {"artist_name": {"type": "string", "description": "The name of the artist that users prefer"}}, "required": ["artist_name"]}}}], "type_of_output": "relevance", "ground_truth": {"role": "assistant", "content": "There is no function to provide real -time traffic information."}, "acceptable_arguments": null}
{"serial_num": 46, "category": "REJECT", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Can you tell me about the traffic situation from Juan -dong, Nam -gu, Incheon to Dangsan -dong, Yeongdeungpo -gu, Seoul?"}], "input_tools": [{"type": "function", "function": {"name": "convert_to_uppercase", "description": "Converted strings to capital letters", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "String"}}, "required": ["text"]}}}, {"type": "function", "function": {"name": "OrderPizza", "description": "Order pizza.", "parameters": {"type": "object", "properties": {"PizzaType": {"type": "string", "description": "Pizza"}, "size": {"type": "string", "description": "Pizza size (extracted as it is, example: Small, L, Medium, etc.)"}, "quantity": {"type": "integer", "description": "Order quantity"}}, "required": ["PizzaType", "size", "quantity"]}}}, {"type": "function", "function": {"name": "calculate_discount", "description": "Input the original price and discount rate (percentage unit) to calculate the discounted price.", "parameters": {"type": "object", "properties": {"original_price": {"type": "number", "description": "Original price of the product"}, "discount_percentage": {"type": "number", "description": "Discount rate to be applied (for example, 20% discount)"}}, "required": ["original_price", "discount_percentage"]}}}, {"type": "function", "function": {"name": "create_user", "description": "Create a new user account.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "User's name"}, "email": {"type": "string", "description": "User's email address"}, "password": {"type": "string", "description": "User's password"}}, "required": ["name", "email", "password"]}}}, {"type": "function", "function": {"name": "informLottoWinnerPrizeByRound", "description": "It is a function that informs the amount of lottery winnings of a specific episode.", "parameters": {"type": "object", "properties": {"round": {"type": "integer", "description": "A round that wants to check the amount of lottery winnings (e.g. 1001)"}}, "required": ["round"]}}}], "type_of_output": "relevance", "ground_truth": {"role": "assistant", "content": "There is no function to provide real -time traffic information."}, "acceptable_arguments": null}
{"serial_num": 47, "category": "REJECT", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "I think there are a lot of cars on weekends."}], "input_tools": [{"type": "function", "function": {"name": "schedule_laundry_pickup", "description": "Apply for a service to collect laundry.", "parameters": {"type": "object", "properties": {"pickup_location": {"type": "string", "description": "Extract the location of the user as it is to collect the laundry. (Example: House, 101 -dong 102, etc."}, "pickup_date": {"type": "string", "description": "Extract the laundry collection date as it is. (Example: next Monday, January 1, 2022, etc.)"}, "pickup_time": {"type": "string", "description": "Extract the time to collect the laundry as it is. (Example: 2 pm, 7 pm, etc.)"}}, "required": ["pickup_location", "pickup_date", "pickup_time"]}}}, {"type": "function", "function": {"name": "sendEmail", "description": "Send email to a specific email address.", "parameters": {"type": "object", "properties": {"receiverEmail": {"type": "string", "description": "EMAIL address of the recipient"}, "subject": {"type": "string", "description": "Email title"}, "body": {"type": "string", "description": "Email content"}}, "required": ["receiverEmail", "subject", "body"]}}}, {"type": "function", "function": {"name": "count_characters", "description": "Returns the total number of characters from a given string", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Cell string"}}, "required": ["text"]}}}, {"type": "function", "function": {"name": "count_lowercase_letters", "description": "The number of lowercase in the string", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Cell string for lowercase"}}, "required": ["text"]}}}, {"type": "function", "function": {"name": "convertTimeBetweenTimezones", "description": "Convert time to another time in one time.", "parameters": {"type": "object", "properties": {"originalTime": {"type": "string", "description": "Reference time to convert (format HH: mm)"}, "fromTimezone": {"type": "string", "description": "Standard time zone (region name)"}, "toTimezone": {"type": "string", "description": "Time to be converted (region name)"}}, "required": ["originalTime", "fromTimezone", "toTimezone"]}}}], "type_of_output": "relevance", "ground_truth": {"role": "assistant", "content": "There is no function to provide real -time traffic information."}, "acceptable_arguments": null}
{"serial_num": 48, "category": "REJECT", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Please let me know the road situation on the way to Hallim -eup, Jeju -si."}], "input_tools": [{"type": "function", "function": {"name": "count_words", "description": "Calculation of words in a given text (sentence or paragraph)", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Cell text"}}, "required": ["text"]}}}, {"type": "function", "function": {"name": "upload_artwork_to_online_site", "description": "Upload your work to the online art platform.", "parameters": {"type": "object", "properties": {"art_image_url": {"type": "string", "description": "The image of the work to be uploaded URL"}, "title": {"type": "string", "description": "Title of the work"}, "description": {"type": "string", "description": "A brief explanation of the work"}}, "required": ["art_image_url", "title", "description"]}}}, {"type": "function", "function": {"name": "calculateTimeDifference", "description": "The time difference between the two regions is returned every time.", "parameters": {"type": "object", "properties": {"fromTimezone": {"type": "string", "description": "Time zone area"}, "toTimezone": {"type": "string", "description": "Time zone area for comparison"}}, "required": ["fromTimezone", "toTimezone"]}}}, {"type": "function", "function": {"name": "translate_text_to_english", "description": "Translate the given text into English", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Text translation in English"}}, "required": ["text"]}}}, {"type": "function", "function": {"name": "recommendLottoNumber", "description": "It is a function that recommends a lotto number randomly.", "parameters": {"type": "object", "properties": {}, "required": []}}}], "type_of_output": "relevance", "ground_truth": {"role": "assistant", "content": "There is no function to provide real -time traffic information."}, "acceptable_arguments": null}
{"serial_num": 49, "category": "REJECT", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "I'm going to go on a business trip, can you make a reservation for Seoul next Monday?"}], "input_tools": [{"type": "function", "function": {"name": "DeleteEvent", "description": "Delete schedule from calendar", "parameters": {"type": "object", "properties": {"event_id": {"type": "string", "description": "ID of the schedule to be deleted"}}, "required": ["event_id"]}}}, {"type": "function", "function": {"name": "upload_artwork_to_online_site", "description": "Upload your work to the online art platform.", "parameters": {"type": "object", "properties": {"art_image_url": {"type": "string", "description": "The image of the work to be uploaded URL"}, "title": {"type": "string", "description": "Title of the work"}, "description": {"type": "string", "description": "A brief explanation of the work"}}, "required": ["art_image_url", "title", "description"]}}}, {"type": "function", "function": {"name": "getWeatherForecastForNext7Days", "description": "For the designated area, we offer a 7 -day weather forecast, including today.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "The name of the area where the weather forecast"}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "calculateLifeExpectancy", "description": "BMI, physical activity level, and smoking status estimates average life expectancy", "parameters": {"type": "object", "properties": {"BMI": {"type": "number", "description": "Body mass index (BMI)"}, "activityLevel": {"type": "string", "description": "Physical activity level (low, normal, high choice)"}, "smokingStatus": {"type": "boolean", "description": "Smoking state (smoking = true, non -smoking = false)"}}, "required": ["BMI", "activityLevel", "smokingStatus"]}}}, {"type": "function", "function": {"name": "informLottoWinnerPrizeByDate", "description": "It is a function that informs the amount of lottery winnings on a specific date.", "parameters": {"type": "object", "properties": {"date": {"type": "string", "description": "Date to check the amount of lottery winnings (e.g., March 4)"}}, "required": ["date"]}}}], "type_of_output": "relevance", "ground_truth": {"role": "assistant", "content": "There is no ability to book a business trip."}, "acceptable_arguments": null}
{"serial_num": 50, "category": "REJECT", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "On May 25, 2023, I want to make a reservation for a business trip."}], "input_tools": [{"type": "function", "function": {"name": "get_stock_price", "description": "Search the current price of a particular stock.", "parameters": {"type": "object", "properties": {"stock_name": {"type": "string", "description": "Stock name to look up"}}, "required": ["stock_name"]}}}, {"type": "function", "function": {"name": "search_contact", "description": "Search for a list of contacts in the name of a person and bring his phone number and email address.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "The name of a person who wants to check the contact"}}, "required": ["name"]}}}, {"type": "function", "function": {"name": "informTyphoon", "description": "It provides location information of the current typhoon.", "parameters": {"type": "object", "properties": {"typhoonName": {"type": "string", "description": "The name of the typhoon to look upon"}}, "required": ["typhoonName"]}}}, {"type": "function", "function": {"name": "getDailyNewsHeadlines", "description": "Today's main news headline is provided.", "parameters": {"type": "object", "properties": {}, "required": []}}}, {"type": "function", "function": {"name": "getCryptocurrencyPrice", "description": "Inquire the current price of a specific cryptocurrency.", "parameters": {"type": "object", "properties": {"cryptocurrency": {"type": "string", "description": "Cryptocurrency name to view the price"}}, "required": ["cryptocurrency"]}}}], "type_of_output": "relevance", "ground_truth": {"role": "assistant", "content": "There is no ability to book a business trip."}, "acceptable_arguments": null}
{"serial_num": 51, "category": "REJECT", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "I'm going to go on a business trip tomorrow, can you make a reservation to Gangneung?"}], "input_tools": [{"type": "function", "function": {"name": "add_item_to_shopping_cart", "description": "Add new products to the shopping cart", "parameters": {"type": "object", "properties": {"product_id": {"type": "string", "description": "The unique identifier of the product you want to add"}, "quantity": {"type": "integer", "description": "Quantity"}}, "required": ["product_id", "quantity"]}}}, {"type": "function", "function": {"name": "searchFriendBirthday", "description": "A function that enters a friend's name and searches for birthday information", "parameters": {"type": "object", "properties": {"friendName": {"type": "string", "description": "A friend's name to search"}}, "required": ["friendName"]}}}, {"type": "function", "function": {"name": "create_playlist", "description": "Create a music playlist that fits the user's tastes and conditions", "parameters": {"type": "object", "properties": {"genre": {"type": "string", "description": "The genre of music to be included in the playlist"}, "mood": {"type": "string", "description": "Playlist's mood or atmosphere"}, "count": {"type": "integer", "description": "The number of songs to be included in the playlist"}, "include_live": {"type": "boolean", "description": "Live version songs include"}}, "required": ["genre", "mood", "count"]}}}, {"type": "function", "function": {"name": "getHistoricalMinMaxTemperature", "description": "In the past, we look up for the minimum temperature and the highest temperature in certain regions.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "The name of the area to be searched"}, "date": {"type": "string", "description": "Date to look up ('YYYY-MM-DD' format)"}}, "required": ["location", "date"]}}}, {"type": "function", "function": {"name": "generate_syntax_tree_from_text", "description": "Create a syntax tree for a given text", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Text to create a syntax tree"}}, "required": ["text"]}}}], "type_of_output": "relevance", "ground_truth": {"role": "assistant", "content": "There is no ability to book a business trip."}, "acceptable_arguments": null}
{"serial_num": 52, "category": "REJECT", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "On March 10, I am on a business trip to Jeju Island, but I need a car reservation."}], "input_tools": [{"type": "function", "function": {"name": "calculateIdealWeight", "description": "Ideal weight calculation using Lorentz formula", "parameters": {"type": "object", "properties": {"height": {"type": "number", "description": "Centimeter key"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["height", "gender"]}}}, {"type": "function", "function": {"name": "getDailyNewsHeadlines", "description": "Today's main news headline is provided.", "parameters": {"type": "object", "properties": {}, "required": []}}}, {"type": "function", "function": {"name": "getCurrentTopSeries", "description": "We offer the current popular TV series rankings", "parameters": {"type": "object", "properties": {}, "required": []}}}, {"type": "function", "function": {"name": "getCryptocurrencyPrice", "description": "Inquire the current price of a specific cryptocurrency.", "parameters": {"type": "object", "properties": {"cryptocurrency": {"type": "string", "description": "Cryptocurrency name to view the price"}}, "required": ["cryptocurrency"]}}}, {"type": "function", "function": {"name": "calculateCaloriesBurnedByWalking", "description": "Calculate the amount of calories consumed while walking on a given street.", "parameters": {"type": "object", "properties": {"distance": {"type": "number", "description": "Walking distance (kilometers)"}, "weight": {"type": "number", "description": "User's weight (kilogram unit)"}}, "required": ["distance", "weight"]}}}], "type_of_output": "relevance", "ground_truth": {"role": "assistant", "content": "There is no ability to book a business trip."}, "acceptable_arguments": null}
{"serial_num": 53, "category": "REJECT", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Compare the price of 2,500 A4 sheets in various stores."}], "input_tools": [{"type": "function", "function": {"name": "search_contact", "description": "Search for a list of contacts in the name of a person and bring his phone number and email address.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "The name of a person who wants to check the contact"}}, "required": ["name"]}}}, {"type": "function", "function": {"name": "CheckTaxRefund", "description": "Search for the user's tax refund.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "The name of the tax paymenter"}, "birth": {"type": "string", "description": "Date of birth of tax payers (YYYY-MM-DD)"}, "phone_number": {"type": "string", "description": "Contact of tax payers"}}, "required": ["name", "birth", "phone_number"]}}}, {"type": "function", "function": {"name": "check_traffic_status", "description": "Inquire the current traffic situation on a particular path.", "parameters": {"type": "object", "properties": {"start_location": {"type": "string", "description": "Departure"}, "end_location": {"type": "string", "description": "Arrival point"}}, "required": ["start_location", "end_location"]}}}, {"type": "function", "function": {"name": "informLottoWinnerPrizeByRound", "description": "It is a function that informs the amount of lottery winnings of a specific episode.", "parameters": {"type": "object", "properties": {"round": {"type": "integer", "description": "A round that wants to check the amount of lottery winnings (e.g. 1001)"}}, "required": ["round"]}}}, {"type": "function", "function": {"name": "reserve_restaurant", "description": "Reservation of the restaurant with the information provided by the user. Example) Please make a reservation at 6 pm tonight", "parameters": {"type": "object", "properties": {"store": {"type": "string", "description": "Restaurant name"}, "reservationDate": {"type": "string", "description": "Reservation date (YYYY-MM-DD)"}, "reservationTime": {"type": "string", "description": "Reservation time (hh: mm)"}, "numberOfPeople": {"type": "integer", "description": "Number of reservations"}}, "required": ["store", "reservationDate", "reservationTime", "numberOfPeople"]}}}], "type_of_output": "relevance", "ground_truth": {"role": "assistant", "content": "There is no price comparison for certain products."}, "acceptable_arguments": null}
{"serial_num": 54, "category": "REJECT", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "The company is trying to order 200 black ballpoint pens, but can you find out where you are the cheapest?"}], "input_tools": [{"type": "function", "function": {"name": "get_rainfall_probability", "description": "It brings probability information in a particular area.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Local name"}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "CallTaxi", "description": "Call a taxi from a specific location.", "parameters": {"type": "object", "properties": {"pickup_location": {"type": "string", "description": "Departure location (address, station name, building name, etc.)"}, "destination": {"type": "string", "description": "Arrival location (address, station name, building name, etc.)"}}, "required": ["pickup_location", "destination"]}}}, {"type": "function", "function": {"name": "get_currency_trend_3months", "description": "Provides exchange rate fluctuations for the last three months for the designated currency", "parameters": {"type": "object", "properties": {"currency_code": {"type": "string", "description": "Code of currency to bring the exchange rate fluctuations (e.g. USD, EUR, JPY)"}}, "required": ["currency_code"]}}}, {"type": "function", "function": {"name": "create_user", "description": "Create a new user account.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "User's name"}, "email": {"type": "string", "description": "User's email address"}, "password": {"type": "string", "description": "User's password"}}, "required": ["name", "email", "password"]}}}, {"type": "function", "function": {"name": "getDailyNewsHeadlines", "description": "Today's main news headline is provided.", "parameters": {"type": "object", "properties": {}, "required": []}}}], "type_of_output": "relevance", "ground_truth": {"role": "assistant", "content": "There is no price comparison for certain products."}, "acceptable_arguments": null}
{"serial_num": 55, "category": "REJECT", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "You will need 50 boardmaccar blue by tomorrow. Compare the prices of various places to tell me the lowest price"}], "input_tools": [{"type": "function", "function": {"name": "find_nearest_emergency_room_by_location", "description": "Based on a specific location, it provides the location and information of the nearby emergency room.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Current location (example: station, address, building name, etc.)"}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "getCryptocurrencyPrice", "description": "Inquire the current price of a specific cryptocurrency.", "parameters": {"type": "object", "properties": {"cryptocurrency": {"type": "string", "description": "Cryptocurrency name to view the price"}}, "required": ["cryptocurrency"]}}}, {"type": "function", "function": {"name": "create_playlist", "description": "Create a music playlist that fits the user's tastes and conditions", "parameters": {"type": "object", "properties": {"genre": {"type": "string", "description": "The genre of music to be included in the playlist"}, "mood": {"type": "string", "description": "Playlist's mood or atmosphere"}, "count": {"type": "integer", "description": "The number of songs to be included in the playlist"}, "include_live": {"type": "boolean", "description": "Live version songs include"}}, "required": ["genre", "mood", "count"]}}}, {"type": "function", "function": {"name": "informTyphoon", "description": "It provides location information of the current typhoon.", "parameters": {"type": "object", "properties": {"typhoonName": {"type": "string", "description": "The name of the typhoon to look upon"}}, "required": ["typhoonName"]}}}, {"type": "function", "function": {"name": "informLottoNumberByRound", "description": "It is a function that informs the lottery winning number of a specific episode.", "parameters": {"type": "object", "properties": {"round": {"type": "integer", "description": "The round to check the lottery winning number"}}, "required": ["round"]}}}], "type_of_output": "relevance", "ground_truth": {"role": "assistant", "content": "There is no price comparison for certain products."}, "acceptable_arguments": null}
{"serial_num": 56, "category": "REJECT", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "I'm trying to buy 10 staplers. Can you compare the prices of various retailers?"}], "input_tools": [{"type": "function", "function": {"name": "get_movie_details", "description": "Genre, directors, actors, plot, and screening time provide detailed information.", "parameters": {"type": "object", "properties": {"title": {"type": "string", "description": "Film title"}, "year": {"type": "integer", "description": "Movie release year"}}, "required": ["title"]}}}, {"type": "function", "function": {"name": "recommendLuckMessage", "description": "It is a function that recommends lucky words randomly.", "parameters": {"type": "object", "properties": {}, "required": []}}}, {"type": "function", "function": {"name": "FindPrinterError", "description": "Returns the current error status (lack of paper, lack of ink, etc.) of certain printers in the company.", "parameters": {"type": "object", "properties": {"PrinterLocation": {"type": "string", "description": "The location of the printer to identify the error condition"}}, "required": ["PrinterLocation"]}}}, {"type": "function", "function": {"name": "add_contact", "description": "Register a new contact.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "Name to register a contact"}, "phone": {"type": "string", "description": "phone number"}, "email": {"type": "string", "description": "Email address"}}, "required": ["name"]}}}, {"type": "function", "function": {"name": "add_movie_review", "description": "Add a review of a specific movie to the movie scrapbook.", "parameters": {"type": "object", "properties": {"movie_id": {"type": "string", "description": "ID of the movie to add a review"}, "review_text": {"type": "string", "description": "Movie review contents"}}, "required": ["movie_id", "review_text"]}}}], "type_of_output": "relevance", "ground_truth": {"role": "assistant", "content": "There is no price comparison for certain products."}, "acceptable_arguments": null}
{"serial_num": 57, "category": "REJECT", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Find a surf club held in Haeundae, Busan."}], "input_tools": [{"type": "function", "function": {"name": "update_contact", "description": "Update (modify or add) contents of existing contacts.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "Name stored in the current contact"}, "new_name": {"type": "string", "description": "Name to update"}, "new_phone": {"type": "string", "description": "Phone number to update"}, "new_email": {"type": "string", "description": "Email address to be updated"}}, "required": ["name"]}}}, {"type": "function", "function": {"name": "deleteMemo", "description": "Delete the previously stored notes", "parameters": {"type": "object", "properties": {"memo_id": {"type": "string", "description": "A unique identifier of the memo to delete"}}, "required": ["memo_id"]}}}, {"type": "function", "function": {"name": "compare_office_supplies_prices", "description": "Compare office supplies prices of various stores and provide the lowest price information.", "parameters": {"type": "object", "properties": {"product_name": {"type": "string", "description": "Product name that wants to compare prices"}, "quantity": {"type": "integer", "description": "Quantity"}}, "required": ["product_name", "quantity"]}}}, {"type": "function", "function": {"name": "informLottoWinnerPrizeByRound", "description": "It is a function that informs the amount of lottery winnings of a specific episode.", "parameters": {"type": "object", "properties": {"round": {"type": "integer", "description": "A round that wants to check the amount of lottery winnings (e.g. 1001)"}}, "required": ["round"]}}}, {"type": "function", "function": {"name": "calculate_tax", "description": "Calculate the tax on the given amount.", "parameters": {"type": "object", "properties": {"amount": {"type": "number", "description": "Prior to calculating"}, "tax_rate": {"type": "number", "description": "Tax rate to be applied (percentage)"}}, "required": ["amount", "tax_rate"]}}}], "type_of_output": "relevance", "ground_truth": {"role": "assistant", "content": "There is no function to search for meetings in certain areas."}, "acceptable_arguments": null}
{"serial_num": 58, "category": "REJECT", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Find an art class club in Suseong -gu, Daegu."}], "input_tools": [{"type": "function", "function": {"name": "calculateLifeExpectancy", "description": "BMI, physical activity level, and smoking status estimates average life expectancy", "parameters": {"type": "object", "properties": {"BMI": {"type": "number", "description": "Body mass index (BMI)"}, "activityLevel": {"type": "string", "description": "Physical activity level (low, normal, high choice)"}, "smokingStatus": {"type": "boolean", "description": "Smoking state (smoking = true, non -smoking = false)"}}, "required": ["BMI", "activityLevel", "smokingStatus"]}}}, {"type": "function", "function": {"name": "calculateTimeDifference", "description": "The time difference between the two regions is returned every time.", "parameters": {"type": "object", "properties": {"fromTimezone": {"type": "string", "description": "Time zone area"}, "toTimezone": {"type": "string", "description": "Time zone area for comparison"}}, "required": ["fromTimezone", "toTimezone"]}}}, {"type": "function", "function": {"name": "recommendLuckMessage", "description": "It is a function that recommends lucky words randomly.", "parameters": {"type": "object", "properties": {}, "required": []}}}, {"type": "function", "function": {"name": "informLottoWinnerPrizeByDate", "description": "It is a function that informs the amount of lottery winnings on a specific date.", "parameters": {"type": "object", "properties": {"date": {"type": "string", "description": "Date to check the amount of lottery winnings (e.g., March 4)"}}, "required": ["date"]}}}, {"type": "function", "function": {"name": "getCurrentTopSeries", "description": "We offer the current popular TV series rankings", "parameters": {"type": "object", "properties": {}, "required": []}}}], "type_of_output": "relevance", "ground_truth": {"role": "assistant", "content": "There is no function to search for meetings in certain areas."}, "acceptable_arguments": null}
{"serial_num": 59, "category": "REJECT", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Can you find if there is a boxing meeting in Gwangju Mine -gu?"}], "input_tools": [{"type": "function", "function": {"name": "get_exchange_rate", "description": "Bring the exchange rate between the two currencies.", "parameters": {"type": "object", "properties": {"base_currency": {"type": "string", "description": "The Currency to Convert from."}, "target_currency": {"type": "string", "description": "The current to convert to."}}, "required": ["base_currency", "target_currency"]}}}, {"type": "function", "function": {"name": "search_contact", "description": "Search for a list of contacts in the name of a person and bring his phone number and email address.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "The name of a person who wants to check the contact"}}, "required": ["name"]}}}, {"type": "function", "function": {"name": "calculateDday", "description": "A function that inputs a specific date and calculates the remaining days or days left from today", "parameters": {"type": "object", "properties": {"eventDate": {"type": "string", "description": "Date of the event (yyyy-mm-DD)"}}, "required": ["eventDate"]}}}, {"type": "function", "function": {"name": "calculate_bmi", "description": "Calculation of human body mass index (BMI)", "parameters": {"type": "object", "properties": {"height": {"type": "number", "description": "Centimeter key"}, "weight": {"type": "number", "description": "Kilogram unit weight"}}, "required": ["height", "weight"]}}}, {"type": "function", "function": {"name": "get_rainfall_probability", "description": "It brings probability information in a particular area.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Local name"}}, "required": ["location"]}}}], "type_of_output": "relevance", "ground_truth": {"role": "assistant", "content": "There is no function to search for meetings in certain areas."}, "acceptable_arguments": null}
{"serial_num": 60, "category": "REJECT", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "I want to find out the Java programming meeting. The area is Seocho -gu."}], "input_tools": [{"type": "function", "function": {"name": "informLottoWinnerPrizeByDate", "description": "It is a function that informs the amount of lottery winnings on a specific date.", "parameters": {"type": "object", "properties": {"date": {"type": "string", "description": "Date to check the amount of lottery winnings (e.g., March 4)"}}, "required": ["date"]}}}, {"type": "function", "function": {"name": "getMonthlyBoxOfficeRanking", "description": "It offers a monthly box office ranking for the designated year and month.", "parameters": {"type": "object", "properties": {"year": {"type": "string", "description": "The year to look up (yyyy format)"}, "month": {"type": "string", "description": "Month to look up (MM format)"}}, "required": ["year", "month"]}}}, {"type": "function", "function": {"name": "informTyphoon", "description": "It provides location information of the current typhoon.", "parameters": {"type": "object", "properties": {"typhoonName": {"type": "string", "description": "The name of the typhoon to look upon"}}, "required": ["typhoonName"]}}}, {"type": "function", "function": {"name": "convert_to_uppercase", "description": "Converted strings to capital letters", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "String"}}, "required": ["text"]}}}, {"type": "function", "function": {"name": "generate_random_special_chars", "description": "Randomly return by selecting 5 special characters randomly from a special character set.", "parameters": {"type": "object", "properties": {}, "required": []}}}], "type_of_output": "relevance", "ground_truth": {"role": "assistant", "content": "There is no function to search for meetings in certain areas."}, "acceptable_arguments": null}
{"serial_num": 61, "category": "REJECT", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Please register Park Seo -yeon's birthday. It is March 15, 1995 ~~~"}], "input_tools": [{"type": "function", "function": {"name": "getCurrentUTCTime", "description": "We offer current UTC time.", "parameters": {}}}, {"type": "function", "function": {"name": "count_characters", "description": "Returns the total number of characters from a given string", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Cell string"}}, "required": ["text"]}}}, {"type": "function", "function": {"name": "search_flight", "description": "Search for a flight from a specific airport and arriving at a specific airport.", "parameters": {"type": "object", "properties": {"departure_airport": {"type": "string", "description": "Departure airport name (extracted as user expression. Example: Los Angeles International Airport, Gimhae Airport, etc.)"}, "arrival_airport": {"type": "string", "description": "Arrival airport name (extracting as it is, Example: Los Angeles International Airport, Gimhae Airport, etc.)"}, "departure_date": {"type": "string", "description": "Departure Date (YYYY-MM-DD)"}}, "required": ["departure_airport", "arrival_airport", "departure_date"]}}}, {"type": "function", "function": {"name": "update_item_quantity_in_shopping_cart", "description": "Update the quantity of specific products in the shopping cart", "parameters": {"type": "object", "properties": {"user_id": {"type": "string", "description": "User's unique identifier"}, "product_id": {"type": "string", "description": "A unique identifier of products that want to update the quantity"}, "new_quantity": {"type": "integer", "description": "New quantity to update"}}, "required": ["user_id", "product_id", "new_quantity"]}}}, {"type": "function", "function": {"name": "calculateTimeDifference", "description": "The time difference between the two regions is returned every time.", "parameters": {"type": "object", "properties": {"fromTimezone": {"type": "string", "description": "Time zone area"}, "toTimezone": {"type": "string", "description": "Time zone area for comparison"}}, "required": ["fromTimezone", "toTimezone"]}}}], "type_of_output": "relevance", "ground_truth": {"role": "assistant", "content": "In fact, it does not provide the ability to register a schedule."}, "acceptable_arguments": null}
{"serial_num": 62, "category": "REJECT", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Choi Yua 20050109 Birthday Please register"}], "input_tools": [{"type": "function", "function": {"name": "recommendLottoNumber", "description": "It is a function that recommends a lotto number randomly.", "parameters": {"type": "object", "properties": {}, "required": []}}}, {"type": "function", "function": {"name": "search_flight", "description": "Search for a flight from a specific airport and arriving at a specific airport.", "parameters": {"type": "object", "properties": {"departure_airport": {"type": "string", "description": "Departure airport name (extracted as user expression. Example: Los Angeles International Airport, Gimhae Airport, etc.)"}, "arrival_airport": {"type": "string", "description": "Arrival airport name (extracting as it is, Example: Los Angeles International Airport, Gimhae Airport, etc.)"}, "departure_date": {"type": "string", "description": "Departure Date (YYYY-MM-DD)"}}, "required": ["departure_airport", "arrival_airport", "departure_date"]}}}, {"type": "function", "function": {"name": "calculateCaloricNeeds", "description": "A function that estimates the average daily calorie consumption", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}, "height": {"type": "number", "description": "Centimeter key"}, "age": {"type": "integer", "description": "age"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["weight", "height", "age", "gender"]}}}, {"type": "function", "function": {"name": "calculate_discount", "description": "Input the original price and discount rate (percentage unit) to calculate the discounted price.", "parameters": {"type": "object", "properties": {"original_price": {"type": "number", "description": "Original price of the product"}, "discount_percentage": {"type": "number", "description": "Discount rate to be applied (for example, 20% discount)"}}, "required": ["original_price", "discount_percentage"]}}}, {"type": "function", "function": {"name": "count_lowercase_letters", "description": "The number of lowercase in the string", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Cell string for lowercase"}}, "required": ["text"]}}}], "type_of_output": "relevance", "ground_truth": {"role": "assistant", "content": "In fact, it does not provide the ability to register a schedule."}, "acceptable_arguments": null}
{"serial_num": 63, "category": "REJECT", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Birthday Registration: Taehee 1989.02.17"}], "input_tools": [{"type": "function", "function": {"name": "search_message_content", "description": "Search for a message containing the keywords specified by the user among the saved messages.", "parameters": {"type": "object", "properties": {"keyword": {"type": "string", "description": "Keyword to search"}, "from_date": {"type": "string", "description": "Date to start searching (optional)"}, "to_date": {"type": "string", "description": "Date to finish the search (optional)"}}, "required": ["keyword"]}}}, {"type": "function", "function": {"name": "track_order", "description": "Inquire an order status (ordering, payment completion, shipping, delivery, etc.) with a given order number and informed the expected shipping date or expected delivery date.", "parameters": {"type": "object", "properties": {"order_id": {"type": "string", "description": "Order number to search"}}, "required": ["order_id"]}}}, {"type": "function", "function": {"name": "generate_image_from_text", "description": "Create a picture based on a given text", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Text to create a picture"}}, "required": ["text"]}}}, {"type": "function", "function": {"name": "getMonthlyBoxOfficeRanking", "description": "It offers a monthly box office ranking for the designated year and month.", "parameters": {"type": "object", "properties": {"year": {"type": "string", "description": "The year to look up (yyyy format)"}, "month": {"type": "string", "description": "Month to look up (MM format)"}}, "required": ["year", "month"]}}}, {"type": "function", "function": {"name": "deleteMemo", "description": "Delete the previously stored notes", "parameters": {"type": "object", "properties": {"memo_id": {"type": "string", "description": "A unique identifier of the memo to delete"}}, "required": ["memo_id"]}}}], "type_of_output": "relevance", "ground_truth": {"role": "assistant", "content": "In fact, it does not provide the ability to register a schedule."}, "acceptable_arguments": null}
{"serial_num": 64, "category": "REJECT", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "December 13, 2000, Hae -eun will register as a birthday !!"}], "input_tools": [{"type": "function", "function": {"name": "convert_eur_to_jpy", "description": "Convert the given Euro (EUR) amount to JPY", "parameters": {"type": "object", "properties": {"amount_eur": {"type": "number", "description": "EUR amount to convert"}}, "required": ["amount_eur"]}}}, {"type": "function", "function": {"name": "convert_pyeong_to_squaremeter", "description": "Convert it to \"평\"을 입력받아서, \"제곱미터\".", "parameters": {"type": "object", "properties": {"pyeong": {"type": "number", "description": "Pyeongsu to be transformed"}}, "required": ["pyeong"]}}}, {"type": "function", "function": {"name": "add_movie_review", "description": "Add a review of a specific movie to the movie scrapbook.", "parameters": {"type": "object", "properties": {"movie_id": {"type": "string", "description": "ID of the movie to add a review"}, "review_text": {"type": "string", "description": "Movie review contents"}}, "required": ["movie_id", "review_text"]}}}, {"type": "function", "function": {"name": "discover_new_releases_hiphop", "description": "Provides the latest music release information of the hip -hop genre", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "getCurrentUTCTime", "description": "We offer current UTC time.", "parameters": {}}}], "type_of_output": "relevance", "ground_truth": {"role": "assistant", "content": "In fact, it does not provide the ability to register a schedule."}, "acceptable_arguments": null}
{"serial_num": 65, "category": "REJECT", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Send email to Lee@email.com. The title is written by '신입 직원 교육 일정 문의'로 하고, 본문엔 '안녕하세요. 신입 직원 교육 일정을 문의 드립니다. 가능한 교육 일정과 내용에 관한 정보를 첨부해 주세요.'."}], "input_tools": [{"type": "function", "function": {"name": "informWeather", "description": "Provide current weather information in a particular area", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Local name to bring weather information"}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "registerFriendBirthday", "description": "A function that registers a friend's name and birthday information", "parameters": {"type": "object", "properties": {"friendName": {"type": "string", "description": "A friend's name to register"}, "birthday": {"type": "string", "description": "The birthday of a friend to register (YYYY-MM-DD format)"}}, "required": ["friendName", "birthday"]}}}, {"type": "function", "function": {"name": "informLottoWinnerPrizeByRound", "description": "It is a function that informs the amount of lottery winnings of a specific episode.", "parameters": {"type": "object", "properties": {"round": {"type": "integer", "description": "A round that wants to check the amount of lottery winnings (e.g. 1001)"}}, "required": ["round"]}}}, {"type": "function", "function": {"name": "informLottoWinnerPrizeByDate", "description": "It is a function that informs the amount of lottery winnings on a specific date.", "parameters": {"type": "object", "properties": {"date": {"type": "string", "description": "Date to check the amount of lottery winnings (e.g., March 4)"}}, "required": ["date"]}}}, {"type": "function", "function": {"name": "generate_playlist_based_on_favorite_artist", "description": "Create customized playlist based on preferred artists", "parameters": {"type": "object", "properties": {"artist_name": {"type": "string", "description": "The name of the artist that users prefer"}}, "required": ["artist_name"]}}}], "type_of_output": "relevance", "ground_truth": {"role": "assistant", "content": "There is no function to send email directly."}, "acceptable_arguments": null}
{"serial_num": 66, "category": "REJECT", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "I want to send '주말 가족 모임 소식'이라는 제목으로 이메일을 보내고 싶어요. 본문에는 '이번주 토요일 저녁 7시에 가족 모임이 잡혔습니다. 일정 체크하셔서 참석 부탁드립니다.'. The address is park@email.com."}], "input_tools": [{"type": "function", "function": {"name": "calculate_discount", "description": "Input the original price and discount rate (percentage unit) to calculate the discounted price.", "parameters": {"type": "object", "properties": {"original_price": {"type": "number", "description": "Original price of the product"}, "discount_percentage": {"type": "number", "description": "Discount rate to be applied (for example, 20% discount)"}}, "required": ["original_price", "discount_percentage"]}}}, {"type": "function", "function": {"name": "generate_random_special_chars", "description": "Randomly return by selecting 5 special characters randomly from a special character set.", "parameters": {"type": "object", "properties": {}, "required": []}}}, {"type": "function", "function": {"name": "calculateBMR", "description": "Basal metabolic rate calculation", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}, "height": {"type": "number", "description": "Centimeter key"}, "age": {"type": "integer", "description": "age"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["weight", "height", "age", "gender"]}}}, {"type": "function", "function": {"name": "getDayOfWeek", "description": "Returns the day of the given date.", "parameters": {"type": "object", "properties": {"date": {"type": "string", "description": "Yyyy-mm-DD format date"}}, "required": ["date"]}}}, {"type": "function", "function": {"name": "search_flight", "description": "Search for a flight from a specific airport and arriving at a specific airport.", "parameters": {"type": "object", "properties": {"departure_airport": {"type": "string", "description": "Departure airport name (extracted as user expression. Example: Los Angeles International Airport, Gimhae Airport, etc.)"}, "arrival_airport": {"type": "string", "description": "Arrival airport name (extracting as it is, Example: Los Angeles International Airport, Gimhae Airport, etc.)"}, "departure_date": {"type": "string", "description": "Departure Date (YYYY-MM-DD)"}}, "required": ["departure_airport", "arrival_airport", "departure_date"]}}}], "type_of_output": "relevance", "ground_truth": {"role": "assistant", "content": "There is no function to send email directly."}, "acceptable_arguments": null}
{"serial_num": 67, "category": "REJECT", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Hwang@email.com Please include '영수증 요청'이라는 제목의 이메일을 보내. 그리고 '지난번에 진행된 거래에 대한 영수증을 보내주시기 바랍니다.'."}], "input_tools": [{"type": "function", "function": {"name": "get_movie_schedule", "description": "Inquire a certain date and screening schedule for a specific movie theater.", "parameters": {"type": "object", "properties": {"movie_date": {"type": "string", "description": "Date to look up (YYYY-MM-DD)"}, "movie_location": {"type": "string", "description": "Cinema to look upon"}}, "required": ["movie_date", "movie_location"]}}}, {"type": "function", "function": {"name": "calculateProteinNeeds", "description": "Daily recommended protein intake considering activity level and weight", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}, "activityLevel": {"type": "string", "description": "Activity level ('low', 'moderate', 'high')"}}, "required": ["weight", "activityLevel"]}}}, {"type": "function", "function": {"name": "setTimer", "description": "Set the timer as much as the user requested.", "parameters": {"type": "object", "properties": {"duration": {"type": "number", "description": "Timer setting time (unit: seconds)"}}, "required": ["duration"]}}}, {"type": "function", "function": {"name": "calculateLifeExpectancy", "description": "BMI, physical activity level, and smoking status estimates average life expectancy", "parameters": {"type": "object", "properties": {"BMI": {"type": "number", "description": "Body mass index (BMI)"}, "activityLevel": {"type": "string", "description": "Physical activity level (low, normal, high choice)"}, "smokingStatus": {"type": "boolean", "description": "Smoking state (smoking = true, non -smoking = false)"}}, "required": ["BMI", "activityLevel", "smokingStatus"]}}}, {"type": "function", "function": {"name": "convert_currency", "description": "Returns a value that exchanges a currency into another currency.", "parameters": {"type": "object", "properties": {"amount": {"type": "number", "description": "Money"}, "from": {"type": "string", "description": "Type of currency currency exchange"}, "to": {"type": "string", "description": "Type of currency exchange results"}}, "required": ["amount", "from", "to"]}}}], "type_of_output": "relevance", "ground_truth": {"role": "assistant", "content": "There is no function to send email directly."}, "acceptable_arguments": null}
{"serial_num": 68, "category": "REJECT", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Will you send an email to cho@email.com? The title is \"연말 평가 관련 자료 요청\"이고 이메일 본문은 \"연말 평가에 필요한 평가 기준과 평가받을 직원 목록을 준비해 주시기 바랍니다.\"!"}], "input_tools": [{"type": "function", "function": {"name": "generate_image_from_text", "description": "Create a picture based on a given text", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Text to create a picture"}}, "required": ["text"]}}}, {"type": "function", "function": {"name": "add_item_to_shopping_cart", "description": "Add new products to the shopping cart", "parameters": {"type": "object", "properties": {"product_id": {"type": "string", "description": "The unique identifier of the product you want to add"}, "quantity": {"type": "integer", "description": "Quantity"}}, "required": ["product_id", "quantity"]}}}, {"type": "function", "function": {"name": "discover_new_releases_hiphop", "description": "Provides the latest music release information of the hip -hop genre", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "compare_it_device_prices", "description": "It compares the price of IT devices from various sellers to provide low sales information.", "parameters": {"type": "object", "properties": {"device_name": {"type": "string", "description": "Name of IT devices that want to compare prices"}}, "required": ["device_name"]}}}, {"type": "function", "function": {"name": "convert_to_lowercase", "description": "Converted string to lowercase", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "String to be converted into lowercase"}}, "required": ["text"]}}}], "type_of_output": "relevance", "ground_truth": {"role": "assistant", "content": "There is no function to send email directly."}, "acceptable_arguments": null}
{"serial_num": 69, "category": "REJECT", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Please transfer 5,000 won to Hana Bank 123-456-789."}], "input_tools": [{"type": "function", "function": {"name": "update_movie_rating", "description": "Update (modify or add) movie rating in the movie scrapbook.", "parameters": {"type": "object", "properties": {"movie_id": {"type": "string", "description": "ID of the movie to update the rating"}, "new_rating": {"type": "integer", "description": "New rating to give to the movie (1 ~ 5)"}}, "required": ["movie_id", "new_rating"]}}}, {"type": "function", "function": {"name": "schedule_meeting", "description": "Book a meeting.", "parameters": {"type": "object", "properties": {"participants": {"type": "string", "description": "Participant list (if there are multiple participants, it is divided into a comma (,).)"}, "date_time": {"type": "string", "description": "Date and time of meeting (yyyy-mm-dd hh: mm format)"}}, "required": ["participants", "date_time"]}}}, {"type": "function", "function": {"name": "calculate_tax", "description": "Calculate the tax on the given amount.", "parameters": {"type": "object", "properties": {"amount": {"type": "number", "description": "Prior to calculating"}, "tax_rate": {"type": "number", "description": "Tax rate to be applied (percentage)"}}, "required": ["amount", "tax_rate"]}}}, {"type": "function", "function": {"name": "get_currency_trend_3months", "description": "Provides exchange rate fluctuations for the last three months for the designated currency", "parameters": {"type": "object", "properties": {"currency_code": {"type": "string", "description": "Code of currency to bring the exchange rate fluctuations (e.g. USD, EUR, JPY)"}}, "required": ["currency_code"]}}}, {"type": "function", "function": {"name": "informLottoNumberByDate", "description": "It is a function that informs the lottery winning number on a specific date.", "parameters": {"type": "object", "properties": {"date": {"type": "string", "description": "Date to check the lottery winning number (e.g., March 4)"}}, "required": ["date"]}}}], "type_of_output": "relevance", "ground_truth": {"role": "assistant", "content": "You cannot handle direct transfer tasks."}, "acceptable_arguments": null}
{"serial_num": 70, "category": "REJECT", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "I have to send a dinner to my friend yesterday. Can I spend 300,000 won with Nonghyup Bank 567890123?"}], "input_tools": [{"type": "function", "function": {"name": "get_currency_trend_3months", "description": "Provides exchange rate fluctuations for the last three months for the designated currency", "parameters": {"type": "object", "properties": {"currency_code": {"type": "string", "description": "Code of currency to bring the exchange rate fluctuations (e.g. USD, EUR, JPY)"}}, "required": ["currency_code"]}}}, {"type": "function", "function": {"name": "checkBankBalance", "description": "Look up the balance of a specific bank account.", "parameters": {"type": "object", "properties": {"accountBank": {"type": "string", "description": "The bank name of the account to view the balance"}, "accountNumber": {"type": "string", "description": "Account number to view the balance"}}, "required": ["accountBank", "accountNumber"]}}}, {"type": "function", "function": {"name": "get_stock_price", "description": "Search the current price of a particular stock.", "parameters": {"type": "object", "properties": {"stock_name": {"type": "string", "description": "Stock name to look up"}}, "required": ["stock_name"]}}}, {"type": "function", "function": {"name": "track_order", "description": "Inquire an order status (ordering, payment completion, shipping, delivery, etc.) with a given order number and informed the expected shipping date or expected delivery date.", "parameters": {"type": "object", "properties": {"order_id": {"type": "string", "description": "Order number to search"}}, "required": ["order_id"]}}}, {"type": "function", "function": {"name": "DeleteEvent", "description": "Delete schedule from calendar", "parameters": {"type": "object", "properties": {"event_id": {"type": "string", "description": "ID of the schedule to be deleted"}}, "required": ["event_id"]}}}], "type_of_output": "relevance", "ground_truth": {"role": "assistant", "content": "You cannot handle direct transfer tasks."}, "acceptable_arguments": null}
{"serial_num": 71, "category": "REJECT", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Woori Bank 678-901-234 Here you will transfer to this five thousand won."}], "input_tools": [{"type": "function", "function": {"name": "search_contact", "description": "Search for a list of contacts in the name of a person and bring his phone number and email address.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "The name of a person who wants to check the contact"}}, "required": ["name"]}}}, {"type": "function", "function": {"name": "getWeatherForecastForNext7Days", "description": "For the designated area, we offer a 7 -day weather forecast, including today.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "The name of the area where the weather forecast"}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "convert_euro_to_koruna", "description": "Convert the Given EUR amount to Czech Coruna (CZK)", "parameters": {"type": "object", "properties": {"amount_euro": {"type": "number", "description": "EUR amount to convert"}, "exchange_rate_eur_to_czk": {"type": "number", "description": "Exchange rate from EUR to CZK"}}, "required": ["amount_euro", "exchange_rate_eur_to_czk"]}}}, {"type": "function", "function": {"name": "generate_random_special_chars", "description": "Randomly return by selecting 5 special characters randomly from a special character set.", "parameters": {"type": "object", "properties": {}, "required": []}}}, {"type": "function", "function": {"name": "check_traffic_status", "description": "Inquire the current traffic situation on a particular path.", "parameters": {"type": "object", "properties": {"start_location": {"type": "string", "description": "Departure"}, "end_location": {"type": "string", "description": "Arrival point"}}, "required": ["start_location", "end_location"]}}}], "type_of_output": "relevance", "ground_truth": {"role": "assistant", "content": "You cannot handle direct transfer tasks."}, "acceptable_arguments": null}
{"serial_num": 72, "category": "REJECT", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Send 8,000 won to your brother. The account is Kakao Bank 890-123-456."}], "input_tools": [{"type": "function", "function": {"name": "calculateBMR", "description": "Basal metabolic rate calculation", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}, "height": {"type": "number", "description": "Centimeter key"}, "age": {"type": "integer", "description": "age"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["weight", "height", "age", "gender"]}}}, {"type": "function", "function": {"name": "getCurrentKoreaTime", "description": "Currently, the time of Korea is returned to year-month-day: minor: second format.", "parameters": {}}}, {"type": "function", "function": {"name": "generate_image_from_text", "description": "Create a picture based on a given text", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Text to create a picture"}}, "required": ["text"]}}}, {"type": "function", "function": {"name": "create_user", "description": "Create a new user account.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "User's name"}, "email": {"type": "string", "description": "User's email address"}, "password": {"type": "string", "description": "User's password"}}, "required": ["name", "email", "password"]}}}, {"type": "function", "function": {"name": "search_email_content", "description": "Search for emails containing keywords specified by the user during the saved email.", "parameters": {"type": "object", "properties": {"keyword": {"type": "string", "description": "Keyword to search"}, "from_date": {"type": "string", "description": "Date to start searching (optional)"}, "to_date": {"type": "string", "description": "Date to finish the search (optional)"}, "sender": {"type": "string", "description": "Email caller address (optional)"}}, "required": ["keyword"]}}}], "type_of_output": "relevance", "ground_truth": {"role": "assistant", "content": "You cannot handle direct transfer tasks."}, "acceptable_arguments": null}
{"serial_num": 73, "category": "REJECT", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "This evening is a pizza. Please order two editions in pepperoni pizza large size."}], "input_tools": [{"type": "function", "function": {"name": "create_playlist", "description": "Create a music playlist that fits the user's tastes and conditions", "parameters": {"type": "object", "properties": {"genre": {"type": "string", "description": "The genre of music to be included in the playlist"}, "mood": {"type": "string", "description": "Playlist's mood or atmosphere"}, "count": {"type": "integer", "description": "The number of songs to be included in the playlist"}, "include_live": {"type": "boolean", "description": "Live version songs include"}}, "required": ["genre", "mood", "count"]}}}, {"type": "function", "function": {"name": "convert_to_lowercase", "description": "Converted string to lowercase", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "String to be converted into lowercase"}}, "required": ["text"]}}}, {"type": "function", "function": {"name": "add_movie_review", "description": "Add a review of a specific movie to the movie scrapbook.", "parameters": {"type": "object", "properties": {"movie_id": {"type": "string", "description": "ID of the movie to add a review"}, "review_text": {"type": "string", "description": "Movie review contents"}}, "required": ["movie_id", "review_text"]}}}, {"type": "function", "function": {"name": "searchFriendBirthday", "description": "A function that enters a friend's name and searches for birthday information", "parameters": {"type": "object", "properties": {"friendName": {"type": "string", "description": "A friend's name to search"}}, "required": ["friendName"]}}}, {"type": "function", "function": {"name": "registerFriendBirthday", "description": "A function that registers a friend's name and birthday information", "parameters": {"type": "object", "properties": {"friendName": {"type": "string", "description": "A friend's name to register"}, "birthday": {"type": "string", "description": "The birthday of a friend to register (YYYY-MM-DD format)"}}, "required": ["friendName", "birthday"]}}}], "type_of_output": "relevance", "ground_truth": {"role": "assistant", "content": "There is no function to order pizza directly."}, "acceptable_arguments": null}
{"serial_num": 74, "category": "REJECT", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Order one with cheese pizza M."}], "input_tools": [{"type": "function", "function": {"name": "calculateProteinNeeds", "description": "Daily recommended protein intake considering activity level and weight", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}, "activityLevel": {"type": "string", "description": "Activity level ('low', 'moderate', 'high')"}}, "required": ["weight", "activityLevel"]}}}, {"type": "function", "function": {"name": "add_contact", "description": "Register a new contact.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "Name to register a contact"}, "phone": {"type": "string", "description": "phone number"}, "email": {"type": "string", "description": "Email address"}}, "required": ["name"]}}}, {"type": "function", "function": {"name": "getHistoricalMinMaxTemperature", "description": "In the past, we look up for the minimum temperature and the highest temperature in certain regions.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "The name of the area to be searched"}, "date": {"type": "string", "description": "Date to look up ('YYYY-MM-DD' format)"}}, "required": ["location", "date"]}}}, {"type": "function", "function": {"name": "convertTimeBetweenTimezones", "description": "Convert time to another time in one time.", "parameters": {"type": "object", "properties": {"originalTime": {"type": "string", "description": "Reference time to convert (format HH: mm)"}, "fromTimezone": {"type": "string", "description": "Standard time zone (region name)"}, "toTimezone": {"type": "string", "description": "Time to be converted (region name)"}}, "required": ["originalTime", "fromTimezone", "toTimezone"]}}}, {"type": "function", "function": {"name": "calculate_tip", "description": "Tip calculation", "parameters": {"type": "object", "properties": {"bill_amount": {"type": "number", "description": "Billed amount"}, "tip_percentage": {"type": "number", "description": "Tip 100 division (for example, 15 input for 15%)"}}, "required": ["bill_amount", "tip_percentage"]}}}], "type_of_output": "relevance", "ground_truth": {"role": "assistant", "content": "There is no function to order pizza directly."}, "acceptable_arguments": null}
{"serial_num": 75, "category": "REJECT", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Hawaiian Pizza Medium Size Three Edition Order"}], "input_tools": [{"type": "function", "function": {"name": "registerFriendBirthday", "description": "A function that registers a friend's name and birthday information", "parameters": {"type": "object", "properties": {"friendName": {"type": "string", "description": "A friend's name to register"}, "birthday": {"type": "string", "description": "The birthday of a friend to register (YYYY-MM-DD format)"}}, "required": ["friendName", "birthday"]}}}, {"type": "function", "function": {"name": "calculate_discount", "description": "Input the original price and discount rate (percentage unit) to calculate the discounted price.", "parameters": {"type": "object", "properties": {"original_price": {"type": "number", "description": "Original price of the product"}, "discount_percentage": {"type": "number", "description": "Discount rate to be applied (for example, 20% discount)"}}, "required": ["original_price", "discount_percentage"]}}}, {"type": "function", "function": {"name": "recommendLottoNumber", "description": "It is a function that recommends a lotto number randomly.", "parameters": {"type": "object", "properties": {}, "required": []}}}, {"type": "function", "function": {"name": "transferMoney", "description": "Send money to a specific account.", "parameters": {"type": "object", "properties": {"receiver_bank": {"type": "string", "description": "Bank"}, "receiver_account": {"type": "string", "description": "Account number to send"}, "amount": {"type": "number", "description": "Missing money (unit: krw))"}}, "required": ["receiver_bank", "receiver_account", "amount"]}}}, {"type": "function", "function": {"name": "find_nearest_emergency_room_by_location", "description": "Based on a specific location, it provides the location and information of the nearby emergency room.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Current location (example: station, address, building name, etc.)"}}, "required": ["location"]}}}], "type_of_output": "relevance", "ground_truth": {"role": "assistant", "content": "There is no function to order pizza directly."}, "acceptable_arguments": null}
{"serial_num": 76, "category": "REJECT", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Please order one bulgogi pizza."}], "input_tools": [{"type": "function", "function": {"name": "convert_euro_to_koruna", "description": "Convert the Given EUR amount to Czech Coruna (CZK)", "parameters": {"type": "object", "properties": {"amount_euro": {"type": "number", "description": "EUR amount to convert"}, "exchange_rate_eur_to_czk": {"type": "number", "description": "Exchange rate from EUR to CZK"}}, "required": ["amount_euro", "exchange_rate_eur_to_czk"]}}}, {"type": "function", "function": {"name": "getCurrentTopSeries", "description": "We offer the current popular TV series rankings", "parameters": {"type": "object", "properties": {}, "required": []}}}, {"type": "function", "function": {"name": "view_shopping_cart", "description": "User's shopping cart contents inquiry", "parameters": {"type": "object", "properties": {"user_id": {"type": "string", "description": "User's unique identifier"}}, "required": ["user_id"]}}}, {"type": "function", "function": {"name": "calculateCaloricNeeds", "description": "A function that estimates the average daily calorie consumption", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}, "height": {"type": "number", "description": "Centimeter key"}, "age": {"type": "integer", "description": "age"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["weight", "height", "age", "gender"]}}}, {"type": "function", "function": {"name": "convert_pyeong_to_squaremeter", "description": "Convert it to \"평\"을 입력받아서, \"제곱미터\".", "parameters": {"type": "object", "properties": {"pyeong": {"type": "number", "description": "Pyeongsu to be transformed"}}, "required": ["pyeong"]}}}], "type_of_output": "relevance", "ground_truth": {"role": "assistant", "content": "There is no function to order pizza directly."}, "acceptable_arguments": null}
{"serial_num": 77, "category": "REJECT", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Can you find a plane 2022/10/30 from Gimpo Airport to Gimhae Airport?"}], "input_tools": [{"type": "function", "function": {"name": "convert_currency", "description": "Returns a value that exchanges a currency into another currency.", "parameters": {"type": "object", "properties": {"amount": {"type": "number", "description": "Money"}, "from": {"type": "string", "description": "Type of currency currency exchange"}, "to": {"type": "string", "description": "Type of currency exchange results"}}, "required": ["amount", "from", "to"]}}}, {"type": "function", "function": {"name": "FindPrinterError", "description": "Returns the current error status (lack of paper, lack of ink, etc.) of certain printers in the company.", "parameters": {"type": "object", "properties": {"PrinterLocation": {"type": "string", "description": "The location of the printer to identify the error condition"}}, "required": ["PrinterLocation"]}}}, {"type": "function", "function": {"name": "getDayOfWeek", "description": "Returns the day of the given date.", "parameters": {"type": "object", "properties": {"date": {"type": "string", "description": "Yyyy-mm-DD format date"}}, "required": ["date"]}}}, {"type": "function", "function": {"name": "get_currency_trend_3months", "description": "Provides exchange rate fluctuations for the last three months for the designated currency", "parameters": {"type": "object", "properties": {"currency_code": {"type": "string", "description": "Code of currency to bring the exchange rate fluctuations (e.g. USD, EUR, JPY)"}}, "required": ["currency_code"]}}}, {"type": "function", "function": {"name": "convert_to_lowercase", "description": "Converted string to lowercase", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "String to be converted into lowercase"}}, "required": ["text"]}}}], "type_of_output": "relevance", "ground_truth": {"role": "assistant", "content": "There is no function to search the flights directly."}, "acceptable_arguments": null}
{"serial_num": 78, "category": "REJECT", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Learn a flight from New York JFK Airport to Athens International Airport at 2024-10-26."}], "input_tools": [{"type": "function", "function": {"name": "recommendLottoNumber", "description": "It is a function that recommends a lotto number randomly.", "parameters": {"type": "object", "properties": {}, "required": []}}}, {"type": "function", "function": {"name": "get_stock_price", "description": "Search the current price of a particular stock.", "parameters": {"type": "object", "properties": {"stock_name": {"type": "string", "description": "Stock name to look up"}}, "required": ["stock_name"]}}}, {"type": "function", "function": {"name": "calculate_discount", "description": "Input the original price and discount rate (percentage unit) to calculate the discounted price.", "parameters": {"type": "object", "properties": {"original_price": {"type": "number", "description": "Original price of the product"}, "discount_percentage": {"type": "number", "description": "Discount rate to be applied (for example, 20% discount)"}}, "required": ["original_price", "discount_percentage"]}}}, {"type": "function", "function": {"name": "bookBusinessVehicle", "description": "Book a car for business trips.", "parameters": {"type": "object", "properties": {"destination": {"type": "string", "description": "destination"}, "departure_date": {"type": "string", "description": "Express your departure date as it is. Example) '다음 주 월요일', '2022년 1월 1일'"}}, "required": ["destination", "departure_date"]}}}, {"type": "function", "function": {"name": "DeleteEvent", "description": "Delete schedule from calendar", "parameters": {"type": "object", "properties": {"event_id": {"type": "string", "description": "ID of the schedule to be deleted"}}, "required": ["event_id"]}}}], "type_of_output": "relevance", "ground_truth": {"role": "assistant", "content": "There is no function to search the flights directly."}, "acceptable_arguments": null}
{"serial_num": 79, "category": "REJECT", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Find some plane information from Haneda Airport to Incheon International Airport."}], "input_tools": [{"type": "function", "function": {"name": "convert_to_lowercase", "description": "Converted string to lowercase", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "String to be converted into lowercase"}}, "required": ["text"]}}}, {"type": "function", "function": {"name": "reserve_restaurant", "description": "Reservation of the restaurant with the information provided by the user. Example) Please make a reservation at 6 pm tonight", "parameters": {"type": "object", "properties": {"store": {"type": "string", "description": "Restaurant name"}, "reservationDate": {"type": "string", "description": "Reservation date (YYYY-MM-DD)"}, "reservationTime": {"type": "string", "description": "Reservation time (hh: mm)"}, "numberOfPeople": {"type": "integer", "description": "Number of reservations"}}, "required": ["store", "reservationDate", "reservationTime", "numberOfPeople"]}}}, {"type": "function", "function": {"name": "count_lowercase_letters", "description": "The number of lowercase in the string", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Cell string for lowercase"}}, "required": ["text"]}}}, {"type": "function", "function": {"name": "convert_euro_to_koruna", "description": "Convert the Given EUR amount to Czech Coruna (CZK)", "parameters": {"type": "object", "properties": {"amount_euro": {"type": "number", "description": "EUR amount to convert"}, "exchange_rate_eur_to_czk": {"type": "number", "description": "Exchange rate from EUR to CZK"}}, "required": ["amount_euro", "exchange_rate_eur_to_czk"]}}}, {"type": "function", "function": {"name": "generate_random_password", "description": "Create any password with certain conditions", "parameters": {"type": "object", "properties": {"length": {"type": "integer", "description": "Password length"}, "include_uppercase": {"type": "boolean", "description": "Including alphabet uppercase letters"}, "include_lowercase": {"type": "boolean", "description": "Including alphabet lowercase"}, "include_numbers": {"type": "boolean", "description": "Whether the number includes"}}, "required": ["length", "include_uppercase", "include_lowercase", "include_numbers"]}}}], "type_of_output": "relevance", "ground_truth": {"role": "assistant", "content": "There is no function to search the flights directly."}, "acceptable_arguments": null}
{"serial_num": 80, "category": "REJECT", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "What is the plane departing from London Hydro Airport to Paris Charles de Gaulle International Airport on October 3, 2024?"}], "input_tools": [{"type": "function", "function": {"name": "convert_krw_to_usd", "description": "Converted Korean money (KRW) to USD (USD)", "parameters": {"type": "object", "properties": {"amount_krw": {"type": "number", "description": "Korean money (KRW) amount to convert"}, "exchange_rate_krw_to_usd": {"type": "number", "description": "Exchange rate from KRW to USD"}}, "required": ["amount_krw", "exchange_rate_krw_to_usd"]}}}, {"type": "function", "function": {"name": "getCurrentKoreaTime", "description": "Currently, the time of Korea is returned to year-month-day: minor: second format.", "parameters": {}}}, {"type": "function", "function": {"name": "create_user", "description": "Create a new user account.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "User's name"}, "email": {"type": "string", "description": "User's email address"}, "password": {"type": "string", "description": "User's password"}}, "required": ["name", "email", "password"]}}}, {"type": "function", "function": {"name": "informLottoNumberByRound", "description": "It is a function that informs the lottery winning number of a specific episode.", "parameters": {"type": "object", "properties": {"round": {"type": "integer", "description": "The round to check the lottery winning number"}}, "required": ["round"]}}}, {"type": "function", "function": {"name": "count_lowercase_letters", "description": "The number of lowercase in the string", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Cell string for lowercase"}}, "required": ["text"]}}}], "type_of_output": "relevance", "ground_truth": {"role": "assistant", "content": "There is no function to search the flights directly."}, "acceptable_arguments": null}
{"serial_num": 81, "category": "REJECT", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Compare the companies that can clean the 30 -pyeong apartment in Gangnam -gu, Seoul on March 15, 2024."}], "input_tools": [{"type": "function", "function": {"name": "schedule_laundry_pickup", "description": "Apply for a service to collect laundry.", "parameters": {"type": "object", "properties": {"pickup_location": {"type": "string", "description": "Extract the location of the user as it is to collect the laundry. (Example: House, 101 -dong 102, etc."}, "pickup_date": {"type": "string", "description": "Extract the laundry collection date as it is. (Example: next Monday, January 1, 2022, etc.)"}, "pickup_time": {"type": "string", "description": "Extract the time to collect the laundry as it is. (Example: 2 pm, 7 pm, etc.)"}}, "required": ["pickup_location", "pickup_date", "pickup_time"]}}}, {"type": "function", "function": {"name": "getCurrentUTCTime", "description": "We offer current UTC time.", "parameters": {}}}, {"type": "function", "function": {"name": "view_shopping_cart", "description": "User's shopping cart contents inquiry", "parameters": {"type": "object", "properties": {"user_id": {"type": "string", "description": "User's unique identifier"}}, "required": ["user_id"]}}}, {"type": "function", "function": {"name": "convertTimeBetweenTimezones", "description": "Convert time to another time in one time.", "parameters": {"type": "object", "properties": {"originalTime": {"type": "string", "description": "Reference time to convert (format HH: mm)"}, "fromTimezone": {"type": "string", "description": "Standard time zone (region name)"}, "toTimezone": {"type": "string", "description": "Time to be converted (region name)"}}, "required": ["originalTime", "fromTimezone", "toTimezone"]}}}, {"type": "function", "function": {"name": "calculateBMR", "description": "Basal metabolic rate calculation", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}, "height": {"type": "number", "description": "Centimeter key"}, "age": {"type": "integer", "description": "age"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["weight", "height", "age", "gender"]}}}], "type_of_output": "relevance", "ground_truth": {"role": "assistant", "content": "There is no comparison of a real cleaning company for a specific date."}, "acceptable_arguments": null}
{"serial_num": 82, "category": "REJECT", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "This Saturday, I compare the places where you can clean the 8 -pyeong studio in Seo -gu, Daejeon."}], "input_tools": [{"type": "function", "function": {"name": "searchMemo", "description": "Search for notes containing keywords specified by the user among the saved memos.", "parameters": {"type": "object", "properties": {"keyword": {"type": "string", "description": "Keyword to search"}}, "required": ["keyword"]}}}, {"type": "function", "function": {"name": "add_movie_review", "description": "Add a review of a specific movie to the movie scrapbook.", "parameters": {"type": "object", "properties": {"movie_id": {"type": "string", "description": "ID of the movie to add a review"}, "review_text": {"type": "string", "description": "Movie review contents"}}, "required": ["movie_id", "review_text"]}}}, {"type": "function", "function": {"name": "calculate_discount", "description": "Input the original price and discount rate (percentage unit) to calculate the discounted price.", "parameters": {"type": "object", "properties": {"original_price": {"type": "number", "description": "Original price of the product"}, "discount_percentage": {"type": "number", "description": "Discount rate to be applied (for example, 20% discount)"}}, "required": ["original_price", "discount_percentage"]}}}, {"type": "function", "function": {"name": "book_concert_tickets", "description": "Tickets for specific performances are made using external ticketing systems.", "parameters": {"type": "object", "properties": {"concert_name": {"type": "string", "description": "The name of the performance you want to book"}, "number_of_tickets": {"type": "integer", "description": "Quantity"}, "seat_type": {"type": "string", "description": "Selected seat type (e.g. VIP, general)"}}, "required": ["concert_name", "number_of_tickets", "seat_type"]}}}, {"type": "function", "function": {"name": "informTyphoon", "description": "It provides location information of the current typhoon.", "parameters": {"type": "object", "properties": {"typhoonName": {"type": "string", "description": "The name of the typhoon to look upon"}}, "required": ["typhoonName"]}}}], "type_of_output": "relevance", "ground_truth": {"role": "assistant", "content": "There is no comparison of a real cleaning company for a specific date."}, "acceptable_arguments": null}
{"serial_num": 83, "category": "REJECT", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Can you find and compare the service that can clean 60 pyeong in Seogwipo, Jeju Island next Tuesday?"}], "input_tools": [{"type": "function", "function": {"name": "check_traffic_status", "description": "Inquire the current traffic situation on a particular path.", "parameters": {"type": "object", "properties": {"start_location": {"type": "string", "description": "Departure"}, "end_location": {"type": "string", "description": "Arrival point"}}, "required": ["start_location", "end_location"]}}}, {"type": "function", "function": {"name": "CheckTaxRefund", "description": "Search for the user's tax refund.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "The name of the tax paymenter"}, "birth": {"type": "string", "description": "Date of birth of tax payers (YYYY-MM-DD)"}, "phone_number": {"type": "string", "description": "Contact of tax payers"}}, "required": ["name", "birth", "phone_number"]}}}, {"type": "function", "function": {"name": "CallTaxi", "description": "Call a taxi from a specific location.", "parameters": {"type": "object", "properties": {"pickup_location": {"type": "string", "description": "Departure location (address, station name, building name, etc.)"}, "destination": {"type": "string", "description": "Arrival location (address, station name, building name, etc.)"}}, "required": ["pickup_location", "destination"]}}}, {"type": "function", "function": {"name": "convert_pyeong_to_squaremeter", "description": "Convert it to \"평\"을 입력받아서, \"제곱미터\".", "parameters": {"type": "object", "properties": {"pyeong": {"type": "number", "description": "Pyeongsu to be transformed"}}, "required": ["pyeong"]}}}, {"type": "function", "function": {"name": "generate_syntax_tree_from_text", "description": "Create a syntax tree for a given text", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Text to create a syntax tree"}}, "required": ["text"]}}}], "type_of_output": "relevance", "ground_truth": {"role": "assistant", "content": "There is no comparison of a real cleaning company for a specific date."}, "acceptable_arguments": null}
{"serial_num": 84, "category": "REJECT", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "My house is about 130 square meters and compare companies that can be cleaned in Cheonan next Thursday."}], "input_tools": [{"type": "function", "function": {"name": "informTyphoon", "description": "It provides location information of the current typhoon.", "parameters": {"type": "object", "properties": {"typhoonName": {"type": "string", "description": "The name of the typhoon to look upon"}}, "required": ["typhoonName"]}}}, {"type": "function", "function": {"name": "bookBusinessVehicle", "description": "Book a car for business trips.", "parameters": {"type": "object", "properties": {"destination": {"type": "string", "description": "destination"}, "departure_date": {"type": "string", "description": "Express your departure date as it is. Example) '다음 주 월요일', '2022년 1월 1일'"}}, "required": ["destination", "departure_date"]}}}, {"type": "function", "function": {"name": "update_contact", "description": "Update (modify or add) contents of existing contacts.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "Name stored in the current contact"}, "new_name": {"type": "string", "description": "Name to update"}, "new_phone": {"type": "string", "description": "Phone number to update"}, "new_email": {"type": "string", "description": "Email address to be updated"}}, "required": ["name"]}}}, {"type": "function", "function": {"name": "count_uppercase_letters", "description": "The number of uppercase letters in the string", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Cell string"}}, "required": ["text"]}}}, {"type": "function", "function": {"name": "getDailyNewsHeadlines", "description": "Today's main news headline is provided.", "parameters": {"type": "object", "properties": {}, "required": []}}}], "type_of_output": "relevance", "ground_truth": {"role": "assistant", "content": "There is no comparison of a real cleaning company for a specific date."}, "acceptable_arguments": null}
{"serial_num": 85, "category": "REJECT", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Upload my work: Image URL is https://example.com/myart.jpg, the title is 'Sunrise in the Mountains', 설명은 'This artwork depicts a beautiful mountain sunrise'."}], "input_tools": [{"type": "function", "function": {"name": "convert_euro_to_koruna", "description": "Convert the Given EUR amount to Czech Coruna (CZK)", "parameters": {"type": "object", "properties": {"amount_euro": {"type": "number", "description": "EUR amount to convert"}, "exchange_rate_eur_to_czk": {"type": "number", "description": "Exchange rate from EUR to CZK"}}, "required": ["amount_euro", "exchange_rate_eur_to_czk"]}}}, {"type": "function", "function": {"name": "count_characters", "description": "Returns the total number of characters from a given string", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Cell string"}}, "required": ["text"]}}}, {"type": "function", "function": {"name": "get_stock_price", "description": "Search the current price of a particular stock.", "parameters": {"type": "object", "properties": {"stock_name": {"type": "string", "description": "Stock name to look up"}}, "required": ["stock_name"]}}}, {"type": "function", "function": {"name": "add_contact", "description": "Register a new contact.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "Name to register a contact"}, "phone": {"type": "string", "description": "phone number"}, "email": {"type": "string", "description": "Email address"}}, "required": ["name"]}}}, {"type": "function", "function": {"name": "getCurrentTopSeries", "description": "We offer the current popular TV series rankings", "parameters": {"type": "object", "properties": {}, "required": []}}}], "type_of_output": "relevance", "ground_truth": {"role": "assistant", "content": "There is no function to upload the work directly."}, "acceptable_arguments": null}
{"serial_num": 86, "category": "REJECT", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Can you post my work on the art platform? The image URL is https://example.com/myart.jpg, the title is '노을진 바다', 설명은 '바다 위로 지는 노을을 그린 작품입니다'"}], "input_tools": [{"type": "function", "function": {"name": "calculateCaloricNeeds", "description": "A function that estimates the average daily calorie consumption", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}, "height": {"type": "number", "description": "Centimeter key"}, "age": {"type": "integer", "description": "age"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["weight", "height", "age", "gender"]}}}, {"type": "function", "function": {"name": "track_order", "description": "Inquire an order status (ordering, payment completion, shipping, delivery, etc.) with a given order number and informed the expected shipping date or expected delivery date.", "parameters": {"type": "object", "properties": {"order_id": {"type": "string", "description": "Order number to search"}}, "required": ["order_id"]}}}, {"type": "function", "function": {"name": "schedule_laundry_pickup", "description": "Apply for a service to collect laundry.", "parameters": {"type": "object", "properties": {"pickup_location": {"type": "string", "description": "Extract the location of the user as it is to collect the laundry. (Example: House, 101 -dong 102, etc."}, "pickup_date": {"type": "string", "description": "Extract the laundry collection date as it is. (Example: next Monday, January 1, 2022, etc.)"}, "pickup_time": {"type": "string", "description": "Extract the time to collect the laundry as it is. (Example: 2 pm, 7 pm, etc.)"}}, "required": ["pickup_location", "pickup_date", "pickup_time"]}}}, {"type": "function", "function": {"name": "informWeather", "description": "Provide current weather information in a particular area", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Local name to bring weather information"}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "search_email_content", "description": "Search for emails containing keywords specified by the user during the saved email.", "parameters": {"type": "object", "properties": {"keyword": {"type": "string", "description": "Keyword to search"}, "from_date": {"type": "string", "description": "Date to start searching (optional)"}, "to_date": {"type": "string", "description": "Date to finish the search (optional)"}, "sender": {"type": "string", "description": "Email caller address (optional)"}}, "required": ["keyword"]}}}], "type_of_output": "relevance", "ground_truth": {"role": "assistant", "content": "There is no function to upload the work directly."}, "acceptable_arguments": null}
{"serial_num": 87, "category": "REJECT", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Please upload this image. The image is https://example.com/myart.jpg here and the title is \"별이 빛나는 밤\", and the description is '별이 빛나는 밤하늘을 표현한 그림입니다'."}], "input_tools": [{"type": "function", "function": {"name": "update_movie_rating", "description": "Update (modify or add) movie rating in the movie scrapbook.", "parameters": {"type": "object", "properties": {"movie_id": {"type": "string", "description": "ID of the movie to update the rating"}, "new_rating": {"type": "integer", "description": "New rating to give to the movie (1 ~ 5)"}}, "required": ["movie_id", "new_rating"]}}}, {"type": "function", "function": {"name": "getDailyNewsHeadlines", "description": "Today's main news headline is provided.", "parameters": {"type": "object", "properties": {}, "required": []}}}, {"type": "function", "function": {"name": "informLottoWinnerPrizeByRound", "description": "It is a function that informs the amount of lottery winnings of a specific episode.", "parameters": {"type": "object", "properties": {"round": {"type": "integer", "description": "A round that wants to check the amount of lottery winnings (e.g. 1001)"}}, "required": ["round"]}}}, {"type": "function", "function": {"name": "getWeatherForecastForNext7Days", "description": "For the designated area, we offer a 7 -day weather forecast, including today.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "The name of the area where the weather forecast"}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "count_words", "description": "Calculation of words in a given text (sentence or paragraph)", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Cell text"}}, "required": ["text"]}}}], "type_of_output": "relevance", "ground_truth": {"role": "assistant", "content": "There is no function to upload the work directly."}, "acceptable_arguments": null}
{"serial_num": 88, "category": "REJECT", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Post on the platform. Image https://example.com/myart5.jpg attaches this, and the title and description are \"morning in the forest\", \"This artwork shows a peaceful morning in the forest\"."}], "input_tools": [{"type": "function", "function": {"name": "informWeather", "description": "Provide current weather information in a particular area", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Local name to bring weather information"}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "create_playlist", "description": "Create a music playlist that fits the user's tastes and conditions", "parameters": {"type": "object", "properties": {"genre": {"type": "string", "description": "The genre of music to be included in the playlist"}, "mood": {"type": "string", "description": "Playlist's mood or atmosphere"}, "count": {"type": "integer", "description": "The number of songs to be included in the playlist"}, "include_live": {"type": "boolean", "description": "Live version songs include"}}, "required": ["genre", "mood", "count"]}}}, {"type": "function", "function": {"name": "OrderPizza", "description": "Order pizza.", "parameters": {"type": "object", "properties": {"PizzaType": {"type": "string", "description": "Pizza"}, "size": {"type": "string", "description": "Pizza size (extracted as it is, example: Small, L, Medium, etc.)"}, "quantity": {"type": "integer", "description": "Order quantity"}}, "required": ["PizzaType", "size", "quantity"]}}}, {"type": "function", "function": {"name": "calculate_bmi", "description": "Calculation of human body mass index (BMI)", "parameters": {"type": "object", "properties": {"height": {"type": "number", "description": "Centimeter key"}, "weight": {"type": "number", "description": "Kilogram unit weight"}}, "required": ["height", "weight"]}}}, {"type": "function", "function": {"name": "CheckTaxRefund", "description": "Search for the user's tax refund.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "The name of the tax paymenter"}, "birth": {"type": "string", "description": "Date of birth of tax payers (YYYY-MM-DD)"}, "phone_number": {"type": "string", "description": "Contact of tax payers"}}, "required": ["name", "birth", "phone_number"]}}}], "type_of_output": "relevance", "ground_truth": {"role": "assistant", "content": "There is no function to upload the work directly."}, "acceptable_arguments": null}
{"serial_num": 89, "category": "REJECT", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Book 2 VIP seats in the Bangbangcon 23 concert ticket in June."}], "input_tools": [{"type": "function", "function": {"name": "upload_artwork_to_online_site", "description": "Upload your work to the online art platform.", "parameters": {"type": "object", "properties": {"art_image_url": {"type": "string", "description": "The image of the work to be uploaded URL"}, "title": {"type": "string", "description": "Title of the work"}, "description": {"type": "string", "description": "A brief explanation of the work"}}, "required": ["art_image_url", "title", "description"]}}}, {"type": "function", "function": {"name": "getCurrentTimeForLocation", "description": "Provide current time information in certain areas", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Local name to bring time information"}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "calculate_discount", "description": "Input the original price and discount rate (percentage unit) to calculate the discounted price.", "parameters": {"type": "object", "properties": {"original_price": {"type": "number", "description": "Original price of the product"}, "discount_percentage": {"type": "number", "description": "Discount rate to be applied (for example, 20% discount)"}}, "required": ["original_price", "discount_percentage"]}}}, {"type": "function", "function": {"name": "calculateBMR", "description": "Basal metabolic rate calculation", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}, "height": {"type": "number", "description": "Centimeter key"}, "age": {"type": "integer", "description": "age"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["weight", "height", "age", "gender"]}}}, {"type": "function", "function": {"name": "search_email_content", "description": "Search for emails containing keywords specified by the user during the saved email.", "parameters": {"type": "object", "properties": {"keyword": {"type": "string", "description": "Keyword to search"}, "from_date": {"type": "string", "description": "Date to start searching (optional)"}, "to_date": {"type": "string", "description": "Date to finish the search (optional)"}, "sender": {"type": "string", "description": "Email caller address (optional)"}}, "required": ["keyword"]}}}], "type_of_output": "relevance", "ground_truth": {"role": "assistant", "content": "There is no function to book a ticket directly."}, "acceptable_arguments": null}
{"serial_num": 90, "category": "REJECT", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "2024 I want to make a reservation for 4 red Velvet Fancon Tour."}], "input_tools": [{"type": "function", "function": {"name": "generate_image_from_text", "description": "Create a picture based on a given text", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Text to create a picture"}}, "required": ["text"]}}}, {"type": "function", "function": {"name": "calculate_tax", "description": "Calculate the tax on the given amount.", "parameters": {"type": "object", "properties": {"amount": {"type": "number", "description": "Prior to calculating"}, "tax_rate": {"type": "number", "description": "Tax rate to be applied (percentage)"}}, "required": ["amount", "tax_rate"]}}}, {"type": "function", "function": {"name": "getCurrentUTCTime", "description": "We offer current UTC time.", "parameters": {}}}, {"type": "function", "function": {"name": "start_playlist", "description": "Play the playlist that the user requests.", "parameters": {"type": "object", "properties": {"playlist": {"type": "string", "description": "Name of playlist"}, "shuffle": {"type": "boolean", "description": "Playlist shuffle"}, "repeat": {"type": "boolean", "description": "Repeating playlists"}}, "required": ["playlist"]}}}, {"type": "function", "function": {"name": "informWeather", "description": "Provide current weather information in a particular area", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Local name to bring weather information"}}, "required": ["location"]}}}], "type_of_output": "relevance", "ground_truth": {"role": "assistant", "content": "There is no function to book a ticket directly."}, "acceptable_arguments": null}
{"serial_num": 91, "category": "REJECT", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "COLDPLAY Hyundai Card Super Concert 22 is on April 15th, and I want to buy three VIP seats."}], "input_tools": [{"type": "function", "function": {"name": "get_stock_price", "description": "Search the current price of a particular stock.", "parameters": {"type": "object", "properties": {"stock_name": {"type": "string", "description": "Stock name to look up"}}, "required": ["stock_name"]}}}, {"type": "function", "function": {"name": "start_playlist", "description": "Play the playlist that the user requests.", "parameters": {"type": "object", "properties": {"playlist": {"type": "string", "description": "Name of playlist"}, "shuffle": {"type": "boolean", "description": "Playlist shuffle"}, "repeat": {"type": "boolean", "description": "Repeating playlists"}}, "required": ["playlist"]}}}, {"type": "function", "function": {"name": "compareCleaningServices", "description": "Compare the service of the cleaning company and provide information.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Location or area where cleaning services are needed"}, "requested_date": {"type": "string", "format": "date", "description": "Service date (extract user as it is. Example: next Monday, January 1, 2022, etc.)"}, "size": {"type": "string", "description": "Pyeongsu or area of ​​the house (flat, square meter)"}}, "required": ["location", "requested_date", "size"]}}}, {"type": "function", "function": {"name": "convert_eur_to_jpy", "description": "Convert the given Euro (EUR) amount to JPY", "parameters": {"type": "object", "properties": {"amount_eur": {"type": "number", "description": "EUR amount to convert"}}, "required": ["amount_eur"]}}}, {"type": "function", "function": {"name": "count_words", "description": "Calculation of words in a given text (sentence or paragraph)", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Cell text"}}, "required": ["text"]}}}], "type_of_output": "relevance", "ground_truth": {"role": "assistant", "content": "There is no function to book a ticket directly."}, "acceptable_arguments": null}
{"serial_num": 92, "category": "REJECT", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Can I make a two -year -old tour of Incheon concert ticket in 2019? The seat is a regular seat."}], "input_tools": [{"type": "function", "function": {"name": "search_contact", "description": "Search for a list of contacts in the name of a person and bring his phone number and email address.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "The name of a person who wants to check the contact"}}, "required": ["name"]}}}, {"type": "function", "function": {"name": "CallTaxi", "description": "Call a taxi from a specific location.", "parameters": {"type": "object", "properties": {"pickup_location": {"type": "string", "description": "Departure location (address, station name, building name, etc.)"}, "destination": {"type": "string", "description": "Arrival location (address, station name, building name, etc.)"}}, "required": ["pickup_location", "destination"]}}}, {"type": "function", "function": {"name": "recommendLuckMessage", "description": "It is a function that recommends lucky words randomly.", "parameters": {"type": "object", "properties": {}, "required": []}}}, {"type": "function", "function": {"name": "calculateCaloriesBurnedByWalking", "description": "Calculate the amount of calories consumed while walking on a given street.", "parameters": {"type": "object", "properties": {"distance": {"type": "number", "description": "Walking distance (kilometers)"}, "weight": {"type": "number", "description": "User's weight (kilogram unit)"}}, "required": ["distance", "weight"]}}}, {"type": "function", "function": {"name": "calculateCaloricNeeds", "description": "A function that estimates the average daily calorie consumption", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}, "height": {"type": "number", "description": "Centimeter key"}, "age": {"type": "integer", "description": "age"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["weight", "height", "age", "gender"]}}}], "type_of_output": "relevance", "ground_truth": {"role": "assistant", "content": "There is no function to book a ticket directly."}, "acceptable_arguments": null}
{"serial_num": 93, "category": "REJECT", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Can you check my tax refund? The name is Kim Young-hee, the date of birth is 1980-05-15, and the phone number is 010-1234-5678."}], "input_tools": [{"type": "function", "function": {"name": "getWeatherForecastForNext7Days", "description": "For the designated area, we offer a 7 -day weather forecast, including today.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "The name of the area where the weather forecast"}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "DeleteEvent", "description": "Delete schedule from calendar", "parameters": {"type": "object", "properties": {"event_id": {"type": "string", "description": "ID of the schedule to be deleted"}}, "required": ["event_id"]}}}, {"type": "function", "function": {"name": "find_group_or_club", "description": "Provides meetings or club information on certain topics based on the area around the specific location.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Where to find a meeting or club"}, "topic": {"type": "string", "description": "Interest"}}, "required": ["location", "topic"]}}}, {"type": "function", "function": {"name": "update_contact", "description": "Update (modify or add) contents of existing contacts.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "Name stored in the current contact"}, "new_name": {"type": "string", "description": "Name to update"}, "new_phone": {"type": "string", "description": "Phone number to update"}, "new_email": {"type": "string", "description": "Email address to be updated"}}, "required": ["name"]}}}, {"type": "function", "function": {"name": "transferMoney", "description": "Send money to a specific account.", "parameters": {"type": "object", "properties": {"receiver_bank": {"type": "string", "description": "Bank"}, "receiver_account": {"type": "string", "description": "Account number to send"}, "amount": {"type": "number", "description": "Missing money (unit: krw))"}}, "required": ["receiver_bank", "receiver_account", "amount"]}}}], "type_of_output": "relevance", "ground_truth": {"role": "assistant", "content": "There is no function to check the tax refund directly."}, "acceptable_arguments": null}
{"serial_num": 94, "category": "REJECT", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Hong Gil-dong, phone number 010-1111-2222, born July 21, 1994, check the tax refund."}], "input_tools": [{"type": "function", "function": {"name": "translate_text_to_english", "description": "Translate the given text into English", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Text translation in English"}}, "required": ["text"]}}}, {"type": "function", "function": {"name": "informLottoNumberByRound", "description": "It is a function that informs the lottery winning number of a specific episode.", "parameters": {"type": "object", "properties": {"round": {"type": "integer", "description": "The round to check the lottery winning number"}}, "required": ["round"]}}}, {"type": "function", "function": {"name": "count_uppercase_letters", "description": "The number of uppercase letters in the string", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Cell string"}}, "required": ["text"]}}}, {"type": "function", "function": {"name": "getMonthlyBoxOfficeRanking", "description": "It offers a monthly box office ranking for the designated year and month.", "parameters": {"type": "object", "properties": {"year": {"type": "string", "description": "The year to look up (yyyy format)"}, "month": {"type": "string", "description": "Month to look up (MM format)"}}, "required": ["year", "month"]}}}, {"type": "function", "function": {"name": "calculateWaterIntakeRequirement", "description": "Daily recommended water intake based on weight based on weight", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}}, "required": ["weight"]}}}], "type_of_output": "relevance", "ground_truth": {"role": "assistant", "content": "There is no function to check the tax refund directly."}, "acceptable_arguments": null}
{"serial_num": 95, "category": "REJECT", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Please check the tax refund status. Jung Min-ho, 1992-01-16, mobile phone number 010-5555-6666"}], "input_tools": [{"type": "function", "function": {"name": "convert_currency", "description": "Returns a value that exchanges a currency into another currency.", "parameters": {"type": "object", "properties": {"amount": {"type": "number", "description": "Money"}, "from": {"type": "string", "description": "Type of currency currency exchange"}, "to": {"type": "string", "description": "Type of currency exchange results"}}, "required": ["amount", "from", "to"]}}}, {"type": "function", "function": {"name": "transferMoney", "description": "Send money to a specific account.", "parameters": {"type": "object", "properties": {"receiver_bank": {"type": "string", "description": "Bank"}, "receiver_account": {"type": "string", "description": "Account number to send"}, "amount": {"type": "number", "description": "Missing money (unit: krw))"}}, "required": ["receiver_bank", "receiver_account", "amount"]}}}, {"type": "function", "function": {"name": "get_currency_trend_3months", "description": "Provides exchange rate fluctuations for the last three months for the designated currency", "parameters": {"type": "object", "properties": {"currency_code": {"type": "string", "description": "Code of currency to bring the exchange rate fluctuations (e.g. USD, EUR, JPY)"}}, "required": ["currency_code"]}}}, {"type": "function", "function": {"name": "getCurrentTopSeries", "description": "We offer the current popular TV series rankings", "parameters": {"type": "object", "properties": {}, "required": []}}}, {"type": "function", "function": {"name": "calculateTimeDifference", "description": "The time difference between the two regions is returned every time.", "parameters": {"type": "object", "properties": {"fromTimezone": {"type": "string", "description": "Time zone area"}, "toTimezone": {"type": "string", "description": "Time zone area for comparison"}}, "required": ["fromTimezone", "toTimezone"]}}}], "type_of_output": "relevance", "ground_truth": {"role": "assistant", "content": "There is no function to check the tax refund directly."}, "acceptable_arguments": null}
{"serial_num": 96, "category": "REJECT", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "I want to check the tax refund. The name Seo Yoon-mi, the date of birth is 1964-12-31, and the contacts are 010-5656-7878."}], "input_tools": [{"type": "function", "function": {"name": "convert_eur_to_jpy", "description": "Convert the given Euro (EUR) amount to JPY", "parameters": {"type": "object", "properties": {"amount_eur": {"type": "number", "description": "EUR amount to convert"}}, "required": ["amount_eur"]}}}, {"type": "function", "function": {"name": "compare_office_supplies_prices", "description": "Compare office supplies prices of various stores and provide the lowest price information.", "parameters": {"type": "object", "properties": {"product_name": {"type": "string", "description": "Product name that wants to compare prices"}, "quantity": {"type": "integer", "description": "Quantity"}}, "required": ["product_name", "quantity"]}}}, {"type": "function", "function": {"name": "calculateLifeExpectancy", "description": "BMI, physical activity level, and smoking status estimates average life expectancy", "parameters": {"type": "object", "properties": {"BMI": {"type": "number", "description": "Body mass index (BMI)"}, "activityLevel": {"type": "string", "description": "Physical activity level (low, normal, high choice)"}, "smokingStatus": {"type": "boolean", "description": "Smoking state (smoking = true, non -smoking = false)"}}, "required": ["BMI", "activityLevel", "smokingStatus"]}}}, {"type": "function", "function": {"name": "update_contact", "description": "Update (modify or add) contents of existing contacts.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "Name stored in the current contact"}, "new_name": {"type": "string", "description": "Name to update"}, "new_phone": {"type": "string", "description": "Phone number to update"}, "new_email": {"type": "string", "description": "Email address to be updated"}}, "required": ["name"]}}}, {"type": "function", "function": {"name": "informTyphoon", "description": "It provides location information of the current typhoon.", "parameters": {"type": "object", "properties": {"typhoonName": {"type": "string", "description": "The name of the typhoon to look upon"}}, "required": ["typhoonName"]}}}], "type_of_output": "relevance", "ground_truth": {"role": "assistant", "content": "There is no function to directly check the tax refund."}, "acceptable_arguments": null}
{"serial_num": 97, "category": "REJECT", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Take the laundry from the office tomorrow at 1 pm."}], "input_tools": [{"type": "function", "function": {"name": "calculate_bmi", "description": "Calculation of human body mass index (BMI)", "parameters": {"type": "object", "properties": {"height": {"type": "number", "description": "Centimeter key"}, "weight": {"type": "number", "description": "Kilogram unit weight"}}, "required": ["height", "weight"]}}}, {"type": "function", "function": {"name": "add_item_to_shopping_cart", "description": "Add new products to the shopping cart", "parameters": {"type": "object", "properties": {"product_id": {"type": "string", "description": "The unique identifier of the product you want to add"}, "quantity": {"type": "integer", "description": "Quantity"}}, "required": ["product_id", "quantity"]}}}, {"type": "function", "function": {"name": "get_movie_schedule", "description": "Inquire a certain date and screening schedule for a specific movie theater.", "parameters": {"type": "object", "properties": {"movie_date": {"type": "string", "description": "Date to look up (YYYY-MM-DD)"}, "movie_location": {"type": "string", "description": "Cinema to look upon"}}, "required": ["movie_date", "movie_location"]}}}, {"type": "function", "function": {"name": "searchFriendBirthday", "description": "A function that enters a friend's name and searches for birthday information", "parameters": {"type": "object", "properties": {"friendName": {"type": "string", "description": "A friend's name to search"}}, "required": ["friendName"]}}}, {"type": "function", "function": {"name": "track_order", "description": "Inquire an order status (ordering, payment completion, shipping, delivery, etc.) with a given order number and informed the expected shipping date or expected delivery date.", "parameters": {"type": "object", "properties": {"order_id": {"type": "string", "description": "Order number to search"}}, "required": ["order_id"]}}}], "type_of_output": "relevance", "ground_truth": {"role": "assistant", "content": "There is no laundry collection reservation function."}, "acceptable_arguments": null}
{"serial_num": 98, "category": "REJECT", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "I'm going to apply for a laundry collection service tomorrow evening at 6 pm."}], "input_tools": [{"type": "function", "function": {"name": "translate_text_to_english", "description": "Translate the given text into English", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Text translation in English"}}, "required": ["text"]}}}, {"type": "function", "function": {"name": "add_contact", "description": "Register a new contact.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "Name to register a contact"}, "phone": {"type": "string", "description": "phone number"}, "email": {"type": "string", "description": "Email address"}}, "required": ["name"]}}}, {"type": "function", "function": {"name": "search_email_content", "description": "Search for emails containing keywords specified by the user during the saved email.", "parameters": {"type": "object", "properties": {"keyword": {"type": "string", "description": "Keyword to search"}, "from_date": {"type": "string", "description": "Date to start searching (optional)"}, "to_date": {"type": "string", "description": "Date to finish the search (optional)"}, "sender": {"type": "string", "description": "Email caller address (optional)"}}, "required": ["keyword"]}}}, {"type": "function", "function": {"name": "setTimer", "description": "Set the timer as much as the user requested.", "parameters": {"type": "object", "properties": {"duration": {"type": "number", "description": "Timer setting time (unit: seconds)"}}, "required": ["duration"]}}}, {"type": "function", "function": {"name": "get_exchange_rate", "description": "Bring the exchange rate between the two currencies.", "parameters": {"type": "object", "properties": {"base_currency": {"type": "string", "description": "The Currency to Convert from."}, "target_currency": {"type": "string", "description": "The current to convert to."}}, "required": ["base_currency", "target_currency"]}}}], "type_of_output": "relevance", "ground_truth": {"role": "assistant", "content": "There is no laundry collection reservation function."}, "acceptable_arguments": null}
{"serial_num": 99, "category": "REJECT", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "4:00 pm, is it possible to collect laundry at home?"}], "input_tools": [{"type": "function", "function": {"name": "add_item_to_shopping_cart", "description": "Add new products to the shopping cart", "parameters": {"type": "object", "properties": {"product_id": {"type": "string", "description": "The unique identifier of the product you want to add"}, "quantity": {"type": "integer", "description": "Quantity"}}, "required": ["product_id", "quantity"]}}}, {"type": "function", "function": {"name": "CheckTaxRefund", "description": "Search for the user's tax refund.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "The name of the tax paymenter"}, "birth": {"type": "string", "description": "Date of birth of tax payers (YYYY-MM-DD)"}, "phone_number": {"type": "string", "description": "Contact of tax payers"}}, "required": ["name", "birth", "phone_number"]}}}, {"type": "function", "function": {"name": "get_rainfall_probability", "description": "It brings probability information in a particular area.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Local name"}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "discover_new_releases_hiphop", "description": "Provides the latest music release information of the hip -hop genre", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "recommendLottoNumber", "description": "It is a function that recommends a lotto number randomly.", "parameters": {"type": "object", "properties": {}, "required": []}}}], "type_of_output": "relevance", "ground_truth": {"role": "assistant", "content": "There is no laundry collection reservation function."}, "acceptable_arguments": null}
{"serial_num": 100, "category": "REJECT", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "I would like to apply for a laundry collection service to Pangyo office."}], "input_tools": [{"type": "function", "function": {"name": "discover_new_releases_kpop", "description": "Provides the latest music release information of the K -pop genre", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "recommendLottoNumber", "description": "It is a function that recommends a lotto number randomly.", "parameters": {"type": "object", "properties": {}, "required": []}}}, {"type": "function", "function": {"name": "CheckTaxRefund", "description": "Search for the user's tax refund.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "The name of the tax paymenter"}, "birth": {"type": "string", "description": "Date of birth of tax payers (YYYY-MM-DD)"}, "phone_number": {"type": "string", "description": "Contact of tax payers"}}, "required": ["name", "birth", "phone_number"]}}}, {"type": "function", "function": {"name": "check_traffic_status", "description": "Inquire the current traffic situation on a particular path.", "parameters": {"type": "object", "properties": {"start_location": {"type": "string", "description": "Departure"}, "end_location": {"type": "string", "description": "Arrival point"}}, "required": ["start_location", "end_location"]}}}, {"type": "function", "function": {"name": "count_lowercase_letters", "description": "The number of lowercase in the string", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Cell string for lowercase"}}, "required": ["text"]}}}], "type_of_output": "relevance", "ground_truth": {"role": "assistant", "content": "There is no laundry collection reservation function."}, "acceptable_arguments": null}
{"serial_num": 1, "category": "SLOT-all", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Do you know stock prices now?"}], "input_tools": [{"type": "function", "function": {"name": "convert_euro_to_koruna", "description": "Convert the Given EUR amount to Czech Coruna (CZK)", "parameters": {"type": "object", "properties": {"amount_euro": {"type": "number", "description": "EUR amount to convert"}, "exchange_rate_eur_to_czk": {"type": "number", "description": "Exchange rate from EUR to CZK"}}, "required": ["amount_euro", "exchange_rate_eur_to_czk"]}}}, {"type": "function", "function": {"name": "add_item_to_shopping_cart", "description": "Add new products to the shopping cart", "parameters": {"type": "object", "properties": {"product_id": {"type": "string", "description": "The unique identifier of the product you want to add"}, "quantity": {"type": "integer", "description": "Quantity"}}, "required": ["product_id", "quantity"]}}}, {"type": "function", "function": {"name": "get_stock_price", "description": "Search the current price of a particular stock.", "parameters": {"type": "object", "properties": {"stock_name": {"type": "string", "description": "Stock name to look up"}}, "required": ["stock_name"]}}}, {"type": "function", "function": {"name": "informWeather", "description": "Provide current weather information in a particular area", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Local name to bring weather information"}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "searchFriendBirthday", "description": "A function that enters a friend's name and searches for birthday information", "parameters": {"type": "object", "properties": {"friendName": {"type": "string", "description": "A friend's name to search"}}, "required": ["friendName"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Which stock will you look up? Please tell me the name of the stock to look up."}, "acceptable_arguments": null}
{"serial_num": 2, "category": "SLOT-all", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "I'm going to invest, but can I find out what the stock price is?"}], "input_tools": [{"type": "function", "function": {"name": "create_user", "description": "Create a new user account.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "User's name"}, "email": {"type": "string", "description": "User's email address"}, "password": {"type": "string", "description": "User's password"}}, "required": ["name", "email", "password"]}}}, {"type": "function", "function": {"name": "get_movie_details", "description": "Genre, directors, actors, plot, and screening time provide detailed information.", "parameters": {"type": "object", "properties": {"title": {"type": "string", "description": "Film title"}, "year": {"type": "integer", "description": "Movie release year"}}, "required": ["title"]}}}, {"type": "function", "function": {"name": "get_stock_price", "description": "Search the current price of a particular stock.", "parameters": {"type": "object", "properties": {"stock_name": {"type": "string", "description": "Stock name to look up"}}, "required": ["stock_name"]}}}, {"type": "function", "function": {"name": "OrderPizza", "description": "Order pizza.", "parameters": {"type": "object", "properties": {"PizzaType": {"type": "string", "description": "Pizza"}, "size": {"type": "string", "description": "Pizza size (extracted as it is, example: Small, L, Medium, etc.)"}, "quantity": {"type": "integer", "description": "Order quantity"}}, "required": ["PizzaType", "size", "quantity"]}}}, {"type": "function", "function": {"name": "count_lowercase_letters", "description": "The number of lowercase in the string", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Cell string for lowercase"}}, "required": ["text"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Which stock will you look up? Please tell me the name of the stock to look up."}, "acceptable_arguments": null}
{"serial_num": 3, "category": "SLOT-all", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "I'm going to have a stock investment and I'm going to put it in another this time, but let me know the price now"}], "input_tools": [{"type": "function", "function": {"name": "get_movie_schedule", "description": "Inquire a certain date and screening schedule for a specific movie theater.", "parameters": {"type": "object", "properties": {"movie_date": {"type": "string", "description": "Date to look up (YYYY-MM-DD)"}, "movie_location": {"type": "string", "description": "Cinema to look upon"}}, "required": ["movie_date", "movie_location"]}}}, {"type": "function", "function": {"name": "schedule_meeting", "description": "Book a meeting.", "parameters": {"type": "object", "properties": {"participants": {"type": "string", "description": "Participant list (if there are multiple participants, it is divided into a comma (,).)"}, "date_time": {"type": "string", "description": "Date and time of meeting (yyyy-mm-dd hh: mm format)"}}, "required": ["participants", "date_time"]}}}, {"type": "function", "function": {"name": "get_stock_price", "description": "Search the current price of a particular stock.", "parameters": {"type": "object", "properties": {"stock_name": {"type": "string", "description": "Stock name to look up"}}, "required": ["stock_name"]}}}, {"type": "function", "function": {"name": "getDailyNewsHeadlines", "description": "Today's main news headline is provided.", "parameters": {"type": "object", "properties": {}, "required": []}}}, {"type": "function", "function": {"name": "convert_eur_to_jpy", "description": "Convert the given Euro (EUR) amount to JPY", "parameters": {"type": "object", "properties": {"amount_eur": {"type": "number", "description": "EUR amount to convert"}}, "required": ["amount_eur"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Which stock will you look up? Please tell me the name of the stock to look up."}, "acceptable_arguments": null}
{"serial_num": 4, "category": "SLOT-all", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "I'm going to buy stocks for long -term investment."}], "input_tools": [{"type": "function", "function": {"name": "convertTimeBetweenTimezones", "description": "Convert time to another time in one time.", "parameters": {"type": "object", "properties": {"originalTime": {"type": "string", "description": "Reference time to convert (format HH: mm)"}, "fromTimezone": {"type": "string", "description": "Standard time zone (region name)"}, "toTimezone": {"type": "string", "description": "Time to be converted (region name)"}}, "required": ["originalTime", "fromTimezone", "toTimezone"]}}}, {"type": "function", "function": {"name": "find_group_or_club", "description": "Provides meetings or club information on certain topics based on the area around the specific location.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Where to find a meeting or club"}, "topic": {"type": "string", "description": "Interest"}}, "required": ["location", "topic"]}}}, {"type": "function", "function": {"name": "get_stock_price", "description": "Search the current price of a particular stock.", "parameters": {"type": "object", "properties": {"stock_name": {"type": "string", "description": "Stock name to look up"}}, "required": ["stock_name"]}}}, {"type": "function", "function": {"name": "compare_it_device_prices", "description": "It compares the price of IT devices from various sellers to provide low sales information.", "parameters": {"type": "object", "properties": {"device_name": {"type": "string", "description": "Name of IT devices that want to compare prices"}}, "required": ["device_name"]}}}, {"type": "function", "function": {"name": "deleteMemo", "description": "Delete the previously stored notes", "parameters": {"type": "object", "properties": {"memo_id": {"type": "string", "description": "A unique identifier of the memo to delete"}}, "required": ["memo_id"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Which stock will you look up? Please tell me the name of the stock to look up."}, "acceptable_arguments": null}
{"serial_num": 5, "category": "SLOT-all", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Please check the order status with the order number."}], "input_tools": [{"type": "function", "function": {"name": "update_item_quantity_in_shopping_cart", "description": "Update the quantity of specific products in the shopping cart", "parameters": {"type": "object", "properties": {"user_id": {"type": "string", "description": "User's unique identifier"}, "product_id": {"type": "string", "description": "A unique identifier of products that want to update the quantity"}, "new_quantity": {"type": "integer", "description": "New quantity to update"}}, "required": ["user_id", "product_id", "new_quantity"]}}}, {"type": "function", "function": {"name": "convert_eur_to_jpy", "description": "Convert the given Euro (EUR) amount to JPY", "parameters": {"type": "object", "properties": {"amount_eur": {"type": "number", "description": "EUR amount to convert"}}, "required": ["amount_eur"]}}}, {"type": "function", "function": {"name": "track_order", "description": "Inquire an order status (ordering, payment completion, shipping, delivery, etc.) with a given order number and informed the expected shipping date or expected delivery date.", "parameters": {"type": "object", "properties": {"order_id": {"type": "string", "description": "Order number to search"}}, "required": ["order_id"]}}}, {"type": "function", "function": {"name": "convert_euro_to_koruna", "description": "Convert the Given EUR amount to Czech Coruna (CZK)", "parameters": {"type": "object", "properties": {"amount_euro": {"type": "number", "description": "EUR amount to convert"}, "exchange_rate_eur_to_czk": {"type": "number", "description": "Exchange rate from EUR to CZK"}}, "required": ["amount_euro", "exchange_rate_eur_to_czk"]}}}, {"type": "function", "function": {"name": "generate_playlist_based_on_favorite_artist", "description": "Create customized playlist based on preferred artists", "parameters": {"type": "object", "properties": {"artist_name": {"type": "string", "description": "The name of the artist that users prefer"}}, "required": ["artist_name"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the order number to search for the order status."}, "acceptable_arguments": null}
{"serial_num": 6, "category": "SLOT-all", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "I wonder when things will come, but can I track the order status?"}], "input_tools": [{"type": "function", "function": {"name": "add_movie_review", "description": "Add a review of a specific movie to the movie scrapbook.", "parameters": {"type": "object", "properties": {"movie_id": {"type": "string", "description": "ID of the movie to add a review"}, "review_text": {"type": "string", "description": "Movie review contents"}}, "required": ["movie_id", "review_text"]}}}, {"type": "function", "function": {"name": "search_email_content", "description": "Search for emails containing keywords specified by the user during the saved email.", "parameters": {"type": "object", "properties": {"keyword": {"type": "string", "description": "Keyword to search"}, "from_date": {"type": "string", "description": "Date to start searching (optional)"}, "to_date": {"type": "string", "description": "Date to finish the search (optional)"}, "sender": {"type": "string", "description": "Email caller address (optional)"}}, "required": ["keyword"]}}}, {"type": "function", "function": {"name": "track_order", "description": "Inquire an order status (ordering, payment completion, shipping, delivery, etc.) with a given order number and informed the expected shipping date or expected delivery date.", "parameters": {"type": "object", "properties": {"order_id": {"type": "string", "description": "Order number to search"}}, "required": ["order_id"]}}}, {"type": "function", "function": {"name": "deleteMemo", "description": "Delete the previously stored notes", "parameters": {"type": "object", "properties": {"memo_id": {"type": "string", "description": "A unique identifier of the memo to delete"}}, "required": ["memo_id"]}}}, {"type": "function", "function": {"name": "informLottoNumberByRound", "description": "It is a function that informs the lottery winning number of a specific episode.", "parameters": {"type": "object", "properties": {"round": {"type": "integer", "description": "The round to check the lottery winning number"}}, "required": ["round"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the order number to track the order status."}, "acceptable_arguments": null}
{"serial_num": 7, "category": "SLOT-all", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Did you start delivery? Please check the order status."}], "input_tools": [{"type": "function", "function": {"name": "CallTaxi", "description": "Call a taxi from a specific location.", "parameters": {"type": "object", "properties": {"pickup_location": {"type": "string", "description": "Departure location (address, station name, building name, etc.)"}, "destination": {"type": "string", "description": "Arrival location (address, station name, building name, etc.)"}}, "required": ["pickup_location", "destination"]}}}, {"type": "function", "function": {"name": "calculate_distance", "description": "Based on location data, the distance between the two locations (kilometer units) is calculated", "parameters": {"type": "object", "properties": {"origin": {"type": "string", "description": "Standard location (city, state, country, village, landmark, etc.)"}, "destination": {"type": "string", "description": "Destination (city, state, country, village, landmark, etc.)"}}, "required": ["origin", "destination"]}}}, {"type": "function", "function": {"name": "track_order", "description": "Inquire an order status (ordering, payment completion, shipping, delivery, etc.) with a given order number and informed the expected shipping date or expected delivery date.", "parameters": {"type": "object", "properties": {"order_id": {"type": "string", "description": "Order number to search"}}, "required": ["order_id"]}}}, {"type": "function", "function": {"name": "view_shopping_cart", "description": "User's shopping cart contents inquiry", "parameters": {"type": "object", "properties": {"user_id": {"type": "string", "description": "User's unique identifier"}}, "required": ["user_id"]}}}, {"type": "function", "function": {"name": "calculate_bill_split", "description": "Divide the billed amount evenly to calculate the amount of money for each person.", "parameters": {"type": "object", "properties": {"bill_total": {"type": "number", "description": "Allied total amount"}, "num_people": {"type": "integer", "description": "The number of people who pay the amount."}}, "required": ["bill_total", "num_people"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the order number to search for the order status."}, "acceptable_arguments": null}
{"serial_num": 8, "category": "SLOT-all", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "I wonder what the product I ordered is. Can you inquire"}], "input_tools": [{"type": "function", "function": {"name": "check_traffic_status", "description": "Inquire the current traffic situation on a particular path.", "parameters": {"type": "object", "properties": {"start_location": {"type": "string", "description": "Departure"}, "end_location": {"type": "string", "description": "Arrival point"}}, "required": ["start_location", "end_location"]}}}, {"type": "function", "function": {"name": "schedule_meeting", "description": "Book a meeting.", "parameters": {"type": "object", "properties": {"participants": {"type": "string", "description": "Participant list (if there are multiple participants, it is divided into a comma (,).)"}, "date_time": {"type": "string", "description": "Date and time of meeting (yyyy-mm-dd hh: mm format)"}}, "required": ["participants", "date_time"]}}}, {"type": "function", "function": {"name": "track_order", "description": "Inquire an order status (ordering, payment completion, shipping, delivery, etc.) with a given order number and informed the expected shipping date or expected delivery date.", "parameters": {"type": "object", "properties": {"order_id": {"type": "string", "description": "Order number to search"}}, "required": ["order_id"]}}}, {"type": "function", "function": {"name": "convert_eur_to_jpy", "description": "Convert the given Euro (EUR) amount to JPY", "parameters": {"type": "object", "properties": {"amount_eur": {"type": "number", "description": "EUR amount to convert"}}, "required": ["amount_eur"]}}}, {"type": "function", "function": {"name": "informLottoWinnerPrizeByDate", "description": "It is a function that informs the amount of lottery winnings on a specific date.", "parameters": {"type": "object", "properties": {"date": {"type": "string", "description": "Date to check the amount of lottery winnings (e.g., March 4)"}}, "required": ["date"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the order number to search for the order status."}, "acceptable_arguments": null}
{"serial_num": 9, "category": "SLOT-all", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "I need a timer because I think I should cook the ingredients."}], "input_tools": [{"type": "function", "function": {"name": "generate_syntax_tree_from_text", "description": "Create a syntax tree for a given text", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Text to create a syntax tree"}}, "required": ["text"]}}}, {"type": "function", "function": {"name": "deleteMemo", "description": "Delete the previously stored notes", "parameters": {"type": "object", "properties": {"memo_id": {"type": "string", "description": "A unique identifier of the memo to delete"}}, "required": ["memo_id"]}}}, {"type": "function", "function": {"name": "setTimer", "description": "Set the timer as much as the user requested.", "parameters": {"type": "object", "properties": {"duration": {"type": "number", "description": "Timer setting time (unit: seconds)"}}, "required": ["duration"]}}}, {"type": "function", "function": {"name": "registerFriendBirthday", "description": "A function that registers a friend's name and birthday information", "parameters": {"type": "object", "properties": {"friendName": {"type": "string", "description": "A friend's name to register"}, "birthday": {"type": "string", "description": "The birthday of a friend to register (YYYY-MM-DD format)"}}, "required": ["friendName", "birthday"]}}}, {"type": "function", "function": {"name": "count_lowercase_letters", "description": "The number of lowercase in the string", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Cell string for lowercase"}}, "required": ["text"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "How many seconds to set the timer?"}, "acceptable_arguments": null}
{"serial_num": 10, "category": "SLOT-all", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "I boiled eggs and I want to put it in cold water for a while. Start the timer."}], "input_tools": [{"type": "function", "function": {"name": "count_uppercase_letters", "description": "The number of uppercase letters in the string", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Cell string"}}, "required": ["text"]}}}, {"type": "function", "function": {"name": "calculateWaterIntakeRequirement", "description": "Daily recommended water intake based on weight based on weight", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}}, "required": ["weight"]}}}, {"type": "function", "function": {"name": "setTimer", "description": "Set the timer as much as the user requested.", "parameters": {"type": "object", "properties": {"duration": {"type": "number", "description": "Timer setting time (unit: seconds)"}}, "required": ["duration"]}}}, {"type": "function", "function": {"name": "get_movie_schedule", "description": "Inquire a certain date and screening schedule for a specific movie theater.", "parameters": {"type": "object", "properties": {"movie_date": {"type": "string", "description": "Date to look up (YYYY-MM-DD)"}, "movie_location": {"type": "string", "description": "Cinema to look upon"}}, "required": ["movie_date", "movie_location"]}}}, {"type": "function", "function": {"name": "compareCleaningServices", "description": "Compare the service of the cleaning company and provide information.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Location or area where cleaning services are needed"}, "requested_date": {"type": "string", "format": "date", "description": "Service date (extract user as it is. Example: next Monday, January 1, 2022, etc.)"}, "size": {"type": "string", "description": "Pyeongsu or area of ​​the house (flat, square meter)"}}, "required": ["location", "requested_date", "size"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "How many seconds to set the timer?"}, "acceptable_arguments": null}
{"serial_num": 11, "category": "SLOT-all", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "I'm going to squat. Set the timer."}], "input_tools": [{"type": "function", "function": {"name": "informLottoWinnerPrizeByRound", "description": "It is a function that informs the amount of lottery winnings of a specific episode.", "parameters": {"type": "object", "properties": {"round": {"type": "integer", "description": "A round that wants to check the amount of lottery winnings (e.g. 1001)"}}, "required": ["round"]}}}, {"type": "function", "function": {"name": "search_email_content", "description": "Search for emails containing keywords specified by the user during the saved email.", "parameters": {"type": "object", "properties": {"keyword": {"type": "string", "description": "Keyword to search"}, "from_date": {"type": "string", "description": "Date to start searching (optional)"}, "to_date": {"type": "string", "description": "Date to finish the search (optional)"}, "sender": {"type": "string", "description": "Email caller address (optional)"}}, "required": ["keyword"]}}}, {"type": "function", "function": {"name": "setTimer", "description": "Set the timer as much as the user requested.", "parameters": {"type": "object", "properties": {"duration": {"type": "number", "description": "Timer setting time (unit: seconds)"}}, "required": ["duration"]}}}, {"type": "function", "function": {"name": "getDayOfWeek", "description": "Returns the day of the given date.", "parameters": {"type": "object", "properties": {"date": {"type": "string", "description": "Yyyy-mm-DD format date"}}, "required": ["date"]}}}, {"type": "function", "function": {"name": "calculate_distance", "description": "Based on location data, the distance between the two locations (kilometer units) is calculated", "parameters": {"type": "object", "properties": {"origin": {"type": "string", "description": "Standard location (city, state, country, village, landmark, etc.)"}, "destination": {"type": "string", "description": "Destination (city, state, country, village, landmark, etc.)"}}, "required": ["origin", "destination"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "How many seconds to set the timer?"}, "acceptable_arguments": null}
{"serial_num": 12, "category": "SLOT-all", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Can you start the timer for a brief meditation?"}], "input_tools": [{"type": "function", "function": {"name": "find_nearest_emergency_room_by_location", "description": "Based on a specific location, it provides the location and information of the nearby emergency room.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Current location (example: station, address, building name, etc.)"}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "add_contact", "description": "Register a new contact.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "Name to register a contact"}, "phone": {"type": "string", "description": "phone number"}, "email": {"type": "string", "description": "Email address"}}, "required": ["name"]}}}, {"type": "function", "function": {"name": "setTimer", "description": "Set the timer as much as the user requested.", "parameters": {"type": "object", "properties": {"duration": {"type": "number", "description": "Timer setting time (unit: seconds)"}}, "required": ["duration"]}}}, {"type": "function", "function": {"name": "create_user", "description": "Create a new user account.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "User's name"}, "email": {"type": "string", "description": "User's email address"}, "password": {"type": "string", "description": "User's password"}}, "required": ["name", "email", "password"]}}}, {"type": "function", "function": {"name": "count_words", "description": "Calculation of words in a given text (sentence or paragraph)", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Cell text"}}, "required": ["text"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "How many seconds to set the timer?"}, "acceptable_arguments": null}
{"serial_num": 13, "category": "SLOT-all", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "How much is the cryptocurrency traded today?"}], "input_tools": [{"type": "function", "function": {"name": "CallTaxi", "description": "Call a taxi from a specific location.", "parameters": {"type": "object", "properties": {"pickup_location": {"type": "string", "description": "Departure location (address, station name, building name, etc.)"}, "destination": {"type": "string", "description": "Arrival location (address, station name, building name, etc.)"}}, "required": ["pickup_location", "destination"]}}}, {"type": "function", "function": {"name": "convert_squaremeter_to_pyeong", "description": "Convert it to \"제곱미터\"를 입력받아서, \"평\".", "parameters": {"type": "object", "properties": {"squaremeter": {"type": "number", "description": "Square"}}, "required": ["squaremeter"]}}}, {"type": "function", "function": {"name": "getCryptocurrencyPrice", "description": "Inquire the current price of a specific cryptocurrency.", "parameters": {"type": "object", "properties": {"cryptocurrency": {"type": "string", "description": "Cryptocurrency name to view the price"}}, "required": ["cryptocurrency"]}}}, {"type": "function", "function": {"name": "search_contact", "description": "Search for a list of contacts in the name of a person and bring his phone number and email address.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "The name of a person who wants to check the contact"}}, "required": ["name"]}}}, {"type": "function", "function": {"name": "calculateIdealWeight", "description": "Ideal weight calculation using Lorentz formula", "parameters": {"type": "object", "properties": {"height": {"type": "number", "description": "Centimeter key"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["height", "gender"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the name of the cryptocurrency to look up for the price."}, "acceptable_arguments": null}
{"serial_num": 14, "category": "SLOT-all", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Can you find out what's going on now?"}], "input_tools": [{"type": "function", "function": {"name": "calculate_bill_split", "description": "Divide the billed amount evenly to calculate the amount of money for each person.", "parameters": {"type": "object", "properties": {"bill_total": {"type": "number", "description": "Allied total amount"}, "num_people": {"type": "integer", "description": "The number of people who pay the amount."}}, "required": ["bill_total", "num_people"]}}}, {"type": "function", "function": {"name": "search_flight", "description": "Search for a flight from a specific airport and arriving at a specific airport.", "parameters": {"type": "object", "properties": {"departure_airport": {"type": "string", "description": "Departure airport name (extracted as user expression. Example: Los Angeles International Airport, Gimhae Airport, etc.)"}, "arrival_airport": {"type": "string", "description": "Arrival airport name (extracting as it is, Example: Los Angeles International Airport, Gimhae Airport, etc.)"}, "departure_date": {"type": "string", "description": "Departure Date (YYYY-MM-DD)"}}, "required": ["departure_airport", "arrival_airport", "departure_date"]}}}, {"type": "function", "function": {"name": "getCryptocurrencyPrice", "description": "Inquire the current price of a specific cryptocurrency.", "parameters": {"type": "object", "properties": {"cryptocurrency": {"type": "string", "description": "Cryptocurrency name to view the price"}}, "required": ["cryptocurrency"]}}}, {"type": "function", "function": {"name": "check_traffic_status", "description": "Inquire the current traffic situation on a particular path.", "parameters": {"type": "object", "properties": {"start_location": {"type": "string", "description": "Departure"}, "end_location": {"type": "string", "description": "Arrival point"}}, "required": ["start_location", "end_location"]}}}, {"type": "function", "function": {"name": "schedule_meeting", "description": "Book a meeting.", "parameters": {"type": "object", "properties": {"participants": {"type": "string", "description": "Participant list (if there are multiple participants, it is divided into a comma (,).)"}, "date_time": {"type": "string", "description": "Date and time of meeting (yyyy-mm-dd hh: mm format)"}}, "required": ["participants", "date_time"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the name of the cryptocurrency to look up for the price."}, "acceptable_arguments": null}
{"serial_num": 15, "category": "SLOT-all", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "How much is the cryptocurrency now?"}], "input_tools": [{"type": "function", "function": {"name": "compareCleaningServices", "description": "Compare the service of the cleaning company and provide information.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Location or area where cleaning services are needed"}, "requested_date": {"type": "string", "format": "date", "description": "Service date (extract user as it is. Example: next Monday, January 1, 2022, etc.)"}, "size": {"type": "string", "description": "Pyeongsu or area of ​​the house (flat, square meter)"}}, "required": ["location", "requested_date", "size"]}}}, {"type": "function", "function": {"name": "checkBankBalance", "description": "Look up the balance of a specific bank account.", "parameters": {"type": "object", "properties": {"accountBank": {"type": "string", "description": "The bank name of the account to view the balance"}, "accountNumber": {"type": "string", "description": "Account number to view the balance"}}, "required": ["accountBank", "accountNumber"]}}}, {"type": "function", "function": {"name": "getCryptocurrencyPrice", "description": "Inquire the current price of a specific cryptocurrency.", "parameters": {"type": "object", "properties": {"cryptocurrency": {"type": "string", "description": "Cryptocurrency name to view the price"}}, "required": ["cryptocurrency"]}}}, {"type": "function", "function": {"name": "add_contact", "description": "Register a new contact.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "Name to register a contact"}, "phone": {"type": "string", "description": "phone number"}, "email": {"type": "string", "description": "Email address"}}, "required": ["name"]}}}, {"type": "function", "function": {"name": "CheckTaxRefund", "description": "Search for the user's tax refund.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "The name of the tax paymenter"}, "birth": {"type": "string", "description": "Date of birth of tax payers (YYYY-MM-DD)"}, "phone_number": {"type": "string", "description": "Contact of tax payers"}}, "required": ["name", "birth", "phone_number"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the name of the cryptocurrency to look up for the price."}, "acceptable_arguments": null}
{"serial_num": 16, "category": "SLOT-all", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Can you know the current price of cryptocurrency?"}], "input_tools": [{"type": "function", "function": {"name": "calculate_distance", "description": "Based on location data, the distance between the two locations (kilometer units) is calculated", "parameters": {"type": "object", "properties": {"origin": {"type": "string", "description": "Standard location (city, state, country, village, landmark, etc.)"}, "destination": {"type": "string", "description": "Destination (city, state, country, village, landmark, etc.)"}}, "required": ["origin", "destination"]}}}, {"type": "function", "function": {"name": "getHistoricalMinMaxTemperature", "description": "In the past, we look up for the minimum temperature and the highest temperature in certain regions.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "The name of the area to be searched"}, "date": {"type": "string", "description": "Date to look up ('YYYY-MM-DD' format)"}}, "required": ["location", "date"]}}}, {"type": "function", "function": {"name": "getCryptocurrencyPrice", "description": "Inquire the current price of a specific cryptocurrency.", "parameters": {"type": "object", "properties": {"cryptocurrency": {"type": "string", "description": "Cryptocurrency name to view the price"}}, "required": ["cryptocurrency"]}}}, {"type": "function", "function": {"name": "schedule_laundry_pickup", "description": "Apply for a service to collect laundry.", "parameters": {"type": "object", "properties": {"pickup_location": {"type": "string", "description": "Extract the location of the user as it is to collect the laundry. (Example: House, 101 -dong 102, etc."}, "pickup_date": {"type": "string", "description": "Extract the laundry collection date as it is. (Example: next Monday, January 1, 2022, etc.)"}, "pickup_time": {"type": "string", "description": "Extract the time to collect the laundry as it is. (Example: 2 pm, 7 pm, etc.)"}}, "required": ["pickup_location", "pickup_date", "pickup_time"]}}}, {"type": "function", "function": {"name": "calculateCaloriesBurnedByWalking", "description": "Calculate the amount of calories consumed while walking on a given street.", "parameters": {"type": "object", "properties": {"distance": {"type": "number", "description": "Walking distance (kilometers)"}, "weight": {"type": "number", "description": "User's weight (kilogram unit)"}}, "required": ["distance", "weight"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the name of the cryptocurrency to look up for the price."}, "acceptable_arguments": null}
{"serial_num": 17, "category": "SLOT-all", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Can you compare the price of IT device?"}], "input_tools": [{"type": "function", "function": {"name": "getDayOfWeek", "description": "Returns the day of the given date.", "parameters": {"type": "object", "properties": {"date": {"type": "string", "description": "Yyyy-mm-DD format date"}}, "required": ["date"]}}}, {"type": "function", "function": {"name": "calculateIdealWeight", "description": "Ideal weight calculation using Lorentz formula", "parameters": {"type": "object", "properties": {"height": {"type": "number", "description": "Centimeter key"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["height", "gender"]}}}, {"type": "function", "function": {"name": "compare_it_device_prices", "description": "It compares the price of IT devices from various sellers to provide low sales information.", "parameters": {"type": "object", "properties": {"device_name": {"type": "string", "description": "Name of IT devices that want to compare prices"}}, "required": ["device_name"]}}}, {"type": "function", "function": {"name": "getCryptocurrencyPrice", "description": "Inquire the current price of a specific cryptocurrency.", "parameters": {"type": "object", "properties": {"cryptocurrency": {"type": "string", "description": "Cryptocurrency name to view the price"}}, "required": ["cryptocurrency"]}}}, {"type": "function", "function": {"name": "count_words", "description": "Calculation of words in a given text (sentence or paragraph)", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Cell text"}}, "required": ["text"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the name of the IT device that wants to compare the price."}, "acceptable_arguments": null}
{"serial_num": 18, "category": "SLOT-all", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "I want to compare the price of IT devices"}], "input_tools": [{"type": "function", "function": {"name": "informWeather", "description": "Provide current weather information in a particular area", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Local name to bring weather information"}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "convert_pyeong_to_squaremeter", "description": "Convert it to \"평\"을 입력받아서, \"제곱미터\".", "parameters": {"type": "object", "properties": {"pyeong": {"type": "number", "description": "Pyeongsu to be transformed"}}, "required": ["pyeong"]}}}, {"type": "function", "function": {"name": "compare_it_device_prices", "description": "It compares the price of IT devices from various sellers to provide low sales information.", "parameters": {"type": "object", "properties": {"device_name": {"type": "string", "description": "Name of IT devices that want to compare prices"}}, "required": ["device_name"]}}}, {"type": "function", "function": {"name": "getCurrentTopSeries", "description": "We offer the current popular TV series rankings", "parameters": {"type": "object", "properties": {}, "required": []}}}, {"type": "function", "function": {"name": "checkBankBalance", "description": "Look up the balance of a specific bank account.", "parameters": {"type": "object", "properties": {"accountBank": {"type": "string", "description": "The bank name of the account to view the balance"}, "accountNumber": {"type": "string", "description": "Account number to view the balance"}}, "required": ["accountBank", "accountNumber"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the name of the IT device that wants to compare the price."}, "acceptable_arguments": null}
{"serial_num": 19, "category": "SLOT-all", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Compare the price of electronic devices at various retailers"}], "input_tools": [{"type": "function", "function": {"name": "deleteMemo", "description": "Delete the previously stored notes", "parameters": {"type": "object", "properties": {"memo_id": {"type": "string", "description": "A unique identifier of the memo to delete"}}, "required": ["memo_id"]}}}, {"type": "function", "function": {"name": "add_movie_review", "description": "Add a review of a specific movie to the movie scrapbook.", "parameters": {"type": "object", "properties": {"movie_id": {"type": "string", "description": "ID of the movie to add a review"}, "review_text": {"type": "string", "description": "Movie review contents"}}, "required": ["movie_id", "review_text"]}}}, {"type": "function", "function": {"name": "compare_it_device_prices", "description": "It compares the price of IT devices from various sellers to provide low sales information.", "parameters": {"type": "object", "properties": {"device_name": {"type": "string", "description": "Name of IT devices that want to compare prices"}}, "required": ["device_name"]}}}, {"type": "function", "function": {"name": "create_playlist", "description": "Create a music playlist that fits the user's tastes and conditions", "parameters": {"type": "object", "properties": {"genre": {"type": "string", "description": "The genre of music to be included in the playlist"}, "mood": {"type": "string", "description": "Playlist's mood or atmosphere"}, "count": {"type": "integer", "description": "The number of songs to be included in the playlist"}, "include_live": {"type": "boolean", "description": "Live version songs include"}}, "required": ["genre", "mood", "count"]}}}, {"type": "function", "function": {"name": "convert_euro_to_koruna", "description": "Convert the Given EUR amount to Czech Coruna (CZK)", "parameters": {"type": "object", "properties": {"amount_euro": {"type": "number", "description": "EUR amount to convert"}, "exchange_rate_eur_to_czk": {"type": "number", "description": "Exchange rate from EUR to CZK"}}, "required": ["amount_euro", "exchange_rate_eur_to_czk"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the name of the IT device that wants to compare the price."}, "acceptable_arguments": null}
{"serial_num": 20, "category": "SLOT-all", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "I want to compare the price of electronic devices in various companies."}], "input_tools": [{"type": "function", "function": {"name": "add_movie_review", "description": "Add a review of a specific movie to the movie scrapbook.", "parameters": {"type": "object", "properties": {"movie_id": {"type": "string", "description": "ID of the movie to add a review"}, "review_text": {"type": "string", "description": "Movie review contents"}}, "required": ["movie_id", "review_text"]}}}, {"type": "function", "function": {"name": "convert_krw_to_usd", "description": "Converted Korean money (KRW) to USD (USD)", "parameters": {"type": "object", "properties": {"amount_krw": {"type": "number", "description": "Korean money (KRW) amount to convert"}, "exchange_rate_krw_to_usd": {"type": "number", "description": "Exchange rate from KRW to USD"}}, "required": ["amount_krw", "exchange_rate_krw_to_usd"]}}}, {"type": "function", "function": {"name": "compare_it_device_prices", "description": "It compares the price of IT devices from various sellers to provide low sales information.", "parameters": {"type": "object", "properties": {"device_name": {"type": "string", "description": "Name of IT devices that want to compare prices"}}, "required": ["device_name"]}}}, {"type": "function", "function": {"name": "calculate_bill_split", "description": "Divide the billed amount evenly to calculate the amount of money for each person.", "parameters": {"type": "object", "properties": {"bill_total": {"type": "number", "description": "Allied total amount"}, "num_people": {"type": "integer", "description": "The number of people who pay the amount."}}, "required": ["bill_total", "num_people"]}}}, {"type": "function", "function": {"name": "track_order", "description": "Inquire an order status (ordering, payment completion, shipping, delivery, etc.) with a given order number and informed the expected shipping date or expected delivery date.", "parameters": {"type": "object", "properties": {"order_id": {"type": "string", "description": "Order number to search"}}, "required": ["order_id"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the name of the IT device that wants to compare the price."}, "acceptable_arguments": null}
{"serial_num": 21, "category": "SLOT-all", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Where is the emergency room around?"}], "input_tools": [{"type": "function", "function": {"name": "getCurrentKoreaTime", "description": "Currently, the time of Korea is returned to year-month-day: minor: second format.", "parameters": {}}}, {"type": "function", "function": {"name": "registerFriendBirthday", "description": "A function that registers a friend's name and birthday information", "parameters": {"type": "object", "properties": {"friendName": {"type": "string", "description": "A friend's name to register"}, "birthday": {"type": "string", "description": "The birthday of a friend to register (YYYY-MM-DD format)"}}, "required": ["friendName", "birthday"]}}}, {"type": "function", "function": {"name": "find_nearest_emergency_room_by_location", "description": "Based on a specific location, it provides the location and information of the nearby emergency room.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Current location (example: station, address, building name, etc.)"}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "FindPrinterError", "description": "Returns the current error status (lack of paper, lack of ink, etc.) of certain printers in the company.", "parameters": {"type": "object", "properties": {"PrinterLocation": {"type": "string", "description": "The location of the printer to identify the error condition"}}, "required": ["PrinterLocation"]}}}, {"type": "function", "function": {"name": "update_item_quantity_in_shopping_cart", "description": "Update the quantity of specific products in the shopping cart", "parameters": {"type": "object", "properties": {"user_id": {"type": "string", "description": "User's unique identifier"}, "product_id": {"type": "string", "description": "A unique identifier of products that want to update the quantity"}, "new_quantity": {"type": "integer", "description": "New quantity to update"}}, "required": ["user_id", "product_id", "new_quantity"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the current location."}, "acceptable_arguments": null}
{"serial_num": 22, "category": "SLOT-all", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "I want to find a nearby emergency room."}], "input_tools": [{"type": "function", "function": {"name": "search_message_content", "description": "Search for a message containing the keywords specified by the user among the saved messages.", "parameters": {"type": "object", "properties": {"keyword": {"type": "string", "description": "Keyword to search"}, "from_date": {"type": "string", "description": "Date to start searching (optional)"}, "to_date": {"type": "string", "description": "Date to finish the search (optional)"}}, "required": ["keyword"]}}}, {"type": "function", "function": {"name": "calculate_distance", "description": "Based on location data, the distance between the two locations (kilometer units) is calculated", "parameters": {"type": "object", "properties": {"origin": {"type": "string", "description": "Standard location (city, state, country, village, landmark, etc.)"}, "destination": {"type": "string", "description": "Destination (city, state, country, village, landmark, etc.)"}}, "required": ["origin", "destination"]}}}, {"type": "function", "function": {"name": "find_nearest_emergency_room_by_location", "description": "Based on a specific location, it provides the location and information of the nearby emergency room.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Current location (example: station, address, building name, etc.)"}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "generate_image_from_text", "description": "Create a picture based on a given text", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Text to create a picture"}}, "required": ["text"]}}}, {"type": "function", "function": {"name": "track_order", "description": "Inquire an order status (ordering, payment completion, shipping, delivery, etc.) with a given order number and informed the expected shipping date or expected delivery date.", "parameters": {"type": "object", "properties": {"order_id": {"type": "string", "description": "Order number to search"}}, "required": ["order_id"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the current location."}, "acceptable_arguments": null}
{"serial_num": 23, "category": "SLOT-all", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "I'm curious about the location of the emergency room around you."}], "input_tools": [{"type": "function", "function": {"name": "deleteMemo", "description": "Delete the previously stored notes", "parameters": {"type": "object", "properties": {"memo_id": {"type": "string", "description": "A unique identifier of the memo to delete"}}, "required": ["memo_id"]}}}, {"type": "function", "function": {"name": "discover_new_releases_kpop", "description": "Provides the latest music release information of the K -pop genre", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "find_nearest_emergency_room_by_location", "description": "Based on a specific location, it provides the location and information of the nearby emergency room.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Current location (example: station, address, building name, etc.)"}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "search_flight", "description": "Search for a flight from a specific airport and arriving at a specific airport.", "parameters": {"type": "object", "properties": {"departure_airport": {"type": "string", "description": "Departure airport name (extracted as user expression. Example: Los Angeles International Airport, Gimhae Airport, etc.)"}, "arrival_airport": {"type": "string", "description": "Arrival airport name (extracting as it is, Example: Los Angeles International Airport, Gimhae Airport, etc.)"}, "departure_date": {"type": "string", "description": "Departure Date (YYYY-MM-DD)"}}, "required": ["departure_airport", "arrival_airport", "departure_date"]}}}, {"type": "function", "function": {"name": "schedule_meeting", "description": "Book a meeting.", "parameters": {"type": "object", "properties": {"participants": {"type": "string", "description": "Participant list (if there are multiple participants, it is divided into a comma (,).)"}, "date_time": {"type": "string", "description": "Date and time of meeting (yyyy-mm-dd hh: mm format)"}}, "required": ["participants", "date_time"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the current location."}, "acceptable_arguments": null}
{"serial_num": 24, "category": "SLOT-all", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "I want to know if there is an emergency room around."}], "input_tools": [{"type": "function", "function": {"name": "generate_syntax_tree_from_text", "description": "Create a syntax tree for a given text", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Text to create a syntax tree"}}, "required": ["text"]}}}, {"type": "function", "function": {"name": "getDayOfWeek", "description": "Returns the day of the given date.", "parameters": {"type": "object", "properties": {"date": {"type": "string", "description": "Yyyy-mm-DD format date"}}, "required": ["date"]}}}, {"type": "function", "function": {"name": "find_nearest_emergency_room_by_location", "description": "Based on a specific location, it provides the location and information of the nearby emergency room.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Current location (example: station, address, building name, etc.)"}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "create_playlist", "description": "Create a music playlist that fits the user's tastes and conditions", "parameters": {"type": "object", "properties": {"genre": {"type": "string", "description": "The genre of music to be included in the playlist"}, "mood": {"type": "string", "description": "Playlist's mood or atmosphere"}, "count": {"type": "integer", "description": "The number of songs to be included in the playlist"}, "include_live": {"type": "boolean", "description": "Live version songs include"}}, "required": ["genre", "mood", "count"]}}}, {"type": "function", "function": {"name": "add_item_to_shopping_cart", "description": "Add new products to the shopping cart", "parameters": {"type": "object", "properties": {"product_id": {"type": "string", "description": "The unique identifier of the product you want to add"}, "quantity": {"type": "integer", "description": "Quantity"}}, "required": ["product_id", "quantity"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the current location."}, "acceptable_arguments": null}
{"serial_num": 25, "category": "SLOT-all", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Tell me what the company's printer does not work"}], "input_tools": [{"type": "function", "function": {"name": "checkBankBalance", "description": "Look up the balance of a specific bank account.", "parameters": {"type": "object", "properties": {"accountBank": {"type": "string", "description": "The bank name of the account to view the balance"}, "accountNumber": {"type": "string", "description": "Account number to view the balance"}}, "required": ["accountBank", "accountNumber"]}}}, {"type": "function", "function": {"name": "getMonthlyBoxOfficeRanking", "description": "It offers a monthly box office ranking for the designated year and month.", "parameters": {"type": "object", "properties": {"year": {"type": "string", "description": "The year to look up (yyyy format)"}, "month": {"type": "string", "description": "Month to look up (MM format)"}}, "required": ["year", "month"]}}}, {"type": "function", "function": {"name": "FindPrinterError", "description": "Returns the current error status (lack of paper, lack of ink, etc.) of certain printers in the company.", "parameters": {"type": "object", "properties": {"PrinterLocation": {"type": "string", "description": "The location of the printer to identify the error condition"}}, "required": ["PrinterLocation"]}}}, {"type": "function", "function": {"name": "translate_text_to_english", "description": "Translate the given text into English", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Text translation in English"}}, "required": ["text"]}}}, {"type": "function", "function": {"name": "calculateCaloricNeeds", "description": "A function that estimates the average daily calorie consumption", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}, "height": {"type": "number", "description": "Centimeter key"}, "age": {"type": "integer", "description": "age"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["weight", "height", "age", "gender"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the location of the printer to determine the error status."}, "acceptable_arguments": null}
{"serial_num": 26, "category": "SLOT-all", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "There was a problem in the company printer. Can you check your current status?"}], "input_tools": [{"type": "function", "function": {"name": "get_stock_price", "description": "Search the current price of a particular stock.", "parameters": {"type": "object", "properties": {"stock_name": {"type": "string", "description": "Stock name to look up"}}, "required": ["stock_name"]}}}, {"type": "function", "function": {"name": "generate_image_from_text", "description": "Create a picture based on a given text", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Text to create a picture"}}, "required": ["text"]}}}, {"type": "function", "function": {"name": "FindPrinterError", "description": "Returns the current error status (lack of paper, lack of ink, etc.) of certain printers in the company.", "parameters": {"type": "object", "properties": {"PrinterLocation": {"type": "string", "description": "The location of the printer to identify the error condition"}}, "required": ["PrinterLocation"]}}}, {"type": "function", "function": {"name": "generate_random_special_chars", "description": "Randomly return by selecting 5 special characters randomly from a special character set.", "parameters": {"type": "object", "properties": {}, "required": []}}}, {"type": "function", "function": {"name": "informTyphoon", "description": "It provides location information of the current typhoon.", "parameters": {"type": "object", "properties": {"typhoonName": {"type": "string", "description": "The name of the typhoon to look upon"}}, "required": ["typhoonName"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the location of the printer to determine the error status."}, "acceptable_arguments": null}
{"serial_num": 27, "category": "SLOT-all", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "The company printer has a error message. Tell me what the problem"}], "input_tools": [{"type": "function", "function": {"name": "get_rainfall_probability", "description": "It brings probability information in a particular area.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Local name"}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "getWeatherForecastForNext7Days", "description": "For the designated area, we offer a 7 -day weather forecast, including today.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "The name of the area where the weather forecast"}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "FindPrinterError", "description": "Returns the current error status (lack of paper, lack of ink, etc.) of certain printers in the company.", "parameters": {"type": "object", "properties": {"PrinterLocation": {"type": "string", "description": "The location of the printer to identify the error condition"}}, "required": ["PrinterLocation"]}}}, {"type": "function", "function": {"name": "calculateBMR", "description": "Basal metabolic rate calculation", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}, "height": {"type": "number", "description": "Centimeter key"}, "age": {"type": "integer", "description": "age"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["weight", "height", "age", "gender"]}}}, {"type": "function", "function": {"name": "getDayOfWeek", "description": "Returns the day of the given date.", "parameters": {"type": "object", "properties": {"date": {"type": "string", "description": "Yyyy-mm-DD format date"}}, "required": ["date"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the location of the printer to determine the error status."}, "acceptable_arguments": null}
{"serial_num": 28, "category": "SLOT-all", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "The company printer continues to show an error. Can I check the situation now?"}], "input_tools": [{"type": "function", "function": {"name": "calculate_bmi", "description": "Calculation of human body mass index (BMI)", "parameters": {"type": "object", "properties": {"height": {"type": "number", "description": "Centimeter key"}, "weight": {"type": "number", "description": "Kilogram unit weight"}}, "required": ["height", "weight"]}}}, {"type": "function", "function": {"name": "convert_currency", "description": "Returns a value that exchanges a currency into another currency.", "parameters": {"type": "object", "properties": {"amount": {"type": "number", "description": "Money"}, "from": {"type": "string", "description": "Type of currency currency exchange"}, "to": {"type": "string", "description": "Type of currency exchange results"}}, "required": ["amount", "from", "to"]}}}, {"type": "function", "function": {"name": "FindPrinterError", "description": "Returns the current error status (lack of paper, lack of ink, etc.) of certain printers in the company.", "parameters": {"type": "object", "properties": {"PrinterLocation": {"type": "string", "description": "The location of the printer to identify the error condition"}}, "required": ["PrinterLocation"]}}}, {"type": "function", "function": {"name": "convert_pyeong_to_squaremeter", "description": "Convert it to \"평\"을 입력받아서, \"제곱미터\".", "parameters": {"type": "object", "properties": {"pyeong": {"type": "number", "description": "Pyeongsu to be transformed"}}, "required": ["pyeong"]}}}, {"type": "function", "function": {"name": "calculateCaloricNeeds", "description": "A function that estimates the average daily calorie consumption", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}, "height": {"type": "number", "description": "Centimeter key"}, "age": {"type": "integer", "description": "age"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["weight", "height", "age", "gender"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the location of the printer to determine the error status."}, "acceptable_arguments": null}
{"serial_num": 29, "category": "SLOT-all", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Please call me a taxi."}], "input_tools": [{"type": "function", "function": {"name": "calculateLifeExpectancy", "description": "BMI, physical activity level, and smoking status estimates average life expectancy", "parameters": {"type": "object", "properties": {"BMI": {"type": "number", "description": "Body mass index (BMI)"}, "activityLevel": {"type": "string", "description": "Physical activity level (low, normal, high choice)"}, "smokingStatus": {"type": "boolean", "description": "Smoking state (smoking = true, non -smoking = false)"}}, "required": ["BMI", "activityLevel", "smokingStatus"]}}}, {"type": "function", "function": {"name": "deleteMemo", "description": "Delete the previously stored notes", "parameters": {"type": "object", "properties": {"memo_id": {"type": "string", "description": "A unique identifier of the memo to delete"}}, "required": ["memo_id"]}}}, {"type": "function", "function": {"name": "CallTaxi", "description": "Call a taxi from a specific location.", "parameters": {"type": "object", "properties": {"pickup_location": {"type": "string", "description": "Departure location (address, station name, building name, etc.)"}, "destination": {"type": "string", "description": "Arrival location (address, station name, building name, etc.)"}}, "required": ["pickup_location", "destination"]}}}, {"type": "function", "function": {"name": "generate_random_password", "description": "Create any password with certain conditions", "parameters": {"type": "object", "properties": {"length": {"type": "integer", "description": "Password length"}, "include_uppercase": {"type": "boolean", "description": "Including alphabet uppercase letters"}, "include_lowercase": {"type": "boolean", "description": "Including alphabet lowercase"}, "include_numbers": {"type": "boolean", "description": "Whether the number includes"}}, "required": ["length", "include_uppercase", "include_lowercase", "include_numbers"]}}}, {"type": "function", "function": {"name": "registerFriendBirthday", "description": "A function that registers a friend's name and birthday information", "parameters": {"type": "object", "properties": {"friendName": {"type": "string", "description": "A friend's name to register"}, "birthday": {"type": "string", "description": "The birthday of a friend to register (YYYY-MM-DD format)"}}, "required": ["friendName", "birthday"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the departure location and the arrival location."}, "acceptable_arguments": null}
{"serial_num": 30, "category": "SLOT-all", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Can you call a taxi?"}], "input_tools": [{"type": "function", "function": {"name": "informLottoNumberByDate", "description": "It is a function that informs the lottery winning number on a specific date.", "parameters": {"type": "object", "properties": {"date": {"type": "string", "description": "Date to check the lottery winning number (e.g., March 4)"}}, "required": ["date"]}}}, {"type": "function", "function": {"name": "search_message_content", "description": "Search for a message containing the keywords specified by the user among the saved messages.", "parameters": {"type": "object", "properties": {"keyword": {"type": "string", "description": "Keyword to search"}, "from_date": {"type": "string", "description": "Date to start searching (optional)"}, "to_date": {"type": "string", "description": "Date to finish the search (optional)"}}, "required": ["keyword"]}}}, {"type": "function", "function": {"name": "CallTaxi", "description": "Call a taxi from a specific location.", "parameters": {"type": "object", "properties": {"pickup_location": {"type": "string", "description": "Departure location (address, station name, building name, etc.)"}, "destination": {"type": "string", "description": "Arrival location (address, station name, building name, etc.)"}}, "required": ["pickup_location", "destination"]}}}, {"type": "function", "function": {"name": "search_email_content", "description": "Search for emails containing keywords specified by the user during the saved email.", "parameters": {"type": "object", "properties": {"keyword": {"type": "string", "description": "Keyword to search"}, "from_date": {"type": "string", "description": "Date to start searching (optional)"}, "to_date": {"type": "string", "description": "Date to finish the search (optional)"}, "sender": {"type": "string", "description": "Email caller address (optional)"}}, "required": ["keyword"]}}}, {"type": "function", "function": {"name": "track_order", "description": "Inquire an order status (ordering, payment completion, shipping, delivery, etc.) with a given order number and informed the expected shipping date or expected delivery date.", "parameters": {"type": "object", "properties": {"order_id": {"type": "string", "description": "Order number to search"}}, "required": ["order_id"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the departure location and the arrival location."}, "acceptable_arguments": null}
{"serial_num": 31, "category": "SLOT-all", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Call me a taxi"}], "input_tools": [{"type": "function", "function": {"name": "getCurrentKoreaTime", "description": "Currently, the time of Korea is returned to year-month-day: minor: second format.", "parameters": {}}}, {"type": "function", "function": {"name": "add_contact", "description": "Register a new contact.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "Name to register a contact"}, "phone": {"type": "string", "description": "phone number"}, "email": {"type": "string", "description": "Email address"}}, "required": ["name"]}}}, {"type": "function", "function": {"name": "CallTaxi", "description": "Call a taxi from a specific location.", "parameters": {"type": "object", "properties": {"pickup_location": {"type": "string", "description": "Departure location (address, station name, building name, etc.)"}, "destination": {"type": "string", "description": "Arrival location (address, station name, building name, etc.)"}}, "required": ["pickup_location", "destination"]}}}, {"type": "function", "function": {"name": "compareCleaningServices", "description": "Compare the service of the cleaning company and provide information.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Location or area where cleaning services are needed"}, "requested_date": {"type": "string", "format": "date", "description": "Service date (extract user as it is. Example: next Monday, January 1, 2022, etc.)"}, "size": {"type": "string", "description": "Pyeongsu or area of ​​the house (flat, square meter)"}}, "required": ["location", "requested_date", "size"]}}}, {"type": "function", "function": {"name": "calculateCaloriesBurnedByWalking", "description": "Calculate the amount of calories consumed while walking on a given street.", "parameters": {"type": "object", "properties": {"distance": {"type": "number", "description": "Walking distance (kilometers)"}, "weight": {"type": "number", "description": "User's weight (kilogram unit)"}}, "required": ["distance", "weight"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the departure location and the arrival location."}, "acceptable_arguments": null}
{"serial_num": 32, "category": "SLOT-all", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Please call me a taxi right now."}], "input_tools": [{"type": "function", "function": {"name": "create_user", "description": "Create a new user account.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "User's name"}, "email": {"type": "string", "description": "User's email address"}, "password": {"type": "string", "description": "User's password"}}, "required": ["name", "email", "password"]}}}, {"type": "function", "function": {"name": "update_item_quantity_in_shopping_cart", "description": "Update the quantity of specific products in the shopping cart", "parameters": {"type": "object", "properties": {"user_id": {"type": "string", "description": "User's unique identifier"}, "product_id": {"type": "string", "description": "A unique identifier of products that want to update the quantity"}, "new_quantity": {"type": "integer", "description": "New quantity to update"}}, "required": ["user_id", "product_id", "new_quantity"]}}}, {"type": "function", "function": {"name": "CallTaxi", "description": "Call a taxi from a specific location.", "parameters": {"type": "object", "properties": {"pickup_location": {"type": "string", "description": "Departure location (address, station name, building name, etc.)"}, "destination": {"type": "string", "description": "Arrival location (address, station name, building name, etc.)"}}, "required": ["pickup_location", "destination"]}}}, {"type": "function", "function": {"name": "getCurrentUTCTime", "description": "We offer current UTC time.", "parameters": {}}}, {"type": "function", "function": {"name": "calculate_bmi", "description": "Calculation of human body mass index (BMI)", "parameters": {"type": "object", "properties": {"height": {"type": "number", "description": "Centimeter key"}, "weight": {"type": "number", "description": "Kilogram unit weight"}}, "required": ["height", "weight"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the departure location and the arrival location."}, "acceptable_arguments": null}
{"serial_num": 33, "category": "SLOT-all", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "It seems like I spent too much money this month."}], "input_tools": [{"type": "function", "function": {"name": "CallTaxi", "description": "Call a taxi from a specific location.", "parameters": {"type": "object", "properties": {"pickup_location": {"type": "string", "description": "Departure location (address, station name, building name, etc.)"}, "destination": {"type": "string", "description": "Arrival location (address, station name, building name, etc.)"}}, "required": ["pickup_location", "destination"]}}}, {"type": "function", "function": {"name": "getCurrentTimeForLocation", "description": "Provide current time information in certain areas", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Local name to bring time information"}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "checkBankBalance", "description": "Look up the balance of a specific bank account.", "parameters": {"type": "object", "properties": {"accountBank": {"type": "string", "description": "The bank name of the account to view the balance"}, "accountNumber": {"type": "string", "description": "Account number to view the balance"}}, "required": ["accountBank", "accountNumber"]}}}, {"type": "function", "function": {"name": "informLottoWinnerPrizeByDate", "description": "It is a function that informs the amount of lottery winnings on a specific date.", "parameters": {"type": "object", "properties": {"date": {"type": "string", "description": "Date to check the amount of lottery winnings (e.g., March 4)"}}, "required": ["date"]}}}, {"type": "function", "function": {"name": "view_shopping_cart", "description": "User's shopping cart contents inquiry", "parameters": {"type": "object", "properties": {"user_id": {"type": "string", "description": "User's unique identifier"}}, "required": ["user_id"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the account number and the bank name to search the balance."}, "acceptable_arguments": null}
{"serial_num": 34, "category": "SLOT-all", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "How long is the account balance left? I want to check."}], "input_tools": [{"type": "function", "function": {"name": "calculateIdealWeight", "description": "Ideal weight calculation using Lorentz formula", "parameters": {"type": "object", "properties": {"height": {"type": "number", "description": "Centimeter key"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["height", "gender"]}}}, {"type": "function", "function": {"name": "getWeatherForecastForNext7Days", "description": "For the designated area, we offer a 7 -day weather forecast, including today.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "The name of the area where the weather forecast"}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "checkBankBalance", "description": "Look up the balance of a specific bank account.", "parameters": {"type": "object", "properties": {"accountBank": {"type": "string", "description": "The bank name of the account to view the balance"}, "accountNumber": {"type": "string", "description": "Account number to view the balance"}}, "required": ["accountBank", "accountNumber"]}}}, {"type": "function", "function": {"name": "calculate_tip", "description": "Tip calculation", "parameters": {"type": "object", "properties": {"bill_amount": {"type": "number", "description": "Billed amount"}, "tip_percentage": {"type": "number", "description": "Tip 100 division (for example, 15 input for 15%)"}}, "required": ["bill_amount", "tip_percentage"]}}}, {"type": "function", "function": {"name": "translate_text_to_english", "description": "Translate the given text into English", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Text translation in English"}}, "required": ["text"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the account number and the bank name to search the balance."}, "acceptable_arguments": null}
{"serial_num": 35, "category": "SLOT-all", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Can I know the account balance?"}], "input_tools": [{"type": "function", "function": {"name": "calculateIdealWeight", "description": "Ideal weight calculation using Lorentz formula", "parameters": {"type": "object", "properties": {"height": {"type": "number", "description": "Centimeter key"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["height", "gender"]}}}, {"type": "function", "function": {"name": "calculate_tip", "description": "Tip calculation", "parameters": {"type": "object", "properties": {"bill_amount": {"type": "number", "description": "Billed amount"}, "tip_percentage": {"type": "number", "description": "Tip 100 division (for example, 15 input for 15%)"}}, "required": ["bill_amount", "tip_percentage"]}}}, {"type": "function", "function": {"name": "checkBankBalance", "description": "Look up the balance of a specific bank account.", "parameters": {"type": "object", "properties": {"accountBank": {"type": "string", "description": "The bank name of the account to view the balance"}, "accountNumber": {"type": "string", "description": "Account number to view the balance"}}, "required": ["accountBank", "accountNumber"]}}}, {"type": "function", "function": {"name": "sendEmail", "description": "Send email to a specific email address.", "parameters": {"type": "object", "properties": {"receiverEmail": {"type": "string", "description": "EMAIL address of the recipient"}, "subject": {"type": "string", "description": "Email title"}, "body": {"type": "string", "description": "Email content"}}, "required": ["receiverEmail", "subject", "body"]}}}, {"type": "function", "function": {"name": "calculate_tax", "description": "Calculate the tax on the given amount.", "parameters": {"type": "object", "properties": {"amount": {"type": "number", "description": "Prior to calculating"}, "tax_rate": {"type": "number", "description": "Tax rate to be applied (percentage)"}}, "required": ["amount", "tax_rate"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the account number and the bank name to search the balance."}, "acceptable_arguments": null}
{"serial_num": 36, "category": "SLOT-all", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Please check the bank balance."}], "input_tools": [{"type": "function", "function": {"name": "get_movie_schedule", "description": "Inquire a certain date and screening schedule for a specific movie theater.", "parameters": {"type": "object", "properties": {"movie_date": {"type": "string", "description": "Date to look up (YYYY-MM-DD)"}, "movie_location": {"type": "string", "description": "Cinema to look upon"}}, "required": ["movie_date", "movie_location"]}}}, {"type": "function", "function": {"name": "getCurrentKoreaTime", "description": "Currently, the time of Korea is returned to year-month-day: minor: second format.", "parameters": {}}}, {"type": "function", "function": {"name": "checkBankBalance", "description": "Look up the balance of a specific bank account.", "parameters": {"type": "object", "properties": {"accountBank": {"type": "string", "description": "The bank name of the account to view the balance"}, "accountNumber": {"type": "string", "description": "Account number to view the balance"}}, "required": ["accountBank", "accountNumber"]}}}, {"type": "function", "function": {"name": "convert_currency", "description": "Returns a value that exchanges a currency into another currency.", "parameters": {"type": "object", "properties": {"amount": {"type": "number", "description": "Money"}, "from": {"type": "string", "description": "Type of currency currency exchange"}, "to": {"type": "string", "description": "Type of currency exchange results"}}, "required": ["amount", "from", "to"]}}}, {"type": "function", "function": {"name": "calculate_tax", "description": "Calculate the tax on the given amount.", "parameters": {"type": "object", "properties": {"amount": {"type": "number", "description": "Prior to calculating"}, "tax_rate": {"type": "number", "description": "Tax rate to be applied (percentage)"}}, "required": ["amount", "tax_rate"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the account number and the bank name to search the balance."}, "acceptable_arguments": null}
{"serial_num": 37, "category": "SLOT-all", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Please make a meeting."}], "input_tools": [{"type": "function", "function": {"name": "get_rainfall_probability", "description": "It brings probability information in a particular area.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Local name"}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "convert_krw_to_usd", "description": "Converted Korean money (KRW) to USD (USD)", "parameters": {"type": "object", "properties": {"amount_krw": {"type": "number", "description": "Korean money (KRW) amount to convert"}, "exchange_rate_krw_to_usd": {"type": "number", "description": "Exchange rate from KRW to USD"}}, "required": ["amount_krw", "exchange_rate_krw_to_usd"]}}}, {"type": "function", "function": {"name": "schedule_meeting", "description": "Book a meeting.", "parameters": {"type": "object", "properties": {"participants": {"type": "string", "description": "Participant list (if there are multiple participants, it is divided into a comma (,).)"}, "date_time": {"type": "string", "description": "Date and time of meeting (yyyy-mm-dd hh: mm format)"}}, "required": ["participants", "date_time"]}}}, {"type": "function", "function": {"name": "create_playlist", "description": "Create a music playlist that fits the user's tastes and conditions", "parameters": {"type": "object", "properties": {"genre": {"type": "string", "description": "The genre of music to be included in the playlist"}, "mood": {"type": "string", "description": "Playlist's mood or atmosphere"}, "count": {"type": "integer", "description": "The number of songs to be included in the playlist"}, "include_live": {"type": "boolean", "description": "Live version songs include"}}, "required": ["genre", "mood", "count"]}}}, {"type": "function", "function": {"name": "translate_text_to_english", "description": "Translate the given text into English", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Text translation in English"}}, "required": ["text"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the list of participants and the date and time of the meeting."}, "acceptable_arguments": null}
{"serial_num": 38, "category": "SLOT-all", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Please book a meeting in the afternoon."}], "input_tools": [{"type": "function", "function": {"name": "compareCleaningServices", "description": "Compare the service of the cleaning company and provide information.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Location or area where cleaning services are needed"}, "requested_date": {"type": "string", "format": "date", "description": "Service date (extract user as it is. Example: next Monday, January 1, 2022, etc.)"}, "size": {"type": "string", "description": "Pyeongsu or area of ​​the house (flat, square meter)"}}, "required": ["location", "requested_date", "size"]}}}, {"type": "function", "function": {"name": "transferMoney", "description": "Send money to a specific account.", "parameters": {"type": "object", "properties": {"receiver_bank": {"type": "string", "description": "Bank"}, "receiver_account": {"type": "string", "description": "Account number to send"}, "amount": {"type": "number", "description": "Missing money (unit: krw))"}}, "required": ["receiver_bank", "receiver_account", "amount"]}}}, {"type": "function", "function": {"name": "schedule_meeting", "description": "Book a meeting.", "parameters": {"type": "object", "properties": {"participants": {"type": "string", "description": "Participant list (if there are multiple participants, it is divided into a comma (,).)"}, "date_time": {"type": "string", "description": "Date and time of meeting (yyyy-mm-dd hh: mm format)"}}, "required": ["participants", "date_time"]}}}, {"type": "function", "function": {"name": "search_flight", "description": "Search for a flight from a specific airport and arriving at a specific airport.", "parameters": {"type": "object", "properties": {"departure_airport": {"type": "string", "description": "Departure airport name (extracted as user expression. Example: Los Angeles International Airport, Gimhae Airport, etc.)"}, "arrival_airport": {"type": "string", "description": "Arrival airport name (extracting as it is, Example: Los Angeles International Airport, Gimhae Airport, etc.)"}, "departure_date": {"type": "string", "description": "Departure Date (YYYY-MM-DD)"}}, "required": ["departure_airport", "arrival_airport", "departure_date"]}}}, {"type": "function", "function": {"name": "getCurrentTimeForLocation", "description": "Provide current time information in certain areas", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Local name to bring time information"}}, "required": ["location"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the list of participants and the date and time of the meeting."}, "acceptable_arguments": null}
{"serial_num": 39, "category": "SLOT-all", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Is the meeting booking?"}], "input_tools": [{"type": "function", "function": {"name": "informLottoNumberByRound", "description": "It is a function that informs the lottery winning number of a specific episode.", "parameters": {"type": "object", "properties": {"round": {"type": "integer", "description": "The round to check the lottery winning number"}}, "required": ["round"]}}}, {"type": "function", "function": {"name": "find_group_or_club", "description": "Provides meetings or club information on certain topics based on the area around the specific location.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Where to find a meeting or club"}, "topic": {"type": "string", "description": "Interest"}}, "required": ["location", "topic"]}}}, {"type": "function", "function": {"name": "schedule_meeting", "description": "Book a meeting.", "parameters": {"type": "object", "properties": {"participants": {"type": "string", "description": "Participant list (if there are multiple participants, it is divided into a comma (,).)"}, "date_time": {"type": "string", "description": "Date and time of meeting (yyyy-mm-dd hh: mm format)"}}, "required": ["participants", "date_time"]}}}, {"type": "function", "function": {"name": "DeleteEvent", "description": "Delete schedule from calendar", "parameters": {"type": "object", "properties": {"event_id": {"type": "string", "description": "ID of the schedule to be deleted"}}, "required": ["event_id"]}}}, {"type": "function", "function": {"name": "calculate_bmi", "description": "Calculation of human body mass index (BMI)", "parameters": {"type": "object", "properties": {"height": {"type": "number", "description": "Centimeter key"}, "weight": {"type": "number", "description": "Kilogram unit weight"}}, "required": ["height", "weight"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the list of participants and the date and time of the meeting."}, "acceptable_arguments": null}
{"serial_num": 40, "category": "SLOT-all", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "I have to make a reservation in a hurry."}], "input_tools": [{"type": "function", "function": {"name": "calculateIdealWeight", "description": "Ideal weight calculation using Lorentz formula", "parameters": {"type": "object", "properties": {"height": {"type": "number", "description": "Centimeter key"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["height", "gender"]}}}, {"type": "function", "function": {"name": "registerFriendBirthday", "description": "A function that registers a friend's name and birthday information", "parameters": {"type": "object", "properties": {"friendName": {"type": "string", "description": "A friend's name to register"}, "birthday": {"type": "string", "description": "The birthday of a friend to register (YYYY-MM-DD format)"}}, "required": ["friendName", "birthday"]}}}, {"type": "function", "function": {"name": "schedule_meeting", "description": "Book a meeting.", "parameters": {"type": "object", "properties": {"participants": {"type": "string", "description": "Participant list (if there are multiple participants, it is divided into a comma (,).)"}, "date_time": {"type": "string", "description": "Date and time of meeting (yyyy-mm-dd hh: mm format)"}}, "required": ["participants", "date_time"]}}}, {"type": "function", "function": {"name": "generate_syntax_tree_from_text", "description": "Create a syntax tree for a given text", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Text to create a syntax tree"}}, "required": ["text"]}}}, {"type": "function", "function": {"name": "count_words", "description": "Calculation of words in a given text (sentence or paragraph)", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Cell text"}}, "required": ["text"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the list of participants and the date and time of the meeting."}, "acceptable_arguments": null}
{"serial_num": 41, "category": "SLOT-all", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Search for the movie screening schedule."}], "input_tools": [{"type": "function", "function": {"name": "informLottoNumberByRound", "description": "It is a function that informs the lottery winning number of a specific episode.", "parameters": {"type": "object", "properties": {"round": {"type": "integer", "description": "The round to check the lottery winning number"}}, "required": ["round"]}}}, {"type": "function", "function": {"name": "getCurrentKoreaTime", "description": "Currently, the time of Korea is returned to year-month-day: minor: second format.", "parameters": {}}}, {"type": "function", "function": {"name": "get_movie_schedule", "description": "Inquire a certain date and screening schedule for a specific movie theater.", "parameters": {"type": "object", "properties": {"movie_date": {"type": "string", "description": "Date to look up (YYYY-MM-DD)"}, "movie_location": {"type": "string", "description": "Cinema to look upon"}}, "required": ["movie_date", "movie_location"]}}}, {"type": "function", "function": {"name": "informLottoWinnerPrizeByRound", "description": "It is a function that informs the amount of lottery winnings of a specific episode.", "parameters": {"type": "object", "properties": {"round": {"type": "integer", "description": "A round that wants to check the amount of lottery winnings (e.g. 1001)"}}, "required": ["round"]}}}, {"type": "function", "function": {"name": "informLottoWinnerPrizeByDate", "description": "It is a function that informs the amount of lottery winnings on a specific date.", "parameters": {"type": "object", "properties": {"date": {"type": "string", "description": "Date to check the amount of lottery winnings (e.g., March 4)"}}, "required": ["date"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the date and movie theater to view the screening schedule."}, "acceptable_arguments": null}
{"serial_num": 42, "category": "SLOT-all", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Find the movie screening schedule."}], "input_tools": [{"type": "function", "function": {"name": "get_currency_trend_3months", "description": "Provides exchange rate fluctuations for the last three months for the designated currency", "parameters": {"type": "object", "properties": {"currency_code": {"type": "string", "description": "Code of currency to bring the exchange rate fluctuations (e.g. USD, EUR, JPY)"}}, "required": ["currency_code"]}}}, {"type": "function", "function": {"name": "getHistoricalMinMaxTemperature", "description": "In the past, we look up for the minimum temperature and the highest temperature in certain regions.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "The name of the area to be searched"}, "date": {"type": "string", "description": "Date to look up ('YYYY-MM-DD' format)"}}, "required": ["location", "date"]}}}, {"type": "function", "function": {"name": "get_movie_schedule", "description": "Inquire a certain date and screening schedule for a specific movie theater.", "parameters": {"type": "object", "properties": {"movie_date": {"type": "string", "description": "Date to look up (YYYY-MM-DD)"}, "movie_location": {"type": "string", "description": "Cinema to look upon"}}, "required": ["movie_date", "movie_location"]}}}, {"type": "function", "function": {"name": "calculateBMR", "description": "Basal metabolic rate calculation", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}, "height": {"type": "number", "description": "Centimeter key"}, "age": {"type": "integer", "description": "age"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["weight", "height", "age", "gender"]}}}, {"type": "function", "function": {"name": "schedule_meeting", "description": "Book a meeting.", "parameters": {"type": "object", "properties": {"participants": {"type": "string", "description": "Participant list (if there are multiple participants, it is divided into a comma (,).)"}, "date_time": {"type": "string", "description": "Date and time of meeting (yyyy-mm-dd hh: mm format)"}}, "required": ["participants", "date_time"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the date and movie theater to view the screening schedule."}, "acceptable_arguments": null}
{"serial_num": 43, "category": "SLOT-all", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "I'll ask you to check the screening schedule."}], "input_tools": [{"type": "function", "function": {"name": "calculate_tax", "description": "Calculate the tax on the given amount.", "parameters": {"type": "object", "properties": {"amount": {"type": "number", "description": "Prior to calculating"}, "tax_rate": {"type": "number", "description": "Tax rate to be applied (percentage)"}}, "required": ["amount", "tax_rate"]}}}, {"type": "function", "function": {"name": "book_concert_tickets", "description": "Tickets for specific performances are made using external ticketing systems.", "parameters": {"type": "object", "properties": {"concert_name": {"type": "string", "description": "The name of the performance you want to book"}, "number_of_tickets": {"type": "integer", "description": "Quantity"}, "seat_type": {"type": "string", "description": "Selected seat type (e.g. VIP, general)"}}, "required": ["concert_name", "number_of_tickets", "seat_type"]}}}, {"type": "function", "function": {"name": "get_movie_schedule", "description": "Inquire a certain date and screening schedule for a specific movie theater.", "parameters": {"type": "object", "properties": {"movie_date": {"type": "string", "description": "Date to look up (YYYY-MM-DD)"}, "movie_location": {"type": "string", "description": "Cinema to look upon"}}, "required": ["movie_date", "movie_location"]}}}, {"type": "function", "function": {"name": "convert_krw_to_usd", "description": "Converted Korean money (KRW) to USD (USD)", "parameters": {"type": "object", "properties": {"amount_krw": {"type": "number", "description": "Korean money (KRW) amount to convert"}, "exchange_rate_krw_to_usd": {"type": "number", "description": "Exchange rate from KRW to USD"}}, "required": ["amount_krw", "exchange_rate_krw_to_usd"]}}}, {"type": "function", "function": {"name": "calculate_bmi", "description": "Calculation of human body mass index (BMI)", "parameters": {"type": "object", "properties": {"height": {"type": "number", "description": "Centimeter key"}, "weight": {"type": "number", "description": "Kilogram unit weight"}}, "required": ["height", "weight"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the date and movie theater to view the screening schedule."}, "acceptable_arguments": null}
{"serial_num": 44, "category": "SLOT-all", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "I want to specify the date and check the screening schedule."}], "input_tools": [{"type": "function", "function": {"name": "convert_pyeong_to_squaremeter", "description": "Convert it to \"평\"을 입력받아서, \"제곱미터\".", "parameters": {"type": "object", "properties": {"pyeong": {"type": "number", "description": "Pyeongsu to be transformed"}}, "required": ["pyeong"]}}}, {"type": "function", "function": {"name": "recommendLuckMessage", "description": "It is a function that recommends lucky words randomly.", "parameters": {"type": "object", "properties": {}, "required": []}}}, {"type": "function", "function": {"name": "get_movie_schedule", "description": "Inquire a certain date and screening schedule for a specific movie theater.", "parameters": {"type": "object", "properties": {"movie_date": {"type": "string", "description": "Date to look up (YYYY-MM-DD)"}, "movie_location": {"type": "string", "description": "Cinema to look upon"}}, "required": ["movie_date", "movie_location"]}}}, {"type": "function", "function": {"name": "calculateBMR", "description": "Basal metabolic rate calculation", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}, "height": {"type": "number", "description": "Centimeter key"}, "age": {"type": "integer", "description": "age"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["weight", "height", "age", "gender"]}}}, {"type": "function", "function": {"name": "find_group_or_club", "description": "Provides meetings or club information on certain topics based on the area around the specific location.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Where to find a meeting or club"}, "topic": {"type": "string", "description": "Interest"}}, "required": ["location", "topic"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the date and movie theater to view the screening schedule."}, "acceptable_arguments": null}
{"serial_num": 45, "category": "SLOT-all", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Will it be blocked a lot? I'm curious about the traffic situation"}], "input_tools": [{"type": "function", "function": {"name": "add_item_to_shopping_cart", "description": "Add new products to the shopping cart", "parameters": {"type": "object", "properties": {"product_id": {"type": "string", "description": "The unique identifier of the product you want to add"}, "quantity": {"type": "integer", "description": "Quantity"}}, "required": ["product_id", "quantity"]}}}, {"type": "function", "function": {"name": "getCurrentKoreaTime", "description": "Currently, the time of Korea is returned to year-month-day: minor: second format.", "parameters": {}}}, {"type": "function", "function": {"name": "check_traffic_status", "description": "Inquire the current traffic situation on a particular path.", "parameters": {"type": "object", "properties": {"start_location": {"type": "string", "description": "Departure"}, "end_location": {"type": "string", "description": "Arrival point"}}, "required": ["start_location", "end_location"]}}}, {"type": "function", "function": {"name": "calculateBMR", "description": "Basal metabolic rate calculation", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}, "height": {"type": "number", "description": "Centimeter key"}, "age": {"type": "integer", "description": "age"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["weight", "height", "age", "gender"]}}}, {"type": "function", "function": {"name": "generate_playlist_based_on_favorite_artist", "description": "Create customized playlist based on preferred artists", "parameters": {"type": "object", "properties": {"artist_name": {"type": "string", "description": "The name of the artist that users prefer"}}, "required": ["artist_name"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the departure point and the arrival point."}, "acceptable_arguments": null}
{"serial_num": 46, "category": "SLOT-all", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Can you tell me about traffic?"}], "input_tools": [{"type": "function", "function": {"name": "convert_to_uppercase", "description": "Converted strings to capital letters", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "String"}}, "required": ["text"]}}}, {"type": "function", "function": {"name": "OrderPizza", "description": "Order pizza.", "parameters": {"type": "object", "properties": {"PizzaType": {"type": "string", "description": "Pizza"}, "size": {"type": "string", "description": "Pizza size (extracted as it is, example: Small, L, Medium, etc.)"}, "quantity": {"type": "integer", "description": "Order quantity"}}, "required": ["PizzaType", "size", "quantity"]}}}, {"type": "function", "function": {"name": "check_traffic_status", "description": "Inquire the current traffic situation on a particular path.", "parameters": {"type": "object", "properties": {"start_location": {"type": "string", "description": "Departure"}, "end_location": {"type": "string", "description": "Arrival point"}}, "required": ["start_location", "end_location"]}}}, {"type": "function", "function": {"name": "create_user", "description": "Create a new user account.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "User's name"}, "email": {"type": "string", "description": "User's email address"}, "password": {"type": "string", "description": "User's password"}}, "required": ["name", "email", "password"]}}}, {"type": "function", "function": {"name": "informLottoWinnerPrizeByRound", "description": "It is a function that informs the amount of lottery winnings of a specific episode.", "parameters": {"type": "object", "properties": {"round": {"type": "integer", "description": "A round that wants to check the amount of lottery winnings (e.g. 1001)"}}, "required": ["round"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the departure point and the arrival point."}, "acceptable_arguments": null}
{"serial_num": 47, "category": "SLOT-all", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "I think there's a lot of cars on weekends. How about the road situation?"}], "input_tools": [{"type": "function", "function": {"name": "schedule_laundry_pickup", "description": "Apply for a service to collect laundry.", "parameters": {"type": "object", "properties": {"pickup_location": {"type": "string", "description": "Extract the location of the user as it is to collect the laundry. (Example: House, 101 -dong 102, etc."}, "pickup_date": {"type": "string", "description": "Extract the laundry collection date as it is. (Example: next Monday, January 1, 2022, etc.)"}, "pickup_time": {"type": "string", "description": "Extract the time to collect the laundry as it is. (Example: 2 pm, 7 pm, etc.)"}}, "required": ["pickup_location", "pickup_date", "pickup_time"]}}}, {"type": "function", "function": {"name": "sendEmail", "description": "Send email to a specific email address.", "parameters": {"type": "object", "properties": {"receiverEmail": {"type": "string", "description": "EMAIL address of the recipient"}, "subject": {"type": "string", "description": "Email title"}, "body": {"type": "string", "description": "Email content"}}, "required": ["receiverEmail", "subject", "body"]}}}, {"type": "function", "function": {"name": "check_traffic_status", "description": "Inquire the current traffic situation on a particular path.", "parameters": {"type": "object", "properties": {"start_location": {"type": "string", "description": "Departure"}, "end_location": {"type": "string", "description": "Arrival point"}}, "required": ["start_location", "end_location"]}}}, {"type": "function", "function": {"name": "count_lowercase_letters", "description": "The number of lowercase in the string", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Cell string for lowercase"}}, "required": ["text"]}}}, {"type": "function", "function": {"name": "convertTimeBetweenTimezones", "description": "Convert time to another time in one time.", "parameters": {"type": "object", "properties": {"originalTime": {"type": "string", "description": "Reference time to convert (format HH: mm)"}, "fromTimezone": {"type": "string", "description": "Standard time zone (region name)"}, "toTimezone": {"type": "string", "description": "Time to be converted (region name)"}}, "required": ["originalTime", "fromTimezone", "toTimezone"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the departure point and the arrival point."}, "acceptable_arguments": null}
{"serial_num": 48, "category": "SLOT-all", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Please let me know the road situation quickly."}], "input_tools": [{"type": "function", "function": {"name": "count_words", "description": "Calculation of words in a given text (sentence or paragraph)", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Cell text"}}, "required": ["text"]}}}, {"type": "function", "function": {"name": "upload_artwork_to_online_site", "description": "Upload your work to the online art platform.", "parameters": {"type": "object", "properties": {"art_image_url": {"type": "string", "description": "The image of the work to be uploaded URL"}, "title": {"type": "string", "description": "Title of the work"}, "description": {"type": "string", "description": "A brief explanation of the work"}}, "required": ["art_image_url", "title", "description"]}}}, {"type": "function", "function": {"name": "check_traffic_status", "description": "Inquire the current traffic situation on a particular path.", "parameters": {"type": "object", "properties": {"start_location": {"type": "string", "description": "Departure"}, "end_location": {"type": "string", "description": "Arrival point"}}, "required": ["start_location", "end_location"]}}}, {"type": "function", "function": {"name": "translate_text_to_english", "description": "Translate the given text into English", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Text translation in English"}}, "required": ["text"]}}}, {"type": "function", "function": {"name": "recommendLottoNumber", "description": "It is a function that recommends a lotto number randomly.", "parameters": {"type": "object", "properties": {}, "required": []}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the departure point and the arrival point."}, "acceptable_arguments": null}
{"serial_num": 49, "category": "SLOT-all", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "I'm going to go on a business trip, can you make a reservation?"}], "input_tools": [{"type": "function", "function": {"name": "DeleteEvent", "description": "Delete schedule from calendar", "parameters": {"type": "object", "properties": {"event_id": {"type": "string", "description": "ID of the schedule to be deleted"}}, "required": ["event_id"]}}}, {"type": "function", "function": {"name": "upload_artwork_to_online_site", "description": "Upload your work to the online art platform.", "parameters": {"type": "object", "properties": {"art_image_url": {"type": "string", "description": "The image of the work to be uploaded URL"}, "title": {"type": "string", "description": "Title of the work"}, "description": {"type": "string", "description": "A brief explanation of the work"}}, "required": ["art_image_url", "title", "description"]}}}, {"type": "function", "function": {"name": "bookBusinessVehicle", "description": "Book a car for business trips.", "parameters": {"type": "object", "properties": {"destination": {"type": "string", "description": "destination"}, "departure_date": {"type": "string", "description": "Express your departure date as it is. Example) '다음 주 월요일', '2022년 1월 1일'"}}, "required": ["destination", "departure_date"]}}}, {"type": "function", "function": {"name": "calculateLifeExpectancy", "description": "BMI, physical activity level, and smoking status estimates average life expectancy", "parameters": {"type": "object", "properties": {"BMI": {"type": "number", "description": "Body mass index (BMI)"}, "activityLevel": {"type": "string", "description": "Physical activity level (low, normal, high choice)"}, "smokingStatus": {"type": "boolean", "description": "Smoking state (smoking = true, non -smoking = false)"}}, "required": ["BMI", "activityLevel", "smokingStatus"]}}}, {"type": "function", "function": {"name": "informLottoWinnerPrizeByDate", "description": "It is a function that informs the amount of lottery winnings on a specific date.", "parameters": {"type": "object", "properties": {"date": {"type": "string", "description": "Date to check the amount of lottery winnings (e.g., March 4)"}}, "required": ["date"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell us your destination and departure date."}, "acceptable_arguments": null}
{"serial_num": 50, "category": "SLOT-all", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "I want to book a business trip in advance."}], "input_tools": [{"type": "function", "function": {"name": "get_stock_price", "description": "Search the current price of a particular stock.", "parameters": {"type": "object", "properties": {"stock_name": {"type": "string", "description": "Stock name to look up"}}, "required": ["stock_name"]}}}, {"type": "function", "function": {"name": "search_contact", "description": "Search for a list of contacts in the name of a person and bring his phone number and email address.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "The name of a person who wants to check the contact"}}, "required": ["name"]}}}, {"type": "function", "function": {"name": "bookBusinessVehicle", "description": "Book a car for business trips.", "parameters": {"type": "object", "properties": {"destination": {"type": "string", "description": "destination"}, "departure_date": {"type": "string", "description": "Express your departure date as it is. Example) '다음 주 월요일', '2022년 1월 1일'"}}, "required": ["destination", "departure_date"]}}}, {"type": "function", "function": {"name": "getDailyNewsHeadlines", "description": "Today's main news headline is provided.", "parameters": {"type": "object", "properties": {}, "required": []}}}, {"type": "function", "function": {"name": "getCryptocurrencyPrice", "description": "Inquire the current price of a specific cryptocurrency.", "parameters": {"type": "object", "properties": {"cryptocurrency": {"type": "string", "description": "Cryptocurrency name to view the price"}}, "required": ["cryptocurrency"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell us your destination and departure date."}, "acceptable_arguments": null}
{"serial_num": 51, "category": "SLOT-all", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Can you make a car book on a business trip?"}], "input_tools": [{"type": "function", "function": {"name": "add_item_to_shopping_cart", "description": "Add new products to the shopping cart", "parameters": {"type": "object", "properties": {"product_id": {"type": "string", "description": "The unique identifier of the product you want to add"}, "quantity": {"type": "integer", "description": "Quantity"}}, "required": ["product_id", "quantity"]}}}, {"type": "function", "function": {"name": "searchFriendBirthday", "description": "A function that enters a friend's name and searches for birthday information", "parameters": {"type": "object", "properties": {"friendName": {"type": "string", "description": "A friend's name to search"}}, "required": ["friendName"]}}}, {"type": "function", "function": {"name": "bookBusinessVehicle", "description": "Book a car for business trips.", "parameters": {"type": "object", "properties": {"destination": {"type": "string", "description": "destination"}, "departure_date": {"type": "string", "description": "Express your departure date as it is. Example) '다음 주 월요일', '2022년 1월 1일'"}}, "required": ["destination", "departure_date"]}}}, {"type": "function", "function": {"name": "getHistoricalMinMaxTemperature", "description": "In the past, we look up for the minimum temperature and the highest temperature in certain regions.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "The name of the area to be searched"}, "date": {"type": "string", "description": "Date to look up ('YYYY-MM-DD' format)"}}, "required": ["location", "date"]}}}, {"type": "function", "function": {"name": "generate_syntax_tree_from_text", "description": "Create a syntax tree for a given text", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Text to create a syntax tree"}}, "required": ["text"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell us your destination and departure date."}, "acceptable_arguments": null}
{"serial_num": 52, "category": "SLOT-all", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Sooner or later, I need a car reservation."}], "input_tools": [{"type": "function", "function": {"name": "calculateIdealWeight", "description": "Ideal weight calculation using Lorentz formula", "parameters": {"type": "object", "properties": {"height": {"type": "number", "description": "Centimeter key"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["height", "gender"]}}}, {"type": "function", "function": {"name": "getDailyNewsHeadlines", "description": "Today's main news headline is provided.", "parameters": {"type": "object", "properties": {}, "required": []}}}, {"type": "function", "function": {"name": "bookBusinessVehicle", "description": "Book a car for business trips.", "parameters": {"type": "object", "properties": {"destination": {"type": "string", "description": "destination"}, "departure_date": {"type": "string", "description": "Express your departure date as it is. Example) '다음 주 월요일', '2022년 1월 1일'"}}, "required": ["destination", "departure_date"]}}}, {"type": "function", "function": {"name": "getCryptocurrencyPrice", "description": "Inquire the current price of a specific cryptocurrency.", "parameters": {"type": "object", "properties": {"cryptocurrency": {"type": "string", "description": "Cryptocurrency name to view the price"}}, "required": ["cryptocurrency"]}}}, {"type": "function", "function": {"name": "calculateCaloriesBurnedByWalking", "description": "Calculate the amount of calories consumed while walking on a given street.", "parameters": {"type": "object", "properties": {"distance": {"type": "number", "description": "Walking distance (kilometers)"}, "weight": {"type": "number", "description": "User's weight (kilogram unit)"}}, "required": ["distance", "weight"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell us your destination and departure date."}, "acceptable_arguments": null}
{"serial_num": 53, "category": "SLOT-all", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Compare the price of office supplies at various stores."}], "input_tools": [{"type": "function", "function": {"name": "search_contact", "description": "Search for a list of contacts in the name of a person and bring his phone number and email address.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "The name of a person who wants to check the contact"}}, "required": ["name"]}}}, {"type": "function", "function": {"name": "CheckTaxRefund", "description": "Search for the user's tax refund.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "The name of the tax paymenter"}, "birth": {"type": "string", "description": "Date of birth of tax payers (YYYY-MM-DD)"}, "phone_number": {"type": "string", "description": "Contact of tax payers"}}, "required": ["name", "birth", "phone_number"]}}}, {"type": "function", "function": {"name": "compare_office_supplies_prices", "description": "Compare office supplies prices of various stores and provide the lowest price information.", "parameters": {"type": "object", "properties": {"product_name": {"type": "string", "description": "Product name that wants to compare prices"}, "quantity": {"type": "integer", "description": "Quantity"}}, "required": ["product_name", "quantity"]}}}, {"type": "function", "function": {"name": "informLottoWinnerPrizeByRound", "description": "It is a function that informs the amount of lottery winnings of a specific episode.", "parameters": {"type": "object", "properties": {"round": {"type": "integer", "description": "A round that wants to check the amount of lottery winnings (e.g. 1001)"}}, "required": ["round"]}}}, {"type": "function", "function": {"name": "reserve_restaurant", "description": "Reservation of the restaurant with the information provided by the user. Example) Please make a reservation at 6 pm tonight", "parameters": {"type": "object", "properties": {"store": {"type": "string", "description": "Restaurant name"}, "reservationDate": {"type": "string", "description": "Reservation date (YYYY-MM-DD)"}, "reservationTime": {"type": "string", "description": "Reservation time (hh: mm)"}, "numberOfPeople": {"type": "integer", "description": "Number of reservations"}}, "required": ["store", "reservationDate", "reservationTime", "numberOfPeople"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the name of the product and the quantity of the required product to compare the price."}, "acceptable_arguments": null}
{"serial_num": 54, "category": "SLOT-all", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "The company is trying to order office supplies, but can you find out where it is the cheapest?"}], "input_tools": [{"type": "function", "function": {"name": "get_rainfall_probability", "description": "It brings probability information in a particular area.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Local name"}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "CallTaxi", "description": "Call a taxi from a specific location.", "parameters": {"type": "object", "properties": {"pickup_location": {"type": "string", "description": "Departure location (address, station name, building name, etc.)"}, "destination": {"type": "string", "description": "Arrival location (address, station name, building name, etc.)"}}, "required": ["pickup_location", "destination"]}}}, {"type": "function", "function": {"name": "compare_office_supplies_prices", "description": "Compare office supplies prices of various stores and provide the lowest price information.", "parameters": {"type": "object", "properties": {"product_name": {"type": "string", "description": "Product name that wants to compare prices"}, "quantity": {"type": "integer", "description": "Quantity"}}, "required": ["product_name", "quantity"]}}}, {"type": "function", "function": {"name": "create_user", "description": "Create a new user account.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "User's name"}, "email": {"type": "string", "description": "User's email address"}, "password": {"type": "string", "description": "User's password"}}, "required": ["name", "email", "password"]}}}, {"type": "function", "function": {"name": "getDailyNewsHeadlines", "description": "Today's main news headline is provided.", "parameters": {"type": "object", "properties": {}, "required": []}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the name of the product and the quantity of the required product to compare the price."}, "acceptable_arguments": null}
{"serial_num": 55, "category": "SLOT-all", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Tomorrow is required to order office supplies. Compare the prices of various places to tell me the lowest price"}], "input_tools": [{"type": "function", "function": {"name": "find_nearest_emergency_room_by_location", "description": "Based on a specific location, it provides the location and information of the nearby emergency room.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Current location (example: station, address, building name, etc.)"}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "getCryptocurrencyPrice", "description": "Inquire the current price of a specific cryptocurrency.", "parameters": {"type": "object", "properties": {"cryptocurrency": {"type": "string", "description": "Cryptocurrency name to view the price"}}, "required": ["cryptocurrency"]}}}, {"type": "function", "function": {"name": "compare_office_supplies_prices", "description": "Compare office supplies prices of various stores and provide the lowest price information.", "parameters": {"type": "object", "properties": {"product_name": {"type": "string", "description": "Product name that wants to compare prices"}, "quantity": {"type": "integer", "description": "Quantity"}}, "required": ["product_name", "quantity"]}}}, {"type": "function", "function": {"name": "informTyphoon", "description": "It provides location information of the current typhoon.", "parameters": {"type": "object", "properties": {"typhoonName": {"type": "string", "description": "The name of the typhoon to look upon"}}, "required": ["typhoonName"]}}}, {"type": "function", "function": {"name": "informLottoNumberByRound", "description": "It is a function that informs the lottery winning number of a specific episode.", "parameters": {"type": "object", "properties": {"round": {"type": "integer", "description": "The round to check the lottery winning number"}}, "required": ["round"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the name of the product and the quantity of the required product to compare the price."}, "acceptable_arguments": null}
{"serial_num": 56, "category": "SLOT-all", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "I'm trying to buy office supplies. Can you compare the prices of various retailers?"}], "input_tools": [{"type": "function", "function": {"name": "get_movie_details", "description": "Genre, directors, actors, plot, and screening time provide detailed information.", "parameters": {"type": "object", "properties": {"title": {"type": "string", "description": "Film title"}, "year": {"type": "integer", "description": "Movie release year"}}, "required": ["title"]}}}, {"type": "function", "function": {"name": "recommendLuckMessage", "description": "It is a function that recommends lucky words randomly.", "parameters": {"type": "object", "properties": {}, "required": []}}}, {"type": "function", "function": {"name": "compare_office_supplies_prices", "description": "Compare office supplies prices of various stores and provide the lowest price information.", "parameters": {"type": "object", "properties": {"product_name": {"type": "string", "description": "Product name that wants to compare prices"}, "quantity": {"type": "integer", "description": "Quantity"}}, "required": ["product_name", "quantity"]}}}, {"type": "function", "function": {"name": "add_contact", "description": "Register a new contact.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "Name to register a contact"}, "phone": {"type": "string", "description": "phone number"}, "email": {"type": "string", "description": "Email address"}}, "required": ["name"]}}}, {"type": "function", "function": {"name": "add_movie_review", "description": "Add a review of a specific movie to the movie scrapbook.", "parameters": {"type": "object", "properties": {"movie_id": {"type": "string", "description": "ID of the movie to add a review"}, "review_text": {"type": "string", "description": "Movie review contents"}}, "required": ["movie_id", "review_text"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the name of the product and the quantity of the required product to compare the price."}, "acceptable_arguments": null}
{"serial_num": 57, "category": "SLOT-all", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "I want to find a club. Give me some information."}], "input_tools": [{"type": "function", "function": {"name": "update_contact", "description": "Update (modify or add) contents of existing contacts.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "Name stored in the current contact"}, "new_name": {"type": "string", "description": "Name to update"}, "new_phone": {"type": "string", "description": "Phone number to update"}, "new_email": {"type": "string", "description": "Email address to be updated"}}, "required": ["name"]}}}, {"type": "function", "function": {"name": "deleteMemo", "description": "Delete the previously stored notes", "parameters": {"type": "object", "properties": {"memo_id": {"type": "string", "description": "A unique identifier of the memo to delete"}}, "required": ["memo_id"]}}}, {"type": "function", "function": {"name": "find_group_or_club", "description": "Provides meetings or club information on certain topics based on the area around the specific location.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Where to find a meeting or club"}, "topic": {"type": "string", "description": "Interest"}}, "required": ["location", "topic"]}}}, {"type": "function", "function": {"name": "informLottoWinnerPrizeByRound", "description": "It is a function that informs the amount of lottery winnings of a specific episode.", "parameters": {"type": "object", "properties": {"round": {"type": "integer", "description": "A round that wants to check the amount of lottery winnings (e.g. 1001)"}}, "required": ["round"]}}}, {"type": "function", "function": {"name": "calculate_tax", "description": "Calculate the tax on the given amount.", "parameters": {"type": "object", "properties": {"amount": {"type": "number", "description": "Prior to calculating"}, "tax_rate": {"type": "number", "description": "Tax rate to be applied (percentage)"}}, "required": ["amount", "tax_rate"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the location and interest of interest to find the club."}, "acceptable_arguments": null}
{"serial_num": 58, "category": "SLOT-all", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "I have a club I want to find, can you find it?"}], "input_tools": [{"type": "function", "function": {"name": "calculateLifeExpectancy", "description": "BMI, physical activity level, and smoking status estimates average life expectancy", "parameters": {"type": "object", "properties": {"BMI": {"type": "number", "description": "Body mass index (BMI)"}, "activityLevel": {"type": "string", "description": "Physical activity level (low, normal, high choice)"}, "smokingStatus": {"type": "boolean", "description": "Smoking state (smoking = true, non -smoking = false)"}}, "required": ["BMI", "activityLevel", "smokingStatus"]}}}, {"type": "function", "function": {"name": "calculateTimeDifference", "description": "The time difference between the two regions is returned every time.", "parameters": {"type": "object", "properties": {"fromTimezone": {"type": "string", "description": "Time zone area"}, "toTimezone": {"type": "string", "description": "Time zone area for comparison"}}, "required": ["fromTimezone", "toTimezone"]}}}, {"type": "function", "function": {"name": "find_group_or_club", "description": "Provides meetings or club information on certain topics based on the area around the specific location.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Where to find a meeting or club"}, "topic": {"type": "string", "description": "Interest"}}, "required": ["location", "topic"]}}}, {"type": "function", "function": {"name": "informLottoWinnerPrizeByDate", "description": "It is a function that informs the amount of lottery winnings on a specific date.", "parameters": {"type": "object", "properties": {"date": {"type": "string", "description": "Date to check the amount of lottery winnings (e.g., March 4)"}}, "required": ["date"]}}}, {"type": "function", "function": {"name": "getCurrentTopSeries", "description": "We offer the current popular TV series rankings", "parameters": {"type": "object", "properties": {}, "required": []}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the location and interest of interest to find the club."}, "acceptable_arguments": null}
{"serial_num": 59, "category": "SLOT-all", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Can you find out if there are meetings I want in a certain area?"}], "input_tools": [{"type": "function", "function": {"name": "get_exchange_rate", "description": "Bring the exchange rate between the two currencies.", "parameters": {"type": "object", "properties": {"base_currency": {"type": "string", "description": "The Currency to Convert from."}, "target_currency": {"type": "string", "description": "The current to convert to."}}, "required": ["base_currency", "target_currency"]}}}, {"type": "function", "function": {"name": "search_contact", "description": "Search for a list of contacts in the name of a person and bring his phone number and email address.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "The name of a person who wants to check the contact"}}, "required": ["name"]}}}, {"type": "function", "function": {"name": "find_group_or_club", "description": "Provides meetings or club information on certain topics based on the area around the specific location.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Where to find a meeting or club"}, "topic": {"type": "string", "description": "Interest"}}, "required": ["location", "topic"]}}}, {"type": "function", "function": {"name": "calculate_bmi", "description": "Calculation of human body mass index (BMI)", "parameters": {"type": "object", "properties": {"height": {"type": "number", "description": "Centimeter key"}, "weight": {"type": "number", "description": "Kilogram unit weight"}}, "required": ["height", "weight"]}}}, {"type": "function", "function": {"name": "get_rainfall_probability", "description": "It brings probability information in a particular area.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Local name"}}, "required": ["location"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell us the location and interest of interest to find a meeting."}, "acceptable_arguments": null}
{"serial_num": 60, "category": "SLOT-all", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "I want to find out the meetings around our area."}], "input_tools": [{"type": "function", "function": {"name": "informLottoWinnerPrizeByDate", "description": "It is a function that informs the amount of lottery winnings on a specific date.", "parameters": {"type": "object", "properties": {"date": {"type": "string", "description": "Date to check the amount of lottery winnings (e.g., March 4)"}}, "required": ["date"]}}}, {"type": "function", "function": {"name": "getMonthlyBoxOfficeRanking", "description": "It offers a monthly box office ranking for the designated year and month.", "parameters": {"type": "object", "properties": {"year": {"type": "string", "description": "The year to look up (yyyy format)"}, "month": {"type": "string", "description": "Month to look up (MM format)"}}, "required": ["year", "month"]}}}, {"type": "function", "function": {"name": "find_group_or_club", "description": "Provides meetings or club information on certain topics based on the area around the specific location.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Where to find a meeting or club"}, "topic": {"type": "string", "description": "Interest"}}, "required": ["location", "topic"]}}}, {"type": "function", "function": {"name": "convert_to_uppercase", "description": "Converted strings to capital letters", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "String"}}, "required": ["text"]}}}, {"type": "function", "function": {"name": "generate_random_special_chars", "description": "Randomly return by selecting 5 special characters randomly from a special character set.", "parameters": {"type": "object", "properties": {}, "required": []}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell us the location and interest of interest to find a meeting."}, "acceptable_arguments": null}
{"serial_num": 61, "category": "SLOT-all", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Please register your friend's birthday ~~~"}], "input_tools": [{"type": "function", "function": {"name": "getCurrentUTCTime", "description": "We offer current UTC time.", "parameters": {}}}, {"type": "function", "function": {"name": "count_characters", "description": "Returns the total number of characters from a given string", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Cell string"}}, "required": ["text"]}}}, {"type": "function", "function": {"name": "registerFriendBirthday", "description": "A function that registers a friend's name and birthday information", "parameters": {"type": "object", "properties": {"friendName": {"type": "string", "description": "A friend's name to register"}, "birthday": {"type": "string", "description": "The birthday of a friend to register (YYYY-MM-DD format)"}}, "required": ["friendName", "birthday"]}}}, {"type": "function", "function": {"name": "update_item_quantity_in_shopping_cart", "description": "Update the quantity of specific products in the shopping cart", "parameters": {"type": "object", "properties": {"user_id": {"type": "string", "description": "User's unique identifier"}, "product_id": {"type": "string", "description": "A unique identifier of products that want to update the quantity"}, "new_quantity": {"type": "integer", "description": "New quantity to update"}}, "required": ["user_id", "product_id", "new_quantity"]}}}, {"type": "function", "function": {"name": "calculateTimeDifference", "description": "The time difference between the two regions is returned every time.", "parameters": {"type": "object", "properties": {"fromTimezone": {"type": "string", "description": "Time zone area"}, "toTimezone": {"type": "string", "description": "Time zone area for comparison"}}, "required": ["fromTimezone", "toTimezone"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me your friend's name and birthday."}, "acceptable_arguments": null}
{"serial_num": 62, "category": "SLOT-all", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Please register your birthday"}], "input_tools": [{"type": "function", "function": {"name": "recommendLottoNumber", "description": "It is a function that recommends a lotto number randomly.", "parameters": {"type": "object", "properties": {}, "required": []}}}, {"type": "function", "function": {"name": "search_flight", "description": "Search for a flight from a specific airport and arriving at a specific airport.", "parameters": {"type": "object", "properties": {"departure_airport": {"type": "string", "description": "Departure airport name (extracted as user expression. Example: Los Angeles International Airport, Gimhae Airport, etc.)"}, "arrival_airport": {"type": "string", "description": "Arrival airport name (extracting as it is, Example: Los Angeles International Airport, Gimhae Airport, etc.)"}, "departure_date": {"type": "string", "description": "Departure Date (YYYY-MM-DD)"}}, "required": ["departure_airport", "arrival_airport", "departure_date"]}}}, {"type": "function", "function": {"name": "registerFriendBirthday", "description": "A function that registers a friend's name and birthday information", "parameters": {"type": "object", "properties": {"friendName": {"type": "string", "description": "A friend's name to register"}, "birthday": {"type": "string", "description": "The birthday of a friend to register (YYYY-MM-DD format)"}}, "required": ["friendName", "birthday"]}}}, {"type": "function", "function": {"name": "calculate_discount", "description": "Input the original price and discount rate (percentage unit) to calculate the discounted price.", "parameters": {"type": "object", "properties": {"original_price": {"type": "number", "description": "Original price of the product"}, "discount_percentage": {"type": "number", "description": "Discount rate to be applied (for example, 20% discount)"}}, "required": ["original_price", "discount_percentage"]}}}, {"type": "function", "function": {"name": "count_lowercase_letters", "description": "The number of lowercase in the string", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Cell string for lowercase"}}, "required": ["text"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me your friend's name and birthday."}, "acceptable_arguments": null}
{"serial_num": 63, "category": "SLOT-all", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Birthday registration"}], "input_tools": [{"type": "function", "function": {"name": "search_message_content", "description": "Search for a message containing the keywords specified by the user among the saved messages.", "parameters": {"type": "object", "properties": {"keyword": {"type": "string", "description": "Keyword to search"}, "from_date": {"type": "string", "description": "Date to start searching (optional)"}, "to_date": {"type": "string", "description": "Date to finish the search (optional)"}}, "required": ["keyword"]}}}, {"type": "function", "function": {"name": "track_order", "description": "Inquire an order status (ordering, payment completion, shipping, delivery, etc.) with a given order number and informed the expected shipping date or expected delivery date.", "parameters": {"type": "object", "properties": {"order_id": {"type": "string", "description": "Order number to search"}}, "required": ["order_id"]}}}, {"type": "function", "function": {"name": "registerFriendBirthday", "description": "A function that registers a friend's name and birthday information", "parameters": {"type": "object", "properties": {"friendName": {"type": "string", "description": "A friend's name to register"}, "birthday": {"type": "string", "description": "The birthday of a friend to register (YYYY-MM-DD format)"}}, "required": ["friendName", "birthday"]}}}, {"type": "function", "function": {"name": "getMonthlyBoxOfficeRanking", "description": "It offers a monthly box office ranking for the designated year and month.", "parameters": {"type": "object", "properties": {"year": {"type": "string", "description": "The year to look up (yyyy format)"}, "month": {"type": "string", "description": "Month to look up (MM format)"}}, "required": ["year", "month"]}}}, {"type": "function", "function": {"name": "deleteMemo", "description": "Delete the previously stored notes", "parameters": {"type": "object", "properties": {"memo_id": {"type": "string", "description": "A unique identifier of the memo to delete"}}, "required": ["memo_id"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me your friend's name and birthday."}, "acceptable_arguments": null}
{"serial_num": 64, "category": "SLOT-all", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "If you can register your birthday, run it !!"}], "input_tools": [{"type": "function", "function": {"name": "convert_eur_to_jpy", "description": "Convert the given Euro (EUR) amount to JPY", "parameters": {"type": "object", "properties": {"amount_eur": {"type": "number", "description": "EUR amount to convert"}}, "required": ["amount_eur"]}}}, {"type": "function", "function": {"name": "convert_pyeong_to_squaremeter", "description": "Convert it to \"평\"을 입력받아서, \"제곱미터\".", "parameters": {"type": "object", "properties": {"pyeong": {"type": "number", "description": "Pyeongsu to be transformed"}}, "required": ["pyeong"]}}}, {"type": "function", "function": {"name": "registerFriendBirthday", "description": "A function that registers a friend's name and birthday information", "parameters": {"type": "object", "properties": {"friendName": {"type": "string", "description": "A friend's name to register"}, "birthday": {"type": "string", "description": "The birthday of a friend to register (YYYY-MM-DD format)"}}, "required": ["friendName", "birthday"]}}}, {"type": "function", "function": {"name": "discover_new_releases_hiphop", "description": "Provides the latest music release information of the hip -hop genre", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "getCurrentUTCTime", "description": "We offer current UTC time.", "parameters": {}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me your friend's name and birthday."}, "acceptable_arguments": null}
{"serial_num": 65, "category": "SLOT-all", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Send email."}], "input_tools": [{"type": "function", "function": {"name": "informWeather", "description": "Provide current weather information in a particular area", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Local name to bring weather information"}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "registerFriendBirthday", "description": "A function that registers a friend's name and birthday information", "parameters": {"type": "object", "properties": {"friendName": {"type": "string", "description": "A friend's name to register"}, "birthday": {"type": "string", "description": "The birthday of a friend to register (YYYY-MM-DD format)"}}, "required": ["friendName", "birthday"]}}}, {"type": "function", "function": {"name": "sendEmail", "description": "Send email to a specific email address.", "parameters": {"type": "object", "properties": {"receiverEmail": {"type": "string", "description": "EMAIL address of the recipient"}, "subject": {"type": "string", "description": "Email title"}, "body": {"type": "string", "description": "Email content"}}, "required": ["receiverEmail", "subject", "body"]}}}, {"type": "function", "function": {"name": "informLottoWinnerPrizeByDate", "description": "It is a function that informs the amount of lottery winnings on a specific date.", "parameters": {"type": "object", "properties": {"date": {"type": "string", "description": "Date to check the amount of lottery winnings (e.g., March 4)"}}, "required": ["date"]}}}, {"type": "function", "function": {"name": "generate_playlist_based_on_favorite_artist", "description": "Create customized playlist based on preferred artists", "parameters": {"type": "object", "properties": {"artist_name": {"type": "string", "description": "The name of the artist that users prefer"}}, "required": ["artist_name"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell us the title and contents of your email address and email."}, "acceptable_arguments": null}
{"serial_num": 66, "category": "SLOT-all", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "I want to send an email."}], "input_tools": [{"type": "function", "function": {"name": "calculate_discount", "description": "Input the original price and discount rate (percentage unit) to calculate the discounted price.", "parameters": {"type": "object", "properties": {"original_price": {"type": "number", "description": "Original price of the product"}, "discount_percentage": {"type": "number", "description": "Discount rate to be applied (for example, 20% discount)"}}, "required": ["original_price", "discount_percentage"]}}}, {"type": "function", "function": {"name": "generate_random_special_chars", "description": "Randomly return by selecting 5 special characters randomly from a special character set.", "parameters": {"type": "object", "properties": {}, "required": []}}}, {"type": "function", "function": {"name": "sendEmail", "description": "Send email to a specific email address.", "parameters": {"type": "object", "properties": {"receiverEmail": {"type": "string", "description": "EMAIL address of the recipient"}, "subject": {"type": "string", "description": "Email title"}, "body": {"type": "string", "description": "Email content"}}, "required": ["receiverEmail", "subject", "body"]}}}, {"type": "function", "function": {"name": "getDayOfWeek", "description": "Returns the day of the given date.", "parameters": {"type": "object", "properties": {"date": {"type": "string", "description": "Yyyy-mm-DD format date"}}, "required": ["date"]}}}, {"type": "function", "function": {"name": "search_flight", "description": "Search for a flight from a specific airport and arriving at a specific airport.", "parameters": {"type": "object", "properties": {"departure_airport": {"type": "string", "description": "Departure airport name (extracted as user expression. Example: Los Angeles International Airport, Gimhae Airport, etc.)"}, "arrival_airport": {"type": "string", "description": "Arrival airport name (extracting as it is, Example: Los Angeles International Airport, Gimhae Airport, etc.)"}, "departure_date": {"type": "string", "description": "Departure Date (YYYY-MM-DD)"}}, "required": ["departure_airport", "arrival_airport", "departure_date"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell us the title and contents of your email address and email."}, "acceptable_arguments": null}
{"serial_num": 67, "category": "SLOT-all", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "I send an email to the mail address I tell you. I'll tell you the title and the text."}], "input_tools": [{"type": "function", "function": {"name": "get_movie_schedule", "description": "Inquire a certain date and screening schedule for a specific movie theater.", "parameters": {"type": "object", "properties": {"movie_date": {"type": "string", "description": "Date to look up (YYYY-MM-DD)"}, "movie_location": {"type": "string", "description": "Cinema to look upon"}}, "required": ["movie_date", "movie_location"]}}}, {"type": "function", "function": {"name": "calculateProteinNeeds", "description": "Daily recommended protein intake considering activity level and weight", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}, "activityLevel": {"type": "string", "description": "Activity level ('low', 'moderate', 'high')"}}, "required": ["weight", "activityLevel"]}}}, {"type": "function", "function": {"name": "sendEmail", "description": "Send email to a specific email address.", "parameters": {"type": "object", "properties": {"receiverEmail": {"type": "string", "description": "EMAIL address of the recipient"}, "subject": {"type": "string", "description": "Email title"}, "body": {"type": "string", "description": "Email content"}}, "required": ["receiverEmail", "subject", "body"]}}}, {"type": "function", "function": {"name": "calculateLifeExpectancy", "description": "BMI, physical activity level, and smoking status estimates average life expectancy", "parameters": {"type": "object", "properties": {"BMI": {"type": "number", "description": "Body mass index (BMI)"}, "activityLevel": {"type": "string", "description": "Physical activity level (low, normal, high choice)"}, "smokingStatus": {"type": "boolean", "description": "Smoking state (smoking = true, non -smoking = false)"}}, "required": ["BMI", "activityLevel", "smokingStatus"]}}}, {"type": "function", "function": {"name": "convert_currency", "description": "Returns a value that exchanges a currency into another currency.", "parameters": {"type": "object", "properties": {"amount": {"type": "number", "description": "Money"}, "from": {"type": "string", "description": "Type of currency currency exchange"}, "to": {"type": "string", "description": "Type of currency exchange results"}}, "required": ["amount", "from", "to"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "all right. Please tell us the title and contents of your email address and email."}, "acceptable_arguments": null}
{"serial_num": 68, "category": "SLOT-all", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Can you send an email? I'll tell you the title and the text"}], "input_tools": [{"type": "function", "function": {"name": "generate_image_from_text", "description": "Create a picture based on a given text", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Text to create a picture"}}, "required": ["text"]}}}, {"type": "function", "function": {"name": "add_item_to_shopping_cart", "description": "Add new products to the shopping cart", "parameters": {"type": "object", "properties": {"product_id": {"type": "string", "description": "The unique identifier of the product you want to add"}, "quantity": {"type": "integer", "description": "Quantity"}}, "required": ["product_id", "quantity"]}}}, {"type": "function", "function": {"name": "sendEmail", "description": "Send email to a specific email address.", "parameters": {"type": "object", "properties": {"receiverEmail": {"type": "string", "description": "EMAIL address of the recipient"}, "subject": {"type": "string", "description": "Email title"}, "body": {"type": "string", "description": "Email content"}}, "required": ["receiverEmail", "subject", "body"]}}}, {"type": "function", "function": {"name": "compare_it_device_prices", "description": "It compares the price of IT devices from various sellers to provide low sales information.", "parameters": {"type": "object", "properties": {"device_name": {"type": "string", "description": "Name of IT devices that want to compare prices"}}, "required": ["device_name"]}}}, {"type": "function", "function": {"name": "convert_to_lowercase", "description": "Converted string to lowercase", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "String to be converted into lowercase"}}, "required": ["text"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "all right. Please tell us the title and contents of your email address and email."}, "acceptable_arguments": null}
{"serial_num": 69, "category": "SLOT-all", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Please transfer accounts."}], "input_tools": [{"type": "function", "function": {"name": "update_movie_rating", "description": "Update (modify or add) movie rating in the movie scrapbook.", "parameters": {"type": "object", "properties": {"movie_id": {"type": "string", "description": "ID of the movie to update the rating"}, "new_rating": {"type": "integer", "description": "New rating to give to the movie (1 ~ 5)"}}, "required": ["movie_id", "new_rating"]}}}, {"type": "function", "function": {"name": "schedule_meeting", "description": "Book a meeting.", "parameters": {"type": "object", "properties": {"participants": {"type": "string", "description": "Participant list (if there are multiple participants, it is divided into a comma (,).)"}, "date_time": {"type": "string", "description": "Date and time of meeting (yyyy-mm-dd hh: mm format)"}}, "required": ["participants", "date_time"]}}}, {"type": "function", "function": {"name": "transferMoney", "description": "Send money to a specific account.", "parameters": {"type": "object", "properties": {"receiver_bank": {"type": "string", "description": "Bank"}, "receiver_account": {"type": "string", "description": "Account number to send"}, "amount": {"type": "number", "description": "Missing money (unit: krw))"}}, "required": ["receiver_bank", "receiver_account", "amount"]}}}, {"type": "function", "function": {"name": "get_currency_trend_3months", "description": "Provides exchange rate fluctuations for the last three months for the designated currency", "parameters": {"type": "object", "properties": {"currency_code": {"type": "string", "description": "Code of currency to bring the exchange rate fluctuations (e.g. USD, EUR, JPY)"}}, "required": ["currency_code"]}}}, {"type": "function", "function": {"name": "informLottoNumberByDate", "description": "It is a function that informs the lottery winning number on a specific date.", "parameters": {"type": "object", "properties": {"date": {"type": "string", "description": "Date to check the lottery winning number (e.g., March 4)"}}, "required": ["date"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the bank name, account number, and money to be transferred."}, "acceptable_arguments": null}
{"serial_num": 70, "category": "SLOT-all", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "I have to send a dinner to my friend yesterday. Can I send money?"}], "input_tools": [{"type": "function", "function": {"name": "get_currency_trend_3months", "description": "Provides exchange rate fluctuations for the last three months for the designated currency", "parameters": {"type": "object", "properties": {"currency_code": {"type": "string", "description": "Code of currency to bring the exchange rate fluctuations (e.g. USD, EUR, JPY)"}}, "required": ["currency_code"]}}}, {"type": "function", "function": {"name": "checkBankBalance", "description": "Look up the balance of a specific bank account.", "parameters": {"type": "object", "properties": {"accountBank": {"type": "string", "description": "The bank name of the account to view the balance"}, "accountNumber": {"type": "string", "description": "Account number to view the balance"}}, "required": ["accountBank", "accountNumber"]}}}, {"type": "function", "function": {"name": "transferMoney", "description": "Send money to a specific account.", "parameters": {"type": "object", "properties": {"receiver_bank": {"type": "string", "description": "Bank"}, "receiver_account": {"type": "string", "description": "Account number to send"}, "amount": {"type": "number", "description": "Missing money (unit: krw))"}}, "required": ["receiver_bank", "receiver_account", "amount"]}}}, {"type": "function", "function": {"name": "track_order", "description": "Inquire an order status (ordering, payment completion, shipping, delivery, etc.) with a given order number and informed the expected shipping date or expected delivery date.", "parameters": {"type": "object", "properties": {"order_id": {"type": "string", "description": "Order number to search"}}, "required": ["order_id"]}}}, {"type": "function", "function": {"name": "DeleteEvent", "description": "Delete schedule from calendar", "parameters": {"type": "object", "properties": {"event_id": {"type": "string", "description": "ID of the schedule to be deleted"}}, "required": ["event_id"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the bank name, account number, and money to be transferred."}, "acceptable_arguments": null}
{"serial_num": 71, "category": "SLOT-all", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Please transfer money to another account."}], "input_tools": [{"type": "function", "function": {"name": "search_contact", "description": "Search for a list of contacts in the name of a person and bring his phone number and email address.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "The name of a person who wants to check the contact"}}, "required": ["name"]}}}, {"type": "function", "function": {"name": "getWeatherForecastForNext7Days", "description": "For the designated area, we offer a 7 -day weather forecast, including today.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "The name of the area where the weather forecast"}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "transferMoney", "description": "Send money to a specific account.", "parameters": {"type": "object", "properties": {"receiver_bank": {"type": "string", "description": "Bank"}, "receiver_account": {"type": "string", "description": "Account number to send"}, "amount": {"type": "number", "description": "Missing money (unit: krw))"}}, "required": ["receiver_bank", "receiver_account", "amount"]}}}, {"type": "function", "function": {"name": "generate_random_special_chars", "description": "Randomly return by selecting 5 special characters randomly from a special character set.", "parameters": {"type": "object", "properties": {}, "required": []}}}, {"type": "function", "function": {"name": "check_traffic_status", "description": "Inquire the current traffic situation on a particular path.", "parameters": {"type": "object", "properties": {"start_location": {"type": "string", "description": "Departure"}, "end_location": {"type": "string", "description": "Arrival point"}}, "required": ["start_location", "end_location"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the bank name, account number, and money to be transferred."}, "acceptable_arguments": null}
{"serial_num": 72, "category": "SLOT-all", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Send some money to your brother."}], "input_tools": [{"type": "function", "function": {"name": "calculateBMR", "description": "Basal metabolic rate calculation", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}, "height": {"type": "number", "description": "Centimeter key"}, "age": {"type": "integer", "description": "age"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["weight", "height", "age", "gender"]}}}, {"type": "function", "function": {"name": "getCurrentKoreaTime", "description": "Currently, the time of Korea is returned to year-month-day: minor: second format.", "parameters": {}}}, {"type": "function", "function": {"name": "transferMoney", "description": "Send money to a specific account.", "parameters": {"type": "object", "properties": {"receiver_bank": {"type": "string", "description": "Bank"}, "receiver_account": {"type": "string", "description": "Account number to send"}, "amount": {"type": "number", "description": "Missing money (unit: krw))"}}, "required": ["receiver_bank", "receiver_account", "amount"]}}}, {"type": "function", "function": {"name": "create_user", "description": "Create a new user account.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "User's name"}, "email": {"type": "string", "description": "User's email address"}, "password": {"type": "string", "description": "User's password"}}, "required": ["name", "email", "password"]}}}, {"type": "function", "function": {"name": "search_email_content", "description": "Search for emails containing keywords specified by the user during the saved email.", "parameters": {"type": "object", "properties": {"keyword": {"type": "string", "description": "Keyword to search"}, "from_date": {"type": "string", "description": "Date to start searching (optional)"}, "to_date": {"type": "string", "description": "Date to finish the search (optional)"}, "sender": {"type": "string", "description": "Email caller address (optional)"}}, "required": ["keyword"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the bank name, account number, and money to be transferred."}, "acceptable_arguments": null}
{"serial_num": 73, "category": "SLOT-all", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "This evening is a pizza. Please order."}], "input_tools": [{"type": "function", "function": {"name": "create_playlist", "description": "Create a music playlist that fits the user's tastes and conditions", "parameters": {"type": "object", "properties": {"genre": {"type": "string", "description": "The genre of music to be included in the playlist"}, "mood": {"type": "string", "description": "Playlist's mood or atmosphere"}, "count": {"type": "integer", "description": "The number of songs to be included in the playlist"}, "include_live": {"type": "boolean", "description": "Live version songs include"}}, "required": ["genre", "mood", "count"]}}}, {"type": "function", "function": {"name": "convert_to_lowercase", "description": "Converted string to lowercase", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "String to be converted into lowercase"}}, "required": ["text"]}}}, {"type": "function", "function": {"name": "OrderPizza", "description": "Order pizza.", "parameters": {"type": "object", "properties": {"PizzaType": {"type": "string", "description": "Pizza"}, "size": {"type": "string", "description": "Pizza size (extracted as it is, example: Small, L, Medium, etc.)"}, "quantity": {"type": "integer", "description": "Order quantity"}}, "required": ["PizzaType", "size", "quantity"]}}}, {"type": "function", "function": {"name": "searchFriendBirthday", "description": "A function that enters a friend's name and searches for birthday information", "parameters": {"type": "object", "properties": {"friendName": {"type": "string", "description": "A friend's name to search"}}, "required": ["friendName"]}}}, {"type": "function", "function": {"name": "registerFriendBirthday", "description": "A function that registers a friend's name and birthday information", "parameters": {"type": "object", "properties": {"friendName": {"type": "string", "description": "A friend's name to register"}, "birthday": {"type": "string", "description": "The birthday of a friend to register (YYYY-MM-DD format)"}}, "required": ["friendName", "birthday"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the type of pizza, the size of the pizza, and the order quantity."}, "acceptable_arguments": null}
{"serial_num": 74, "category": "SLOT-all", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "I want to order pizza."}], "input_tools": [{"type": "function", "function": {"name": "calculateProteinNeeds", "description": "Daily recommended protein intake considering activity level and weight", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}, "activityLevel": {"type": "string", "description": "Activity level ('low', 'moderate', 'high')"}}, "required": ["weight", "activityLevel"]}}}, {"type": "function", "function": {"name": "add_contact", "description": "Register a new contact.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "Name to register a contact"}, "phone": {"type": "string", "description": "phone number"}, "email": {"type": "string", "description": "Email address"}}, "required": ["name"]}}}, {"type": "function", "function": {"name": "OrderPizza", "description": "Order pizza.", "parameters": {"type": "object", "properties": {"PizzaType": {"type": "string", "description": "Pizza"}, "size": {"type": "string", "description": "Pizza size (extracted as it is, example: Small, L, Medium, etc.)"}, "quantity": {"type": "integer", "description": "Order quantity"}}, "required": ["PizzaType", "size", "quantity"]}}}, {"type": "function", "function": {"name": "convertTimeBetweenTimezones", "description": "Convert time to another time in one time.", "parameters": {"type": "object", "properties": {"originalTime": {"type": "string", "description": "Reference time to convert (format HH: mm)"}, "fromTimezone": {"type": "string", "description": "Standard time zone (region name)"}, "toTimezone": {"type": "string", "description": "Time to be converted (region name)"}}, "required": ["originalTime", "fromTimezone", "toTimezone"]}}}, {"type": "function", "function": {"name": "calculate_tip", "description": "Tip calculation", "parameters": {"type": "object", "properties": {"bill_amount": {"type": "number", "description": "Billed amount"}, "tip_percentage": {"type": "number", "description": "Tip 100 division (for example, 15 input for 15%)"}}, "required": ["bill_amount", "tip_percentage"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the type of pizza, the size of the pizza, and the order quantity."}, "acceptable_arguments": null}
{"serial_num": 75, "category": "SLOT-all", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Please order pizza as I say"}], "input_tools": [{"type": "function", "function": {"name": "registerFriendBirthday", "description": "A function that registers a friend's name and birthday information", "parameters": {"type": "object", "properties": {"friendName": {"type": "string", "description": "A friend's name to register"}, "birthday": {"type": "string", "description": "The birthday of a friend to register (YYYY-MM-DD format)"}}, "required": ["friendName", "birthday"]}}}, {"type": "function", "function": {"name": "calculate_discount", "description": "Input the original price and discount rate (percentage unit) to calculate the discounted price.", "parameters": {"type": "object", "properties": {"original_price": {"type": "number", "description": "Original price of the product"}, "discount_percentage": {"type": "number", "description": "Discount rate to be applied (for example, 20% discount)"}}, "required": ["original_price", "discount_percentage"]}}}, {"type": "function", "function": {"name": "OrderPizza", "description": "Order pizza.", "parameters": {"type": "object", "properties": {"PizzaType": {"type": "string", "description": "Pizza"}, "size": {"type": "string", "description": "Pizza size (extracted as it is, example: Small, L, Medium, etc.)"}, "quantity": {"type": "integer", "description": "Order quantity"}}, "required": ["PizzaType", "size", "quantity"]}}}, {"type": "function", "function": {"name": "transferMoney", "description": "Send money to a specific account.", "parameters": {"type": "object", "properties": {"receiver_bank": {"type": "string", "description": "Bank"}, "receiver_account": {"type": "string", "description": "Account number to send"}, "amount": {"type": "number", "description": "Missing money (unit: krw))"}}, "required": ["receiver_bank", "receiver_account", "amount"]}}}, {"type": "function", "function": {"name": "find_nearest_emergency_room_by_location", "description": "Based on a specific location, it provides the location and information of the nearby emergency room.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Current location (example: station, address, building name, etc.)"}}, "required": ["location"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the type of pizza, the size of the pizza, and the order quantity."}, "acceptable_arguments": null}
{"serial_num": 76, "category": "SLOT-all", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Can I order? I'm trying to order pizza."}], "input_tools": [{"type": "function", "function": {"name": "convert_euro_to_koruna", "description": "Convert the Given EUR amount to Czech Coruna (CZK)", "parameters": {"type": "object", "properties": {"amount_euro": {"type": "number", "description": "EUR amount to convert"}, "exchange_rate_eur_to_czk": {"type": "number", "description": "Exchange rate from EUR to CZK"}}, "required": ["amount_euro", "exchange_rate_eur_to_czk"]}}}, {"type": "function", "function": {"name": "getCurrentTopSeries", "description": "We offer the current popular TV series rankings", "parameters": {"type": "object", "properties": {}, "required": []}}}, {"type": "function", "function": {"name": "OrderPizza", "description": "Order pizza.", "parameters": {"type": "object", "properties": {"PizzaType": {"type": "string", "description": "Pizza"}, "size": {"type": "string", "description": "Pizza size (extracted as it is, example: Small, L, Medium, etc.)"}, "quantity": {"type": "integer", "description": "Order quantity"}}, "required": ["PizzaType", "size", "quantity"]}}}, {"type": "function", "function": {"name": "calculateCaloricNeeds", "description": "A function that estimates the average daily calorie consumption", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}, "height": {"type": "number", "description": "Centimeter key"}, "age": {"type": "integer", "description": "age"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["weight", "height", "age", "gender"]}}}, {"type": "function", "function": {"name": "convert_pyeong_to_squaremeter", "description": "Convert it to \"평\"을 입력받아서, \"제곱미터\".", "parameters": {"type": "object", "properties": {"pyeong": {"type": "number", "description": "Pyeongsu to be transformed"}}, "required": ["pyeong"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the type of pizza, the size of the pizza, and the order quantity."}, "acceptable_arguments": null}
{"serial_num": 77, "category": "SLOT-all", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Can you find a plane?"}], "input_tools": [{"type": "function", "function": {"name": "convert_currency", "description": "Returns a value that exchanges a currency into another currency.", "parameters": {"type": "object", "properties": {"amount": {"type": "number", "description": "Money"}, "from": {"type": "string", "description": "Type of currency currency exchange"}, "to": {"type": "string", "description": "Type of currency exchange results"}}, "required": ["amount", "from", "to"]}}}, {"type": "function", "function": {"name": "FindPrinterError", "description": "Returns the current error status (lack of paper, lack of ink, etc.) of certain printers in the company.", "parameters": {"type": "object", "properties": {"PrinterLocation": {"type": "string", "description": "The location of the printer to identify the error condition"}}, "required": ["PrinterLocation"]}}}, {"type": "function", "function": {"name": "search_flight", "description": "Search for a flight from a specific airport and arriving at a specific airport.", "parameters": {"type": "object", "properties": {"departure_airport": {"type": "string", "description": "Departure airport name (extracted as user expression. Example: Los Angeles International Airport, Gimhae Airport, etc.)"}, "arrival_airport": {"type": "string", "description": "Arrival airport name (extracting as it is, Example: Los Angeles International Airport, Gimhae Airport, etc.)"}, "departure_date": {"type": "string", "description": "Departure Date (YYYY-MM-DD)"}}, "required": ["departure_airport", "arrival_airport", "departure_date"]}}}, {"type": "function", "function": {"name": "get_currency_trend_3months", "description": "Provides exchange rate fluctuations for the last three months for the designated currency", "parameters": {"type": "object", "properties": {"currency_code": {"type": "string", "description": "Code of currency to bring the exchange rate fluctuations (e.g. USD, EUR, JPY)"}}, "required": ["currency_code"]}}}, {"type": "function", "function": {"name": "convert_to_lowercase", "description": "Converted string to lowercase", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "String to be converted into lowercase"}}, "required": ["text"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell us the departure airport name, arrival airport name, and departure date."}, "acceptable_arguments": null}
{"serial_num": 78, "category": "SLOT-all", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Learn a flight."}], "input_tools": [{"type": "function", "function": {"name": "recommendLottoNumber", "description": "It is a function that recommends a lotto number randomly.", "parameters": {"type": "object", "properties": {}, "required": []}}}, {"type": "function", "function": {"name": "get_stock_price", "description": "Search the current price of a particular stock.", "parameters": {"type": "object", "properties": {"stock_name": {"type": "string", "description": "Stock name to look up"}}, "required": ["stock_name"]}}}, {"type": "function", "function": {"name": "search_flight", "description": "Search for a flight from a specific airport and arriving at a specific airport.", "parameters": {"type": "object", "properties": {"departure_airport": {"type": "string", "description": "Departure airport name (extracted as user expression. Example: Los Angeles International Airport, Gimhae Airport, etc.)"}, "arrival_airport": {"type": "string", "description": "Arrival airport name (extracting as it is, Example: Los Angeles International Airport, Gimhae Airport, etc.)"}, "departure_date": {"type": "string", "description": "Departure Date (YYYY-MM-DD)"}}, "required": ["departure_airport", "arrival_airport", "departure_date"]}}}, {"type": "function", "function": {"name": "bookBusinessVehicle", "description": "Book a car for business trips.", "parameters": {"type": "object", "properties": {"destination": {"type": "string", "description": "destination"}, "departure_date": {"type": "string", "description": "Express your departure date as it is. Example) '다음 주 월요일', '2022년 1월 1일'"}}, "required": ["destination", "departure_date"]}}}, {"type": "function", "function": {"name": "DeleteEvent", "description": "Delete schedule from calendar", "parameters": {"type": "object", "properties": {"event_id": {"type": "string", "description": "ID of the schedule to be deleted"}}, "required": ["event_id"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell us the departure airport name, arrival airport name, and departure date."}, "acceptable_arguments": null}
{"serial_num": 79, "category": "SLOT-all", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Find some flight information."}], "input_tools": [{"type": "function", "function": {"name": "convert_to_lowercase", "description": "Converted string to lowercase", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "String to be converted into lowercase"}}, "required": ["text"]}}}, {"type": "function", "function": {"name": "reserve_restaurant", "description": "Reservation of the restaurant with the information provided by the user. Example) Please make a reservation at 6 pm tonight", "parameters": {"type": "object", "properties": {"store": {"type": "string", "description": "Restaurant name"}, "reservationDate": {"type": "string", "description": "Reservation date (YYYY-MM-DD)"}, "reservationTime": {"type": "string", "description": "Reservation time (hh: mm)"}, "numberOfPeople": {"type": "integer", "description": "Number of reservations"}}, "required": ["store", "reservationDate", "reservationTime", "numberOfPeople"]}}}, {"type": "function", "function": {"name": "search_flight", "description": "Search for a flight from a specific airport and arriving at a specific airport.", "parameters": {"type": "object", "properties": {"departure_airport": {"type": "string", "description": "Departure airport name (extracted as user expression. Example: Los Angeles International Airport, Gimhae Airport, etc.)"}, "arrival_airport": {"type": "string", "description": "Arrival airport name (extracting as it is, Example: Los Angeles International Airport, Gimhae Airport, etc.)"}, "departure_date": {"type": "string", "description": "Departure Date (YYYY-MM-DD)"}}, "required": ["departure_airport", "arrival_airport", "departure_date"]}}}, {"type": "function", "function": {"name": "convert_euro_to_koruna", "description": "Convert the Given EUR amount to Czech Coruna (CZK)", "parameters": {"type": "object", "properties": {"amount_euro": {"type": "number", "description": "EUR amount to convert"}, "exchange_rate_eur_to_czk": {"type": "number", "description": "Exchange rate from EUR to CZK"}}, "required": ["amount_euro", "exchange_rate_eur_to_czk"]}}}, {"type": "function", "function": {"name": "generate_random_password", "description": "Create any password with certain conditions", "parameters": {"type": "object", "properties": {"length": {"type": "integer", "description": "Password length"}, "include_uppercase": {"type": "boolean", "description": "Including alphabet uppercase letters"}, "include_lowercase": {"type": "boolean", "description": "Including alphabet lowercase"}, "include_numbers": {"type": "boolean", "description": "Whether the number includes"}}, "required": ["length", "include_uppercase", "include_lowercase", "include_numbers"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell us the departure airport name, arrival airport name, and departure date."}, "acceptable_arguments": null}
{"serial_num": 80, "category": "SLOT-all", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Can I search for what day I have?"}], "input_tools": [{"type": "function", "function": {"name": "convert_krw_to_usd", "description": "Converted Korean money (KRW) to USD (USD)", "parameters": {"type": "object", "properties": {"amount_krw": {"type": "number", "description": "Korean money (KRW) amount to convert"}, "exchange_rate_krw_to_usd": {"type": "number", "description": "Exchange rate from KRW to USD"}}, "required": ["amount_krw", "exchange_rate_krw_to_usd"]}}}, {"type": "function", "function": {"name": "getCurrentKoreaTime", "description": "Currently, the time of Korea is returned to year-month-day: minor: second format.", "parameters": {}}}, {"type": "function", "function": {"name": "search_flight", "description": "Search for a flight from a specific airport and arriving at a specific airport.", "parameters": {"type": "object", "properties": {"departure_airport": {"type": "string", "description": "Departure airport name (extracted as user expression. Example: Los Angeles International Airport, Gimhae Airport, etc.)"}, "arrival_airport": {"type": "string", "description": "Arrival airport name (extracting as it is, Example: Los Angeles International Airport, Gimhae Airport, etc.)"}, "departure_date": {"type": "string", "description": "Departure Date (YYYY-MM-DD)"}}, "required": ["departure_airport", "arrival_airport", "departure_date"]}}}, {"type": "function", "function": {"name": "informLottoNumberByRound", "description": "It is a function that informs the lottery winning number of a specific episode.", "parameters": {"type": "object", "properties": {"round": {"type": "integer", "description": "The round to check the lottery winning number"}}, "required": ["round"]}}}, {"type": "function", "function": {"name": "count_lowercase_letters", "description": "The number of lowercase in the string", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Cell string for lowercase"}}, "required": ["text"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell us the departure airport name, arrival airport name, and departure date."}, "acceptable_arguments": null}
{"serial_num": 81, "category": "SLOT-all", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Compare the companies that can clean the apartment."}], "input_tools": [{"type": "function", "function": {"name": "schedule_laundry_pickup", "description": "Apply for a service to collect laundry.", "parameters": {"type": "object", "properties": {"pickup_location": {"type": "string", "description": "Extract the location of the user as it is to collect the laundry. (Example: House, 101 -dong 102, etc."}, "pickup_date": {"type": "string", "description": "Extract the laundry collection date as it is. (Example: next Monday, January 1, 2022, etc.)"}, "pickup_time": {"type": "string", "description": "Extract the time to collect the laundry as it is. (Example: 2 pm, 7 pm, etc.)"}}, "required": ["pickup_location", "pickup_date", "pickup_time"]}}}, {"type": "function", "function": {"name": "getCurrentUTCTime", "description": "We offer current UTC time.", "parameters": {}}}, {"type": "function", "function": {"name": "compareCleaningServices", "description": "Compare the service of the cleaning company and provide information.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Location or area where cleaning services are needed"}, "requested_date": {"type": "string", "format": "date", "description": "Service date (extract user as it is. Example: next Monday, January 1, 2022, etc.)"}, "size": {"type": "string", "description": "Pyeongsu or area of ​​the house (flat, square meter)"}}, "required": ["location", "requested_date", "size"]}}}, {"type": "function", "function": {"name": "convertTimeBetweenTimezones", "description": "Convert time to another time in one time.", "parameters": {"type": "object", "properties": {"originalTime": {"type": "string", "description": "Reference time to convert (format HH: mm)"}, "fromTimezone": {"type": "string", "description": "Standard time zone (region name)"}, "toTimezone": {"type": "string", "description": "Time to be converted (region name)"}}, "required": ["originalTime", "fromTimezone", "toTimezone"]}}}, {"type": "function", "function": {"name": "calculateBMR", "description": "Basal metabolic rate calculation", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}, "height": {"type": "number", "description": "Centimeter key"}, "age": {"type": "integer", "description": "age"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["weight", "height", "age", "gender"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell us the location and date you need the service, the flat water or area of ​​the house."}, "acceptable_arguments": null}
{"serial_num": 82, "category": "SLOT-all", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Compare the places where you can clean the studio to me"}], "input_tools": [{"type": "function", "function": {"name": "searchMemo", "description": "Search for notes containing keywords specified by the user among the saved memos.", "parameters": {"type": "object", "properties": {"keyword": {"type": "string", "description": "Keyword to search"}}, "required": ["keyword"]}}}, {"type": "function", "function": {"name": "add_movie_review", "description": "Add a review of a specific movie to the movie scrapbook.", "parameters": {"type": "object", "properties": {"movie_id": {"type": "string", "description": "ID of the movie to add a review"}, "review_text": {"type": "string", "description": "Movie review contents"}}, "required": ["movie_id", "review_text"]}}}, {"type": "function", "function": {"name": "compareCleaningServices", "description": "Compare the service of the cleaning company and provide information.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Location or area where cleaning services are needed"}, "requested_date": {"type": "string", "format": "date", "description": "Service date (extract user as it is. Example: next Monday, January 1, 2022, etc.)"}, "size": {"type": "string", "description": "Pyeongsu or area of ​​the house (flat, square meter)"}}, "required": ["location", "requested_date", "size"]}}}, {"type": "function", "function": {"name": "book_concert_tickets", "description": "Tickets for specific performances are made using external ticketing systems.", "parameters": {"type": "object", "properties": {"concert_name": {"type": "string", "description": "The name of the performance you want to book"}, "number_of_tickets": {"type": "integer", "description": "Quantity"}, "seat_type": {"type": "string", "description": "Selected seat type (e.g. VIP, general)"}}, "required": ["concert_name", "number_of_tickets", "seat_type"]}}}, {"type": "function", "function": {"name": "informTyphoon", "description": "It provides location information of the current typhoon.", "parameters": {"type": "object", "properties": {"typhoonName": {"type": "string", "description": "The name of the typhoon to look upon"}}, "required": ["typhoonName"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell us the location and date you need the service, the flat water or area of ​​the house."}, "acceptable_arguments": null}
{"serial_num": 83, "category": "SLOT-all", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Can you find and compare the services that can be cleaned?"}], "input_tools": [{"type": "function", "function": {"name": "check_traffic_status", "description": "Inquire the current traffic situation on a particular path.", "parameters": {"type": "object", "properties": {"start_location": {"type": "string", "description": "Departure"}, "end_location": {"type": "string", "description": "Arrival point"}}, "required": ["start_location", "end_location"]}}}, {"type": "function", "function": {"name": "CheckTaxRefund", "description": "Search for the user's tax refund.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "The name of the tax paymenter"}, "birth": {"type": "string", "description": "Date of birth of tax payers (YYYY-MM-DD)"}, "phone_number": {"type": "string", "description": "Contact of tax payers"}}, "required": ["name", "birth", "phone_number"]}}}, {"type": "function", "function": {"name": "compareCleaningServices", "description": "Compare the service of the cleaning company and provide information.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Location or area where cleaning services are needed"}, "requested_date": {"type": "string", "format": "date", "description": "Service date (extract user as it is. Example: next Monday, January 1, 2022, etc.)"}, "size": {"type": "string", "description": "Pyeongsu or area of ​​the house (flat, square meter)"}}, "required": ["location", "requested_date", "size"]}}}, {"type": "function", "function": {"name": "convert_pyeong_to_squaremeter", "description": "Convert it to \"평\"을 입력받아서, \"제곱미터\".", "parameters": {"type": "object", "properties": {"pyeong": {"type": "number", "description": "Pyeongsu to be transformed"}}, "required": ["pyeong"]}}}, {"type": "function", "function": {"name": "generate_syntax_tree_from_text", "description": "Create a syntax tree for a given text", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Text to create a syntax tree"}}, "required": ["text"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell us the location and date you need the service, the flat water or area of ​​the house."}, "acceptable_arguments": null}
{"serial_num": 84, "category": "SLOT-all", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "My house is a bit big, but compare the companies that can be cleaned."}], "input_tools": [{"type": "function", "function": {"name": "informTyphoon", "description": "It provides location information of the current typhoon.", "parameters": {"type": "object", "properties": {"typhoonName": {"type": "string", "description": "The name of the typhoon to look upon"}}, "required": ["typhoonName"]}}}, {"type": "function", "function": {"name": "bookBusinessVehicle", "description": "Book a car for business trips.", "parameters": {"type": "object", "properties": {"destination": {"type": "string", "description": "destination"}, "departure_date": {"type": "string", "description": "Express your departure date as it is. Example) '다음 주 월요일', '2022년 1월 1일'"}}, "required": ["destination", "departure_date"]}}}, {"type": "function", "function": {"name": "compareCleaningServices", "description": "Compare the service of the cleaning company and provide information.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Location or area where cleaning services are needed"}, "requested_date": {"type": "string", "format": "date", "description": "Service date (extract user as it is. Example: next Monday, January 1, 2022, etc.)"}, "size": {"type": "string", "description": "Pyeongsu or area of ​​the house (flat, square meter)"}}, "required": ["location", "requested_date", "size"]}}}, {"type": "function", "function": {"name": "count_uppercase_letters", "description": "The number of uppercase letters in the string", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Cell string"}}, "required": ["text"]}}}, {"type": "function", "function": {"name": "getDailyNewsHeadlines", "description": "Today's main news headline is provided.", "parameters": {"type": "object", "properties": {}, "required": []}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell us the location and date you need the service, the flat water or area of ​​the house."}, "acceptable_arguments": null}
{"serial_num": 85, "category": "SLOT-all", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Put online my work online"}], "input_tools": [{"type": "function", "function": {"name": "convert_euro_to_koruna", "description": "Convert the Given EUR amount to Czech Coruna (CZK)", "parameters": {"type": "object", "properties": {"amount_euro": {"type": "number", "description": "EUR amount to convert"}, "exchange_rate_eur_to_czk": {"type": "number", "description": "Exchange rate from EUR to CZK"}}, "required": ["amount_euro", "exchange_rate_eur_to_czk"]}}}, {"type": "function", "function": {"name": "count_characters", "description": "Returns the total number of characters from a given string", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Cell string"}}, "required": ["text"]}}}, {"type": "function", "function": {"name": "upload_artwork_to_online_site", "description": "Upload your work to the online art platform.", "parameters": {"type": "object", "properties": {"art_image_url": {"type": "string", "description": "The image of the work to be uploaded URL"}, "title": {"type": "string", "description": "Title of the work"}, "description": {"type": "string", "description": "A brief explanation of the work"}}, "required": ["art_image_url", "title", "description"]}}}, {"type": "function", "function": {"name": "add_contact", "description": "Register a new contact.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "Name to register a contact"}, "phone": {"type": "string", "description": "phone number"}, "email": {"type": "string", "description": "Email address"}}, "required": ["name"]}}}, {"type": "function", "function": {"name": "getCurrentTopSeries", "description": "We offer the current popular TV series rankings", "parameters": {"type": "object", "properties": {}, "required": []}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell us the image URL and the title of the work to be uploaded."}, "acceptable_arguments": null}
{"serial_num": 86, "category": "SLOT-all", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Can you post my work on the art platform?"}], "input_tools": [{"type": "function", "function": {"name": "calculateCaloricNeeds", "description": "A function that estimates the average daily calorie consumption", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}, "height": {"type": "number", "description": "Centimeter key"}, "age": {"type": "integer", "description": "age"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["weight", "height", "age", "gender"]}}}, {"type": "function", "function": {"name": "track_order", "description": "Inquire an order status (ordering, payment completion, shipping, delivery, etc.) with a given order number and informed the expected shipping date or expected delivery date.", "parameters": {"type": "object", "properties": {"order_id": {"type": "string", "description": "Order number to search"}}, "required": ["order_id"]}}}, {"type": "function", "function": {"name": "upload_artwork_to_online_site", "description": "Upload your work to the online art platform.", "parameters": {"type": "object", "properties": {"art_image_url": {"type": "string", "description": "The image of the work to be uploaded URL"}, "title": {"type": "string", "description": "Title of the work"}, "description": {"type": "string", "description": "A brief explanation of the work"}}, "required": ["art_image_url", "title", "description"]}}}, {"type": "function", "function": {"name": "informWeather", "description": "Provide current weather information in a particular area", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Local name to bring weather information"}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "search_email_content", "description": "Search for emails containing keywords specified by the user during the saved email.", "parameters": {"type": "object", "properties": {"keyword": {"type": "string", "description": "Keyword to search"}, "from_date": {"type": "string", "description": "Date to start searching (optional)"}, "to_date": {"type": "string", "description": "Date to finish the search (optional)"}, "sender": {"type": "string", "description": "Email caller address (optional)"}}, "required": ["keyword"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell us the image URL and the title of the work to be uploaded."}, "acceptable_arguments": null}
{"serial_num": 87, "category": "SLOT-all", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "I'll post a work on the online art platform."}], "input_tools": [{"type": "function", "function": {"name": "update_movie_rating", "description": "Update (modify or add) movie rating in the movie scrapbook.", "parameters": {"type": "object", "properties": {"movie_id": {"type": "string", "description": "ID of the movie to update the rating"}, "new_rating": {"type": "integer", "description": "New rating to give to the movie (1 ~ 5)"}}, "required": ["movie_id", "new_rating"]}}}, {"type": "function", "function": {"name": "getDailyNewsHeadlines", "description": "Today's main news headline is provided.", "parameters": {"type": "object", "properties": {}, "required": []}}}, {"type": "function", "function": {"name": "upload_artwork_to_online_site", "description": "Upload your work to the online art platform.", "parameters": {"type": "object", "properties": {"art_image_url": {"type": "string", "description": "The image of the work to be uploaded URL"}, "title": {"type": "string", "description": "Title of the work"}, "description": {"type": "string", "description": "A brief explanation of the work"}}, "required": ["art_image_url", "title", "description"]}}}, {"type": "function", "function": {"name": "getWeatherForecastForNext7Days", "description": "For the designated area, we offer a 7 -day weather forecast, including today.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "The name of the area where the weather forecast"}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "count_words", "description": "Calculation of words in a given text (sentence or paragraph)", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Cell text"}}, "required": ["text"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell us the image URL and the title of the work to be uploaded."}, "acceptable_arguments": null}
{"serial_num": 88, "category": "SLOT-all", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Put it on the platform."}], "input_tools": [{"type": "function", "function": {"name": "informWeather", "description": "Provide current weather information in a particular area", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Local name to bring weather information"}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "create_playlist", "description": "Create a music playlist that fits the user's tastes and conditions", "parameters": {"type": "object", "properties": {"genre": {"type": "string", "description": "The genre of music to be included in the playlist"}, "mood": {"type": "string", "description": "Playlist's mood or atmosphere"}, "count": {"type": "integer", "description": "The number of songs to be included in the playlist"}, "include_live": {"type": "boolean", "description": "Live version songs include"}}, "required": ["genre", "mood", "count"]}}}, {"type": "function", "function": {"name": "upload_artwork_to_online_site", "description": "Upload your work to the online art platform.", "parameters": {"type": "object", "properties": {"art_image_url": {"type": "string", "description": "The image of the work to be uploaded URL"}, "title": {"type": "string", "description": "Title of the work"}, "description": {"type": "string", "description": "A brief explanation of the work"}}, "required": ["art_image_url", "title", "description"]}}}, {"type": "function", "function": {"name": "calculate_bmi", "description": "Calculation of human body mass index (BMI)", "parameters": {"type": "object", "properties": {"height": {"type": "number", "description": "Centimeter key"}, "weight": {"type": "number", "description": "Kilogram unit weight"}}, "required": ["height", "weight"]}}}, {"type": "function", "function": {"name": "CheckTaxRefund", "description": "Search for the user's tax refund.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "The name of the tax paymenter"}, "birth": {"type": "string", "description": "Date of birth of tax payers (YYYY-MM-DD)"}, "phone_number": {"type": "string", "description": "Contact of tax payers"}}, "required": ["name", "birth", "phone_number"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell us the image URL and the title of the work to be uploaded."}, "acceptable_arguments": null}
{"serial_num": 89, "category": "SLOT-all", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Please make a ticket for this concert ticket."}], "input_tools": [{"type": "function", "function": {"name": "upload_artwork_to_online_site", "description": "Upload your work to the online art platform.", "parameters": {"type": "object", "properties": {"art_image_url": {"type": "string", "description": "The image of the work to be uploaded URL"}, "title": {"type": "string", "description": "Title of the work"}, "description": {"type": "string", "description": "A brief explanation of the work"}}, "required": ["art_image_url", "title", "description"]}}}, {"type": "function", "function": {"name": "getCurrentTimeForLocation", "description": "Provide current time information in certain areas", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Local name to bring time information"}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "book_concert_tickets", "description": "Tickets for specific performances are made using external ticketing systems.", "parameters": {"type": "object", "properties": {"concert_name": {"type": "string", "description": "The name of the performance you want to book"}, "number_of_tickets": {"type": "integer", "description": "Quantity"}, "seat_type": {"type": "string", "description": "Selected seat type (e.g. VIP, general)"}}, "required": ["concert_name", "number_of_tickets", "seat_type"]}}}, {"type": "function", "function": {"name": "calculateBMR", "description": "Basal metabolic rate calculation", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}, "height": {"type": "number", "description": "Centimeter key"}, "age": {"type": "integer", "description": "age"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["weight", "height", "age", "gender"]}}}, {"type": "function", "function": {"name": "search_email_content", "description": "Search for emails containing keywords specified by the user during the saved email.", "parameters": {"type": "object", "properties": {"keyword": {"type": "string", "description": "Keyword to search"}, "from_date": {"type": "string", "description": "Date to start searching (optional)"}, "to_date": {"type": "string", "description": "Date to finish the search (optional)"}, "sender": {"type": "string", "description": "Email caller address (optional)"}}, "required": ["keyword"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the performance name, ticket quantity, and seat type."}, "acceptable_arguments": null}
{"serial_num": 90, "category": "SLOT-all", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "I want to make a concert reservation."}], "input_tools": [{"type": "function", "function": {"name": "generate_image_from_text", "description": "Create a picture based on a given text", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Text to create a picture"}}, "required": ["text"]}}}, {"type": "function", "function": {"name": "calculate_tax", "description": "Calculate the tax on the given amount.", "parameters": {"type": "object", "properties": {"amount": {"type": "number", "description": "Prior to calculating"}, "tax_rate": {"type": "number", "description": "Tax rate to be applied (percentage)"}}, "required": ["amount", "tax_rate"]}}}, {"type": "function", "function": {"name": "book_concert_tickets", "description": "Tickets for specific performances are made using external ticketing systems.", "parameters": {"type": "object", "properties": {"concert_name": {"type": "string", "description": "The name of the performance you want to book"}, "number_of_tickets": {"type": "integer", "description": "Quantity"}, "seat_type": {"type": "string", "description": "Selected seat type (e.g. VIP, general)"}}, "required": ["concert_name", "number_of_tickets", "seat_type"]}}}, {"type": "function", "function": {"name": "start_playlist", "description": "Play the playlist that the user requests.", "parameters": {"type": "object", "properties": {"playlist": {"type": "string", "description": "Name of playlist"}, "shuffle": {"type": "boolean", "description": "Playlist shuffle"}, "repeat": {"type": "boolean", "description": "Repeating playlists"}}, "required": ["playlist"]}}}, {"type": "function", "function": {"name": "informWeather", "description": "Provide current weather information in a particular area", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Local name to bring weather information"}}, "required": ["location"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the performance name, ticket quantity, and seat type."}, "acceptable_arguments": null}
{"serial_num": 91, "category": "SLOT-all", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "I want to see you, but I want to make a reservation."}], "input_tools": [{"type": "function", "function": {"name": "get_stock_price", "description": "Search the current price of a particular stock.", "parameters": {"type": "object", "properties": {"stock_name": {"type": "string", "description": "Stock name to look up"}}, "required": ["stock_name"]}}}, {"type": "function", "function": {"name": "start_playlist", "description": "Play the playlist that the user requests.", "parameters": {"type": "object", "properties": {"playlist": {"type": "string", "description": "Name of playlist"}, "shuffle": {"type": "boolean", "description": "Playlist shuffle"}, "repeat": {"type": "boolean", "description": "Repeating playlists"}}, "required": ["playlist"]}}}, {"type": "function", "function": {"name": "book_concert_tickets", "description": "Tickets for specific performances are made using external ticketing systems.", "parameters": {"type": "object", "properties": {"concert_name": {"type": "string", "description": "The name of the performance you want to book"}, "number_of_tickets": {"type": "integer", "description": "Quantity"}, "seat_type": {"type": "string", "description": "Selected seat type (e.g. VIP, general)"}}, "required": ["concert_name", "number_of_tickets", "seat_type"]}}}, {"type": "function", "function": {"name": "convert_eur_to_jpy", "description": "Convert the given Euro (EUR) amount to JPY", "parameters": {"type": "object", "properties": {"amount_eur": {"type": "number", "description": "EUR amount to convert"}}, "required": ["amount_eur"]}}}, {"type": "function", "function": {"name": "count_words", "description": "Calculation of words in a given text (sentence or paragraph)", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Cell text"}}, "required": ["text"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the performance name, ticket quantity, and seat type."}, "acceptable_arguments": null}
{"serial_num": 92, "category": "SLOT-all", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Can I make a ticket for a performance ticket?"}], "input_tools": [{"type": "function", "function": {"name": "search_contact", "description": "Search for a list of contacts in the name of a person and bring his phone number and email address.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "The name of a person who wants to check the contact"}}, "required": ["name"]}}}, {"type": "function", "function": {"name": "CallTaxi", "description": "Call a taxi from a specific location.", "parameters": {"type": "object", "properties": {"pickup_location": {"type": "string", "description": "Departure location (address, station name, building name, etc.)"}, "destination": {"type": "string", "description": "Arrival location (address, station name, building name, etc.)"}}, "required": ["pickup_location", "destination"]}}}, {"type": "function", "function": {"name": "book_concert_tickets", "description": "Tickets for specific performances are made using external ticketing systems.", "parameters": {"type": "object", "properties": {"concert_name": {"type": "string", "description": "The name of the performance you want to book"}, "number_of_tickets": {"type": "integer", "description": "Quantity"}, "seat_type": {"type": "string", "description": "Selected seat type (e.g. VIP, general)"}}, "required": ["concert_name", "number_of_tickets", "seat_type"]}}}, {"type": "function", "function": {"name": "calculateCaloriesBurnedByWalking", "description": "Calculate the amount of calories consumed while walking on a given street.", "parameters": {"type": "object", "properties": {"distance": {"type": "number", "description": "Walking distance (kilometers)"}, "weight": {"type": "number", "description": "User's weight (kilogram unit)"}}, "required": ["distance", "weight"]}}}, {"type": "function", "function": {"name": "calculateCaloricNeeds", "description": "A function that estimates the average daily calorie consumption", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}, "height": {"type": "number", "description": "Centimeter key"}, "age": {"type": "integer", "description": "age"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["weight", "height", "age", "gender"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the performance name, ticket quantity, and seat type."}, "acceptable_arguments": null}
{"serial_num": 93, "category": "SLOT-all", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Can you check my tax refund?"}], "input_tools": [{"type": "function", "function": {"name": "getWeatherForecastForNext7Days", "description": "For the designated area, we offer a 7 -day weather forecast, including today.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "The name of the area where the weather forecast"}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "DeleteEvent", "description": "Delete schedule from calendar", "parameters": {"type": "object", "properties": {"event_id": {"type": "string", "description": "ID of the schedule to be deleted"}}, "required": ["event_id"]}}}, {"type": "function", "function": {"name": "CheckTaxRefund", "description": "Search for the user's tax refund.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "The name of the tax paymenter"}, "birth": {"type": "string", "description": "Date of birth of tax payers (YYYY-MM-DD)"}, "phone_number": {"type": "string", "description": "Contact of tax payers"}}, "required": ["name", "birth", "phone_number"]}}}, {"type": "function", "function": {"name": "update_contact", "description": "Update (modify or add) contents of existing contacts.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "Name stored in the current contact"}, "new_name": {"type": "string", "description": "Name to update"}, "new_phone": {"type": "string", "description": "Phone number to update"}, "new_email": {"type": "string", "description": "Email address to be updated"}}, "required": ["name"]}}}, {"type": "function", "function": {"name": "transferMoney", "description": "Send money to a specific account.", "parameters": {"type": "object", "properties": {"receiver_bank": {"type": "string", "description": "Bank"}, "receiver_account": {"type": "string", "description": "Account number to send"}, "amount": {"type": "number", "description": "Missing money (unit: krw))"}}, "required": ["receiver_bank", "receiver_account", "amount"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the name of the tax paymenter, date of birth, and contact information."}, "acceptable_arguments": null}
{"serial_num": 94, "category": "SLOT-all", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Please check the tax refund"}], "input_tools": [{"type": "function", "function": {"name": "translate_text_to_english", "description": "Translate the given text into English", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Text translation in English"}}, "required": ["text"]}}}, {"type": "function", "function": {"name": "informLottoNumberByRound", "description": "It is a function that informs the lottery winning number of a specific episode.", "parameters": {"type": "object", "properties": {"round": {"type": "integer", "description": "The round to check the lottery winning number"}}, "required": ["round"]}}}, {"type": "function", "function": {"name": "CheckTaxRefund", "description": "Search for the user's tax refund.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "The name of the tax paymenter"}, "birth": {"type": "string", "description": "Date of birth of tax payers (YYYY-MM-DD)"}, "phone_number": {"type": "string", "description": "Contact of tax payers"}}, "required": ["name", "birth", "phone_number"]}}}, {"type": "function", "function": {"name": "getMonthlyBoxOfficeRanking", "description": "It offers a monthly box office ranking for the designated year and month.", "parameters": {"type": "object", "properties": {"year": {"type": "string", "description": "The year to look up (yyyy format)"}, "month": {"type": "string", "description": "Month to look up (MM format)"}}, "required": ["year", "month"]}}}, {"type": "function", "function": {"name": "calculateWaterIntakeRequirement", "description": "Daily recommended water intake based on weight based on weight", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}}, "required": ["weight"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the name of the tax paymenter, date of birth, and contact information."}, "acceptable_arguments": null}
{"serial_num": 95, "category": "SLOT-all", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Please check the tax refund status."}], "input_tools": [{"type": "function", "function": {"name": "convert_currency", "description": "Returns a value that exchanges a currency into another currency.", "parameters": {"type": "object", "properties": {"amount": {"type": "number", "description": "Money"}, "from": {"type": "string", "description": "Type of currency currency exchange"}, "to": {"type": "string", "description": "Type of currency exchange results"}}, "required": ["amount", "from", "to"]}}}, {"type": "function", "function": {"name": "transferMoney", "description": "Send money to a specific account.", "parameters": {"type": "object", "properties": {"receiver_bank": {"type": "string", "description": "Bank"}, "receiver_account": {"type": "string", "description": "Account number to send"}, "amount": {"type": "number", "description": "Missing money (unit: krw))"}}, "required": ["receiver_bank", "receiver_account", "amount"]}}}, {"type": "function", "function": {"name": "CheckTaxRefund", "description": "Search for the user's tax refund.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "The name of the tax paymenter"}, "birth": {"type": "string", "description": "Date of birth of tax payers (YYYY-MM-DD)"}, "phone_number": {"type": "string", "description": "Contact of tax payers"}}, "required": ["name", "birth", "phone_number"]}}}, {"type": "function", "function": {"name": "getCurrentTopSeries", "description": "We offer the current popular TV series rankings", "parameters": {"type": "object", "properties": {}, "required": []}}}, {"type": "function", "function": {"name": "calculateTimeDifference", "description": "The time difference between the two regions is returned every time.", "parameters": {"type": "object", "properties": {"fromTimezone": {"type": "string", "description": "Time zone area"}, "toTimezone": {"type": "string", "description": "Time zone area for comparison"}}, "required": ["fromTimezone", "toTimezone"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the name of the tax paymenter, date of birth, and contact information."}, "acceptable_arguments": null}
{"serial_num": 96, "category": "SLOT-all", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "I want to check the tax refund."}], "input_tools": [{"type": "function", "function": {"name": "convert_eur_to_jpy", "description": "Convert the given Euro (EUR) amount to JPY", "parameters": {"type": "object", "properties": {"amount_eur": {"type": "number", "description": "EUR amount to convert"}}, "required": ["amount_eur"]}}}, {"type": "function", "function": {"name": "compare_office_supplies_prices", "description": "Compare office supplies prices of various stores and provide the lowest price information.", "parameters": {"type": "object", "properties": {"product_name": {"type": "string", "description": "Product name that wants to compare prices"}, "quantity": {"type": "integer", "description": "Quantity"}}, "required": ["product_name", "quantity"]}}}, {"type": "function", "function": {"name": "CheckTaxRefund", "description": "Search for the user's tax refund.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "The name of the tax paymenter"}, "birth": {"type": "string", "description": "Date of birth of tax payers (YYYY-MM-DD)"}, "phone_number": {"type": "string", "description": "Contact of tax payers"}}, "required": ["name", "birth", "phone_number"]}}}, {"type": "function", "function": {"name": "update_contact", "description": "Update (modify or add) contents of existing contacts.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "Name stored in the current contact"}, "new_name": {"type": "string", "description": "Name to update"}, "new_phone": {"type": "string", "description": "Phone number to update"}, "new_email": {"type": "string", "description": "Email address to be updated"}}, "required": ["name"]}}}, {"type": "function", "function": {"name": "informTyphoon", "description": "It provides location information of the current typhoon.", "parameters": {"type": "object", "properties": {"typhoonName": {"type": "string", "description": "The name of the typhoon to look upon"}}, "required": ["typhoonName"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the name of the tax paymenter, date of birth, and contact information."}, "acceptable_arguments": null}
{"serial_num": 97, "category": "SLOT-all", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Let me take the laundry."}], "input_tools": [{"type": "function", "function": {"name": "calculate_bmi", "description": "Calculation of human body mass index (BMI)", "parameters": {"type": "object", "properties": {"height": {"type": "number", "description": "Centimeter key"}, "weight": {"type": "number", "description": "Kilogram unit weight"}}, "required": ["height", "weight"]}}}, {"type": "function", "function": {"name": "add_item_to_shopping_cart", "description": "Add new products to the shopping cart", "parameters": {"type": "object", "properties": {"product_id": {"type": "string", "description": "The unique identifier of the product you want to add"}, "quantity": {"type": "integer", "description": "Quantity"}}, "required": ["product_id", "quantity"]}}}, {"type": "function", "function": {"name": "schedule_laundry_pickup", "description": "Apply for a service to collect laundry.", "parameters": {"type": "object", "properties": {"pickup_location": {"type": "string", "description": "Extract the location of the user as it is to collect the laundry. (Example: House, 101 -dong 102, etc."}, "pickup_date": {"type": "string", "description": "Extract the laundry collection date as it is. (Example: next Monday, January 1, 2022, etc.)"}, "pickup_time": {"type": "string", "description": "Extract the time to collect the laundry as it is. (Example: 2 pm, 7 pm, etc.)"}}, "required": ["pickup_location", "pickup_date", "pickup_time"]}}}, {"type": "function", "function": {"name": "searchFriendBirthday", "description": "A function that enters a friend's name and searches for birthday information", "parameters": {"type": "object", "properties": {"friendName": {"type": "string", "description": "A friend's name to search"}}, "required": ["friendName"]}}}, {"type": "function", "function": {"name": "track_order", "description": "Inquire an order status (ordering, payment completion, shipping, delivery, etc.) with a given order number and informed the expected shipping date or expected delivery date.", "parameters": {"type": "object", "properties": {"order_id": {"type": "string", "description": "Order number to search"}}, "required": ["order_id"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell us the location, date and time to collect laundry."}, "acceptable_arguments": null}
{"serial_num": 98, "category": "SLOT-all", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "I'm trying to apply for a laundry collection service."}], "input_tools": [{"type": "function", "function": {"name": "translate_text_to_english", "description": "Translate the given text into English", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Text translation in English"}}, "required": ["text"]}}}, {"type": "function", "function": {"name": "add_contact", "description": "Register a new contact.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "Name to register a contact"}, "phone": {"type": "string", "description": "phone number"}, "email": {"type": "string", "description": "Email address"}}, "required": ["name"]}}}, {"type": "function", "function": {"name": "schedule_laundry_pickup", "description": "Apply for a service to collect laundry.", "parameters": {"type": "object", "properties": {"pickup_location": {"type": "string", "description": "Extract the location of the user as it is to collect the laundry. (Example: House, 101 -dong 102, etc."}, "pickup_date": {"type": "string", "description": "Extract the laundry collection date as it is. (Example: next Monday, January 1, 2022, etc.)"}, "pickup_time": {"type": "string", "description": "Extract the time to collect the laundry as it is. (Example: 2 pm, 7 pm, etc.)"}}, "required": ["pickup_location", "pickup_date", "pickup_time"]}}}, {"type": "function", "function": {"name": "setTimer", "description": "Set the timer as much as the user requested.", "parameters": {"type": "object", "properties": {"duration": {"type": "number", "description": "Timer setting time (unit: seconds)"}}, "required": ["duration"]}}}, {"type": "function", "function": {"name": "get_exchange_rate", "description": "Bring the exchange rate between the two currencies.", "parameters": {"type": "object", "properties": {"base_currency": {"type": "string", "description": "The Currency to Convert from."}, "target_currency": {"type": "string", "description": "The current to convert to."}}, "required": ["base_currency", "target_currency"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell us the location, date and time to collect laundry."}, "acceptable_arguments": null}
{"serial_num": 99, "category": "SLOT-all", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Is it possible to book a laundry collection?"}], "input_tools": [{"type": "function", "function": {"name": "add_item_to_shopping_cart", "description": "Add new products to the shopping cart", "parameters": {"type": "object", "properties": {"product_id": {"type": "string", "description": "The unique identifier of the product you want to add"}, "quantity": {"type": "integer", "description": "Quantity"}}, "required": ["product_id", "quantity"]}}}, {"type": "function", "function": {"name": "CheckTaxRefund", "description": "Search for the user's tax refund.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "The name of the tax paymenter"}, "birth": {"type": "string", "description": "Date of birth of tax payers (YYYY-MM-DD)"}, "phone_number": {"type": "string", "description": "Contact of tax payers"}}, "required": ["name", "birth", "phone_number"]}}}, {"type": "function", "function": {"name": "schedule_laundry_pickup", "description": "Apply for a service to collect laundry.", "parameters": {"type": "object", "properties": {"pickup_location": {"type": "string", "description": "Extract the location of the user as it is to collect the laundry. (Example: House, 101 -dong 102, etc."}, "pickup_date": {"type": "string", "description": "Extract the laundry collection date as it is. (Example: next Monday, January 1, 2022, etc.)"}, "pickup_time": {"type": "string", "description": "Extract the time to collect the laundry as it is. (Example: 2 pm, 7 pm, etc.)"}}, "required": ["pickup_location", "pickup_date", "pickup_time"]}}}, {"type": "function", "function": {"name": "discover_new_releases_hiphop", "description": "Provides the latest music release information of the hip -hop genre", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "recommendLottoNumber", "description": "It is a function that recommends a lotto number randomly.", "parameters": {"type": "object", "properties": {}, "required": []}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell us the location, date and time to collect laundry."}, "acceptable_arguments": null}
{"serial_num": 100, "category": "SLOT-all", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "I want to apply for a laundry collection service."}], "input_tools": [{"type": "function", "function": {"name": "discover_new_releases_kpop", "description": "Provides the latest music release information of the K -pop genre", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "recommendLottoNumber", "description": "It is a function that recommends a lotto number randomly.", "parameters": {"type": "object", "properties": {}, "required": []}}}, {"type": "function", "function": {"name": "schedule_laundry_pickup", "description": "Apply for a service to collect laundry.", "parameters": {"type": "object", "properties": {"pickup_location": {"type": "string", "description": "Extract the location of the user as it is to collect the laundry. (Example: House, 101 -dong 102, etc."}, "pickup_date": {"type": "string", "description": "Extract the laundry collection date as it is. (Example: next Monday, January 1, 2022, etc.)"}, "pickup_time": {"type": "string", "description": "Extract the time to collect the laundry as it is. (Example: 2 pm, 7 pm, etc.)"}}, "required": ["pickup_location", "pickup_date", "pickup_time"]}}}, {"type": "function", "function": {"name": "check_traffic_status", "description": "Inquire the current traffic situation on a particular path.", "parameters": {"type": "object", "properties": {"start_location": {"type": "string", "description": "Departure"}, "end_location": {"type": "string", "description": "Arrival point"}}, "required": ["start_location", "end_location"]}}}, {"type": "function", "function": {"name": "count_lowercase_letters", "description": "The number of lowercase in the string", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Cell string for lowercase"}}, "required": ["text"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell us the location, date and time to collect laundry."}, "acceptable_arguments": null}
{"serial_num": 1, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Call me a taxi. Departure is Lotte Cinema Wirye."}], "input_tools": [{"type": "function", "function": {"name": "getCurrentKoreaTime", "description": "Currently, the time of Korea is returned to year-month-day: minor: second format.", "parameters": {}}}, {"type": "function", "function": {"name": "add_contact", "description": "Register a new contact.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "Name to register a contact"}, "phone": {"type": "string", "description": "phone number"}, "email": {"type": "string", "description": "Email address"}}, "required": ["name"]}}}, {"type": "function", "function": {"name": "CallTaxi", "description": "Call a taxi from a specific location.", "parameters": {"type": "object", "properties": {"pickup_location": {"type": "string", "description": "Departure location (address, station name, building name, etc.)"}, "destination": {"type": "string", "description": "Arrival location (address, station name, building name, etc.)"}}, "required": ["pickup_location", "destination"]}}}, {"type": "function", "function": {"name": "compareCleaningServices", "description": "Compare the service of the cleaning company and provide information.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Location or area where cleaning services are needed"}, "requested_date": {"type": "string", "format": "date", "description": "Service date (extract user as it is. Example: next Monday, January 1, 2022, etc.)"}, "size": {"type": "string", "description": "Pyeongsu or area of ​​the house (flat, square meter)"}}, "required": ["location", "requested_date", "size"]}}}, {"type": "function", "function": {"name": "calculateCaloriesBurnedByWalking", "description": "Calculate the amount of calories consumed while walking on a given street.", "parameters": {"type": "object", "properties": {"distance": {"type": "number", "description": "Walking distance (kilometers)"}, "weight": {"type": "number", "description": "User's weight (kilogram unit)"}}, "required": ["distance", "weight"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the arrival location."}, "acceptable_arguments": null}
{"serial_num": 2, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Call me a taxi. The destination is Gwanggyo Lake Elementary School."}], "input_tools": [{"type": "function", "function": {"name": "create_user", "description": "Create a new user account.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "User's name"}, "email": {"type": "string", "description": "User's email address"}, "password": {"type": "string", "description": "User's password"}}, "required": ["name", "email", "password"]}}}, {"type": "function", "function": {"name": "update_item_quantity_in_shopping_cart", "description": "Update the quantity of specific products in the shopping cart", "parameters": {"type": "object", "properties": {"user_id": {"type": "string", "description": "User's unique identifier"}, "product_id": {"type": "string", "description": "A unique identifier of products that want to update the quantity"}, "new_quantity": {"type": "integer", "description": "New quantity to update"}}, "required": ["user_id", "product_id", "new_quantity"]}}}, {"type": "function", "function": {"name": "CallTaxi", "description": "Call a taxi from a specific location.", "parameters": {"type": "object", "properties": {"pickup_location": {"type": "string", "description": "Departure location (address, station name, building name, etc.)"}, "destination": {"type": "string", "description": "Arrival location (address, station name, building name, etc.)"}}, "required": ["pickup_location", "destination"]}}}, {"type": "function", "function": {"name": "getCurrentUTCTime", "description": "We offer current UTC time.", "parameters": {}}}, {"type": "function", "function": {"name": "calculate_bmi", "description": "Calculation of human body mass index (BMI)", "parameters": {"type": "object", "properties": {"height": {"type": "number", "description": "Centimeter key"}, "weight": {"type": "number", "description": "Kilogram unit weight"}}, "required": ["height", "weight"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the departure location."}, "acceptable_arguments": null}
{"serial_num": 3, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Please call me a taxi right now."}, {"role": "assistant", "content": "Please tell me the departure location and the arrival location."}, {"role": "user", "content": "Please call Gwanggyo Galleria Department Store."}], "input_tools": [{"type": "function", "function": {"name": "create_user", "description": "Create a new user account.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "User's name"}, "email": {"type": "string", "description": "User's email address"}, "password": {"type": "string", "description": "User's password"}}, "required": ["name", "email", "password"]}}}, {"type": "function", "function": {"name": "update_item_quantity_in_shopping_cart", "description": "Update the quantity of specific products in the shopping cart", "parameters": {"type": "object", "properties": {"user_id": {"type": "string", "description": "User's unique identifier"}, "product_id": {"type": "string", "description": "A unique identifier of products that want to update the quantity"}, "new_quantity": {"type": "integer", "description": "New quantity to update"}}, "required": ["user_id", "product_id", "new_quantity"]}}}, {"type": "function", "function": {"name": "CallTaxi", "description": "Call a taxi from a specific location.", "parameters": {"type": "object", "properties": {"pickup_location": {"type": "string", "description": "Departure location (address, station name, building name, etc.)"}, "destination": {"type": "string", "description": "Arrival location (address, station name, building name, etc.)"}}, "required": ["pickup_location", "destination"]}}}, {"type": "function", "function": {"name": "getCurrentUTCTime", "description": "We offer current UTC time.", "parameters": {}}}, {"type": "function", "function": {"name": "calculate_bmi", "description": "Calculation of human body mass index (BMI)", "parameters": {"type": "object", "properties": {"height": {"type": "number", "description": "Centimeter key"}, "weight": {"type": "number", "description": "Kilogram unit weight"}}, "required": ["height", "weight"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the arrival location."}, "acceptable_arguments": null}
{"serial_num": 4, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Please call me a taxi."}, {"role": "assistant", "content": "Please tell me the departure location and the arrival location."}, {"role": "user", "content": "Please call a taxi to the main gate of Sogang University."}], "input_tools": [{"type": "function", "function": {"name": "calculateLifeExpectancy", "description": "BMI, physical activity level, and smoking status estimates average life expectancy", "parameters": {"type": "object", "properties": {"BMI": {"type": "number", "description": "Body mass index (BMI)"}, "activityLevel": {"type": "string", "description": "Physical activity level (low, normal, high choice)"}, "smokingStatus": {"type": "boolean", "description": "Smoking state (smoking = true, non -smoking = false)"}}, "required": ["BMI", "activityLevel", "smokingStatus"]}}}, {"type": "function", "function": {"name": "deleteMemo", "description": "Delete the previously stored notes", "parameters": {"type": "object", "properties": {"memo_id": {"type": "string", "description": "A unique identifier of the memo to delete"}}, "required": ["memo_id"]}}}, {"type": "function", "function": {"name": "CallTaxi", "description": "Call a taxi from a specific location.", "parameters": {"type": "object", "properties": {"pickup_location": {"type": "string", "description": "Departure location (address, station name, building name, etc.)"}, "destination": {"type": "string", "description": "Arrival location (address, station name, building name, etc.)"}}, "required": ["pickup_location", "destination"]}}}, {"type": "function", "function": {"name": "generate_random_password", "description": "Create any password with certain conditions", "parameters": {"type": "object", "properties": {"length": {"type": "integer", "description": "Password length"}, "include_uppercase": {"type": "boolean", "description": "Including alphabet uppercase letters"}, "include_lowercase": {"type": "boolean", "description": "Including alphabet lowercase"}, "include_numbers": {"type": "boolean", "description": "Whether the number includes"}}, "required": ["length", "include_uppercase", "include_lowercase", "include_numbers"]}}}, {"type": "function", "function": {"name": "registerFriendBirthday", "description": "A function that registers a friend's name and birthday information", "parameters": {"type": "object", "properties": {"friendName": {"type": "string", "description": "A friend's name to register"}, "birthday": {"type": "string", "description": "The birthday of a friend to register (YYYY-MM-DD format)"}}, "required": ["friendName", "birthday"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the departure location."}, "acceptable_arguments": null}
{"serial_num": 5, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Please look up the balance of Kookmin Bank."}], "input_tools": [{"type": "function", "function": {"name": "get_movie_schedule", "description": "Inquire a certain date and screening schedule for a specific movie theater.", "parameters": {"type": "object", "properties": {"movie_date": {"type": "string", "description": "Date to look up (YYYY-MM-DD)"}, "movie_location": {"type": "string", "description": "Cinema to look upon"}}, "required": ["movie_date", "movie_location"]}}}, {"type": "function", "function": {"name": "getCurrentKoreaTime", "description": "Currently, the time of Korea is returned to year-month-day: minor: second format.", "parameters": {}}}, {"type": "function", "function": {"name": "checkBankBalance", "description": "Look up the balance of a specific bank account.", "parameters": {"type": "object", "properties": {"accountBank": {"type": "string", "description": "The bank name of the account to view the balance"}, "accountNumber": {"type": "string", "description": "Account number to view the balance"}}, "required": ["accountBank", "accountNumber"]}}}, {"type": "function", "function": {"name": "convert_currency", "description": "Returns a value that exchanges a currency into another currency.", "parameters": {"type": "object", "properties": {"amount": {"type": "number", "description": "Money"}, "from": {"type": "string", "description": "Type of currency currency exchange"}, "to": {"type": "string", "description": "Type of currency exchange results"}}, "required": ["amount", "from", "to"]}}}, {"type": "function", "function": {"name": "calculate_tax", "description": "Calculate the tax on the given amount.", "parameters": {"type": "object", "properties": {"amount": {"type": "number", "description": "Prior to calculating"}, "tax_rate": {"type": "number", "description": "Tax rate to be applied (percentage)"}}, "required": ["amount", "tax_rate"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the account number to search the balance."}, "acceptable_arguments": null}
{"serial_num": 6, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "How long is the account balance left? The account I want to check is 789-012-345."}], "input_tools": [{"type": "function", "function": {"name": "calculateIdealWeight", "description": "Ideal weight calculation using Lorentz formula", "parameters": {"type": "object", "properties": {"height": {"type": "number", "description": "Centimeter key"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["height", "gender"]}}}, {"type": "function", "function": {"name": "getWeatherForecastForNext7Days", "description": "For the designated area, we offer a 7 -day weather forecast, including today.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "The name of the area where the weather forecast"}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "checkBankBalance", "description": "Look up the balance of a specific bank account.", "parameters": {"type": "object", "properties": {"accountBank": {"type": "string", "description": "The bank name of the account to view the balance"}, "accountNumber": {"type": "string", "description": "Account number to view the balance"}}, "required": ["accountBank", "accountNumber"]}}}, {"type": "function", "function": {"name": "calculate_tip", "description": "Tip calculation", "parameters": {"type": "object", "properties": {"bill_amount": {"type": "number", "description": "Billed amount"}, "tip_percentage": {"type": "number", "description": "Tip 100 division (for example, 15 input for 15%)"}}, "required": ["bill_amount", "tip_percentage"]}}}, {"type": "function", "function": {"name": "translate_text_to_english", "description": "Translate the given text into English", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Text translation in English"}}, "required": ["text"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the name of the bank in the account to look up the balance."}, "acceptable_arguments": null}
{"serial_num": 7, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "How long is the account balance left? I want to check."}, {"role": "assistant", "content": "Please tell me the account number and the bank name to search the balance."}, {"role": "user", "content": "The account I want to check is Kakao Bank."}], "input_tools": [{"type": "function", "function": {"name": "calculateIdealWeight", "description": "Ideal weight calculation using Lorentz formula", "parameters": {"type": "object", "properties": {"height": {"type": "number", "description": "Centimeter key"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["height", "gender"]}}}, {"type": "function", "function": {"name": "getWeatherForecastForNext7Days", "description": "For the designated area, we offer a 7 -day weather forecast, including today.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "The name of the area where the weather forecast"}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "checkBankBalance", "description": "Look up the balance of a specific bank account.", "parameters": {"type": "object", "properties": {"accountBank": {"type": "string", "description": "The bank name of the account to view the balance"}, "accountNumber": {"type": "string", "description": "Account number to view the balance"}}, "required": ["accountBank", "accountNumber"]}}}, {"type": "function", "function": {"name": "calculate_tip", "description": "Tip calculation", "parameters": {"type": "object", "properties": {"bill_amount": {"type": "number", "description": "Billed amount"}, "tip_percentage": {"type": "number", "description": "Tip 100 division (for example, 15 input for 15%)"}}, "required": ["bill_amount", "tip_percentage"]}}}, {"type": "function", "function": {"name": "translate_text_to_english", "description": "Translate the given text into English", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Text translation in English"}}, "required": ["text"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the account number to search the balance."}, "acceptable_arguments": null}
{"serial_num": 8, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "How long is the account balance left? I want to check."}, {"role": "assistant", "content": "Please tell me the account number and the bank name to search the balance."}, {"role": "user", "content": "The account I want to check is 789-012-345."}], "input_tools": [{"type": "function", "function": {"name": "calculateIdealWeight", "description": "Ideal weight calculation using Lorentz formula", "parameters": {"type": "object", "properties": {"height": {"type": "number", "description": "Centimeter key"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["height", "gender"]}}}, {"type": "function", "function": {"name": "getWeatherForecastForNext7Days", "description": "For the designated area, we offer a 7 -day weather forecast, including today.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "The name of the area where the weather forecast"}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "checkBankBalance", "description": "Look up the balance of a specific bank account.", "parameters": {"type": "object", "properties": {"accountBank": {"type": "string", "description": "The bank name of the account to view the balance"}, "accountNumber": {"type": "string", "description": "Account number to view the balance"}}, "required": ["accountBank", "accountNumber"]}}}, {"type": "function", "function": {"name": "calculate_tip", "description": "Tip calculation", "parameters": {"type": "object", "properties": {"bill_amount": {"type": "number", "description": "Billed amount"}, "tip_percentage": {"type": "number", "description": "Tip 100 division (for example, 15 input for 15%)"}}, "required": ["bill_amount", "tip_percentage"]}}}, {"type": "function", "function": {"name": "translate_text_to_english", "description": "Translate the given text into English", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Text translation in English"}}, "required": ["text"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the name of the bank in the account to look up the balance."}, "acceptable_arguments": null}
{"serial_num": 9, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Book a meeting with Choi Soo -bin, Kim Joo -ah and Ahn Yu -mi."}], "input_tools": [{"type": "function", "function": {"name": "compareCleaningServices", "description": "Compare the service of the cleaning company and provide information.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Location or area where cleaning services are needed"}, "requested_date": {"type": "string", "format": "date", "description": "Service date (extract user as it is. Example: next Monday, January 1, 2022, etc.)"}, "size": {"type": "string", "description": "Pyeongsu or area of ​​the house (flat, square meter)"}}, "required": ["location", "requested_date", "size"]}}}, {"type": "function", "function": {"name": "transferMoney", "description": "Send money to a specific account.", "parameters": {"type": "object", "properties": {"receiver_bank": {"type": "string", "description": "Bank"}, "receiver_account": {"type": "string", "description": "Account number to send"}, "amount": {"type": "number", "description": "Missing money (unit: krw))"}}, "required": ["receiver_bank", "receiver_account", "amount"]}}}, {"type": "function", "function": {"name": "schedule_meeting", "description": "Book a meeting.", "parameters": {"type": "object", "properties": {"participants": {"type": "string", "description": "Participant list (if there are multiple participants, it is divided into a comma (,).)"}, "date_time": {"type": "string", "description": "Date and time of meeting (yyyy-mm-dd hh: mm format)"}}, "required": ["participants", "date_time"]}}}, {"type": "function", "function": {"name": "search_flight", "description": "Search for a flight from a specific airport and arriving at a specific airport.", "parameters": {"type": "object", "properties": {"departure_airport": {"type": "string", "description": "Departure airport name (extracted as user expression. Example: Los Angeles International Airport, Gimhae Airport, etc.)"}, "arrival_airport": {"type": "string", "description": "Arrival airport name (extracting as it is, Example: Los Angeles International Airport, Gimhae Airport, etc.)"}, "departure_date": {"type": "string", "description": "Departure Date (YYYY-MM-DD)"}}, "required": ["departure_airport", "arrival_airport", "departure_date"]}}}, {"type": "function", "function": {"name": "getCurrentTimeForLocation", "description": "Provide current time information in certain areas", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Local name to bring time information"}}, "required": ["location"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the date and time of the meeting."}, "acceptable_arguments": null}
{"serial_num": 10, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "2024.7.23 Book a meeting at 2 pm."}], "input_tools": [{"type": "function", "function": {"name": "compareCleaningServices", "description": "Compare the service of the cleaning company and provide information.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Location or area where cleaning services are needed"}, "requested_date": {"type": "string", "format": "date", "description": "Service date (extract user as it is. Example: next Monday, January 1, 2022, etc.)"}, "size": {"type": "string", "description": "Pyeongsu or area of ​​the house (flat, square meter)"}}, "required": ["location", "requested_date", "size"]}}}, {"type": "function", "function": {"name": "transferMoney", "description": "Send money to a specific account.", "parameters": {"type": "object", "properties": {"receiver_bank": {"type": "string", "description": "Bank"}, "receiver_account": {"type": "string", "description": "Account number to send"}, "amount": {"type": "number", "description": "Missing money (unit: krw))"}}, "required": ["receiver_bank", "receiver_account", "amount"]}}}, {"type": "function", "function": {"name": "schedule_meeting", "description": "Book a meeting.", "parameters": {"type": "object", "properties": {"participants": {"type": "string", "description": "Participant list (if there are multiple participants, it is divided into a comma (,).)"}, "date_time": {"type": "string", "description": "Date and time of meeting (yyyy-mm-dd hh: mm format)"}}, "required": ["participants", "date_time"]}}}, {"type": "function", "function": {"name": "search_flight", "description": "Search for a flight from a specific airport and arriving at a specific airport.", "parameters": {"type": "object", "properties": {"departure_airport": {"type": "string", "description": "Departure airport name (extracted as user expression. Example: Los Angeles International Airport, Gimhae Airport, etc.)"}, "arrival_airport": {"type": "string", "description": "Arrival airport name (extracting as it is, Example: Los Angeles International Airport, Gimhae Airport, etc.)"}, "departure_date": {"type": "string", "description": "Departure Date (YYYY-MM-DD)"}}, "required": ["departure_airport", "arrival_airport", "departure_date"]}}}, {"type": "function", "function": {"name": "getCurrentTimeForLocation", "description": "Provide current time information in certain areas", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Local name to bring time information"}}, "required": ["location"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the list of participants."}, "acceptable_arguments": null}
{"serial_num": 11, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "I have to make a reservation in a hurry."}, {"role": "assistant", "content": "Please tell me the list of participants and the date and time of the meeting."}, {"role": "user", "content": "Participants are Cha Hyun -woo and Shin Seung -yeop."}], "input_tools": [{"type": "function", "function": {"name": "calculateIdealWeight", "description": "Ideal weight calculation using Lorentz formula", "parameters": {"type": "object", "properties": {"height": {"type": "number", "description": "Centimeter key"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["height", "gender"]}}}, {"type": "function", "function": {"name": "registerFriendBirthday", "description": "A function that registers a friend's name and birthday information", "parameters": {"type": "object", "properties": {"friendName": {"type": "string", "description": "A friend's name to register"}, "birthday": {"type": "string", "description": "The birthday of a friend to register (YYYY-MM-DD format)"}}, "required": ["friendName", "birthday"]}}}, {"type": "function", "function": {"name": "schedule_meeting", "description": "Book a meeting.", "parameters": {"type": "object", "properties": {"participants": {"type": "string", "description": "Participant list (if there are multiple participants, it is divided into a comma (,).)"}, "date_time": {"type": "string", "description": "Date and time of meeting (yyyy-mm-dd hh: mm format)"}}, "required": ["participants", "date_time"]}}}, {"type": "function", "function": {"name": "generate_syntax_tree_from_text", "description": "Create a syntax tree for a given text", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Text to create a syntax tree"}}, "required": ["text"]}}}, {"type": "function", "function": {"name": "count_words", "description": "Calculation of words in a given text (sentence or paragraph)", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Cell text"}}, "required": ["text"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the date and time of the meeting."}, "acceptable_arguments": null}
{"serial_num": 12, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Is the meeting booking?"}, {"role": "assistant", "content": "Please tell me the list of participants and the date and time of the meeting."}, {"role": "user", "content": "2022-11-11, PM 3:00."}], "input_tools": [{"type": "function", "function": {"name": "informLottoNumberByRound", "description": "It is a function that informs the lottery winning number of a specific episode.", "parameters": {"type": "object", "properties": {"round": {"type": "integer", "description": "The round to check the lottery winning number"}}, "required": ["round"]}}}, {"type": "function", "function": {"name": "find_group_or_club", "description": "Provides meetings or club information on certain topics based on the area around the specific location.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Where to find a meeting or club"}, "topic": {"type": "string", "description": "Interest"}}, "required": ["location", "topic"]}}}, {"type": "function", "function": {"name": "schedule_meeting", "description": "Book a meeting.", "parameters": {"type": "object", "properties": {"participants": {"type": "string", "description": "Participant list (if there are multiple participants, it is divided into a comma (,).)"}, "date_time": {"type": "string", "description": "Date and time of meeting (yyyy-mm-dd hh: mm format)"}}, "required": ["participants", "date_time"]}}}, {"type": "function", "function": {"name": "DeleteEvent", "description": "Delete schedule from calendar", "parameters": {"type": "object", "properties": {"event_id": {"type": "string", "description": "ID of the schedule to be deleted"}}, "required": ["event_id"]}}}, {"type": "function", "function": {"name": "calculate_bmi", "description": "Calculation of human body mass index (BMI)", "parameters": {"type": "object", "properties": {"height": {"type": "number", "description": "Centimeter key"}, "weight": {"type": "number", "description": "Kilogram unit weight"}}, "required": ["height", "weight"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the list of participants."}, "acceptable_arguments": null}
{"serial_num": 13, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "I will ask for the screening schedule inquiry on April 5, 24."}], "input_tools": [{"type": "function", "function": {"name": "calculate_tax", "description": "Calculate the tax on the given amount.", "parameters": {"type": "object", "properties": {"amount": {"type": "number", "description": "Prior to calculating"}, "tax_rate": {"type": "number", "description": "Tax rate to be applied (percentage)"}}, "required": ["amount", "tax_rate"]}}}, {"type": "function", "function": {"name": "book_concert_tickets", "description": "Tickets for specific performances are made using external ticketing systems.", "parameters": {"type": "object", "properties": {"concert_name": {"type": "string", "description": "The name of the performance you want to book"}, "number_of_tickets": {"type": "integer", "description": "Quantity"}, "seat_type": {"type": "string", "description": "Selected seat type (e.g. VIP, general)"}}, "required": ["concert_name", "number_of_tickets", "seat_type"]}}}, {"type": "function", "function": {"name": "get_movie_schedule", "description": "Inquire a certain date and screening schedule for a specific movie theater.", "parameters": {"type": "object", "properties": {"movie_date": {"type": "string", "description": "Date to look up (YYYY-MM-DD)"}, "movie_location": {"type": "string", "description": "Cinema to look upon"}}, "required": ["movie_date", "movie_location"]}}}, {"type": "function", "function": {"name": "convert_krw_to_usd", "description": "Converted Korean money (KRW) to USD (USD)", "parameters": {"type": "object", "properties": {"amount_krw": {"type": "number", "description": "Korean money (KRW) amount to convert"}, "exchange_rate_krw_to_usd": {"type": "number", "description": "Exchange rate from KRW to USD"}}, "required": ["amount_krw", "exchange_rate_krw_to_usd"]}}}, {"type": "function", "function": {"name": "calculate_bmi", "description": "Calculation of human body mass index (BMI)", "parameters": {"type": "object", "properties": {"height": {"type": "number", "description": "Centimeter key"}, "weight": {"type": "number", "description": "Kilogram unit weight"}}, "required": ["height", "weight"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the cinema to view the screening schedule."}, "acceptable_arguments": null}
{"serial_num": 14, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Please check the Megabox Mokdong Movie Screening Time."}], "input_tools": [{"type": "function", "function": {"name": "convert_pyeong_to_squaremeter", "description": "Convert it to \"평\"을 입력받아서, \"제곱미터\".", "parameters": {"type": "object", "properties": {"pyeong": {"type": "number", "description": "Pyeongsu to be transformed"}}, "required": ["pyeong"]}}}, {"type": "function", "function": {"name": "recommendLuckMessage", "description": "It is a function that recommends lucky words randomly.", "parameters": {"type": "object", "properties": {}, "required": []}}}, {"type": "function", "function": {"name": "get_movie_schedule", "description": "Inquire a certain date and screening schedule for a specific movie theater.", "parameters": {"type": "object", "properties": {"movie_date": {"type": "string", "description": "Date to look up (YYYY-MM-DD)"}, "movie_location": {"type": "string", "description": "Cinema to look upon"}}, "required": ["movie_date", "movie_location"]}}}, {"type": "function", "function": {"name": "calculateBMR", "description": "Basal metabolic rate calculation", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}, "height": {"type": "number", "description": "Centimeter key"}, "age": {"type": "integer", "description": "age"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["weight", "height", "age", "gender"]}}}, {"type": "function", "function": {"name": "find_group_or_club", "description": "Provides meetings or club information on certain topics based on the area around the specific location.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Where to find a meeting or club"}, "topic": {"type": "string", "description": "Interest"}}, "required": ["location", "topic"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the date to view the screening schedule."}, "acceptable_arguments": null}
{"serial_num": 15, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Find the movie screening schedule."}, {"role": "assistant", "content": "Please tell me the date and movie theater to view the screening schedule."}, {"role": "user", "content": "23.1.13"}], "input_tools": [{"type": "function", "function": {"name": "get_currency_trend_3months", "description": "Provides exchange rate fluctuations for the last three months for the designated currency", "parameters": {"type": "object", "properties": {"currency_code": {"type": "string", "description": "Code of currency to bring the exchange rate fluctuations (e.g. USD, EUR, JPY)"}}, "required": ["currency_code"]}}}, {"type": "function", "function": {"name": "getHistoricalMinMaxTemperature", "description": "In the past, we look up for the minimum temperature and the highest temperature in certain regions.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "The name of the area to be searched"}, "date": {"type": "string", "description": "Date to look up ('YYYY-MM-DD' format)"}}, "required": ["location", "date"]}}}, {"type": "function", "function": {"name": "get_movie_schedule", "description": "Inquire a certain date and screening schedule for a specific movie theater.", "parameters": {"type": "object", "properties": {"movie_date": {"type": "string", "description": "Date to look up (YYYY-MM-DD)"}, "movie_location": {"type": "string", "description": "Cinema to look upon"}}, "required": ["movie_date", "movie_location"]}}}, {"type": "function", "function": {"name": "calculateBMR", "description": "Basal metabolic rate calculation", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}, "height": {"type": "number", "description": "Centimeter key"}, "age": {"type": "integer", "description": "age"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["weight", "height", "age", "gender"]}}}, {"type": "function", "function": {"name": "schedule_meeting", "description": "Book a meeting.", "parameters": {"type": "object", "properties": {"participants": {"type": "string", "description": "Participant list (if there are multiple participants, it is divided into a comma (,).)"}, "date_time": {"type": "string", "description": "Date and time of meeting (yyyy-mm-dd hh: mm format)"}}, "required": ["participants", "date_time"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the cinema to view the screening schedule."}, "acceptable_arguments": null}
{"serial_num": 16, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "I'll ask you to check the screening schedule."}, {"role": "assistant", "content": "Please tell me the date and movie theater to view the screening schedule."}, {"role": "user", "content": "Lotte Cinema World Tower Movie Movie Timetable."}], "input_tools": [{"type": "function", "function": {"name": "calculate_tax", "description": "Calculate the tax on the given amount.", "parameters": {"type": "object", "properties": {"amount": {"type": "number", "description": "Prior to calculating"}, "tax_rate": {"type": "number", "description": "Tax rate to be applied (percentage)"}}, "required": ["amount", "tax_rate"]}}}, {"type": "function", "function": {"name": "book_concert_tickets", "description": "Tickets for specific performances are made using external ticketing systems.", "parameters": {"type": "object", "properties": {"concert_name": {"type": "string", "description": "The name of the performance you want to book"}, "number_of_tickets": {"type": "integer", "description": "Quantity"}, "seat_type": {"type": "string", "description": "Selected seat type (e.g. VIP, general)"}}, "required": ["concert_name", "number_of_tickets", "seat_type"]}}}, {"type": "function", "function": {"name": "get_movie_schedule", "description": "Inquire a certain date and screening schedule for a specific movie theater.", "parameters": {"type": "object", "properties": {"movie_date": {"type": "string", "description": "Date to look up (YYYY-MM-DD)"}, "movie_location": {"type": "string", "description": "Cinema to look upon"}}, "required": ["movie_date", "movie_location"]}}}, {"type": "function", "function": {"name": "convert_krw_to_usd", "description": "Converted Korean money (KRW) to USD (USD)", "parameters": {"type": "object", "properties": {"amount_krw": {"type": "number", "description": "Korean money (KRW) amount to convert"}, "exchange_rate_krw_to_usd": {"type": "number", "description": "Exchange rate from KRW to USD"}}, "required": ["amount_krw", "exchange_rate_krw_to_usd"]}}}, {"type": "function", "function": {"name": "calculate_bmi", "description": "Calculation of human body mass index (BMI)", "parameters": {"type": "object", "properties": {"height": {"type": "number", "description": "Centimeter key"}, "weight": {"type": "number", "description": "Kilogram unit weight"}}, "required": ["height", "weight"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the date to view the screening schedule."}, "acceptable_arguments": null}
{"serial_num": 17, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "I think there are a lot of cars on weekends."}], "input_tools": [{"type": "function", "function": {"name": "schedule_laundry_pickup", "description": "Apply for a service to collect laundry.", "parameters": {"type": "object", "properties": {"pickup_location": {"type": "string", "description": "Extract the location of the user as it is to collect the laundry. (Example: House, 101 -dong 102, etc."}, "pickup_date": {"type": "string", "description": "Extract the laundry collection date as it is. (Example: next Monday, January 1, 2022, etc.)"}, "pickup_time": {"type": "string", "description": "Extract the time to collect the laundry as it is. (Example: 2 pm, 7 pm, etc.)"}}, "required": ["pickup_location", "pickup_date", "pickup_time"]}}}, {"type": "function", "function": {"name": "sendEmail", "description": "Send email to a specific email address.", "parameters": {"type": "object", "properties": {"receiverEmail": {"type": "string", "description": "EMAIL address of the recipient"}, "subject": {"type": "string", "description": "Email title"}, "body": {"type": "string", "description": "Email content"}}, "required": ["receiverEmail", "subject", "body"]}}}, {"type": "function", "function": {"name": "check_traffic_status", "description": "Inquire the current traffic situation on a particular path.", "parameters": {"type": "object", "properties": {"start_location": {"type": "string", "description": "Departure"}, "end_location": {"type": "string", "description": "Arrival point"}}, "required": ["start_location", "end_location"]}}}, {"type": "function", "function": {"name": "count_lowercase_letters", "description": "The number of lowercase in the string", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Cell string for lowercase"}}, "required": ["text"]}}}, {"type": "function", "function": {"name": "convertTimeBetweenTimezones", "description": "Convert time to another time in one time.", "parameters": {"type": "object", "properties": {"originalTime": {"type": "string", "description": "Reference time to convert (format HH: mm)"}, "fromTimezone": {"type": "string", "description": "Standard time zone (region name)"}, "toTimezone": {"type": "string", "description": "Time to be converted (region name)"}}, "required": ["originalTime", "fromTimezone", "toTimezone"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the arrival point."}, "acceptable_arguments": null}
{"serial_num": 18, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "I think there are a lot of cars on weekends. How about the road to Samcheong -dong, Jongno -gu?"}], "input_tools": [{"type": "function", "function": {"name": "schedule_laundry_pickup", "description": "Apply for a service to collect laundry.", "parameters": {"type": "object", "properties": {"pickup_location": {"type": "string", "description": "Extract the location of the user as it is to collect the laundry. (Example: House, 101 -dong 102, etc."}, "pickup_date": {"type": "string", "description": "Extract the laundry collection date as it is. (Example: next Monday, January 1, 2022, etc.)"}, "pickup_time": {"type": "string", "description": "Extract the time to collect the laundry as it is. (Example: 2 pm, 7 pm, etc.)"}}, "required": ["pickup_location", "pickup_date", "pickup_time"]}}}, {"type": "function", "function": {"name": "sendEmail", "description": "Send email to a specific email address.", "parameters": {"type": "object", "properties": {"receiverEmail": {"type": "string", "description": "EMAIL address of the recipient"}, "subject": {"type": "string", "description": "Email title"}, "body": {"type": "string", "description": "Email content"}}, "required": ["receiverEmail", "subject", "body"]}}}, {"type": "function", "function": {"name": "check_traffic_status", "description": "Inquire the current traffic situation on a particular path.", "parameters": {"type": "object", "properties": {"start_location": {"type": "string", "description": "Departure"}, "end_location": {"type": "string", "description": "Arrival point"}}, "required": ["start_location", "end_location"]}}}, {"type": "function", "function": {"name": "count_lowercase_letters", "description": "The number of lowercase in the string", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Cell string for lowercase"}}, "required": ["text"]}}}, {"type": "function", "function": {"name": "convertTimeBetweenTimezones", "description": "Convert time to another time in one time.", "parameters": {"type": "object", "properties": {"originalTime": {"type": "string", "description": "Reference time to convert (format HH: mm)"}, "fromTimezone": {"type": "string", "description": "Standard time zone (region name)"}, "toTimezone": {"type": "string", "description": "Time to be converted (region name)"}}, "required": ["originalTime", "fromTimezone", "toTimezone"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the departure point."}, "acceptable_arguments": null}
{"serial_num": 19, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Will it be blocked a lot? I'm curious about the traffic situation"}, {"role": "assistant", "content": "Please tell me the departure point and the arrival point."}, {"role": "user", "content": "Depart from Yangjae Station"}], "input_tools": [{"type": "function", "function": {"name": "add_item_to_shopping_cart", "description": "Add new products to the shopping cart", "parameters": {"type": "object", "properties": {"product_id": {"type": "string", "description": "The unique identifier of the product you want to add"}, "quantity": {"type": "integer", "description": "Quantity"}}, "required": ["product_id", "quantity"]}}}, {"type": "function", "function": {"name": "getCurrentKoreaTime", "description": "Currently, the time of Korea is returned to year-month-day: minor: second format.", "parameters": {}}}, {"type": "function", "function": {"name": "check_traffic_status", "description": "Inquire the current traffic situation on a particular path.", "parameters": {"type": "object", "properties": {"start_location": {"type": "string", "description": "Departure"}, "end_location": {"type": "string", "description": "Arrival point"}}, "required": ["start_location", "end_location"]}}}, {"type": "function", "function": {"name": "calculateBMR", "description": "Basal metabolic rate calculation", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}, "height": {"type": "number", "description": "Centimeter key"}, "age": {"type": "integer", "description": "age"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["weight", "height", "age", "gender"]}}}, {"type": "function", "function": {"name": "generate_playlist_based_on_favorite_artist", "description": "Create customized playlist based on preferred artists", "parameters": {"type": "object", "properties": {"artist_name": {"type": "string", "description": "The name of the artist that users prefer"}}, "required": ["artist_name"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the arrival point."}, "acceptable_arguments": null}
{"serial_num": 20, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Can you tell me about traffic?"}, {"role": "assistant", "content": "Please tell me the departure point and the arrival point."}, {"role": "user", "content": "I am curious about the traffic situation on the way to Dangsan -dong, Yeongdeungpo -gu, Seoul."}], "input_tools": [{"type": "function", "function": {"name": "convert_to_uppercase", "description": "Converted strings to capital letters", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "String"}}, "required": ["text"]}}}, {"type": "function", "function": {"name": "OrderPizza", "description": "Order pizza.", "parameters": {"type": "object", "properties": {"PizzaType": {"type": "string", "description": "Pizza"}, "size": {"type": "string", "description": "Pizza size (extracted as it is, example: Small, L, Medium, etc.)"}, "quantity": {"type": "integer", "description": "Order quantity"}}, "required": ["PizzaType", "size", "quantity"]}}}, {"type": "function", "function": {"name": "check_traffic_status", "description": "Inquire the current traffic situation on a particular path.", "parameters": {"type": "object", "properties": {"start_location": {"type": "string", "description": "Departure"}, "end_location": {"type": "string", "description": "Arrival point"}}, "required": ["start_location", "end_location"]}}}, {"type": "function", "function": {"name": "create_user", "description": "Create a new user account.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "User's name"}, "email": {"type": "string", "description": "User's email address"}, "password": {"type": "string", "description": "User's password"}}, "required": ["name", "email", "password"]}}}, {"type": "function", "function": {"name": "informLottoWinnerPrizeByRound", "description": "It is a function that informs the amount of lottery winnings of a specific episode.", "parameters": {"type": "object", "properties": {"round": {"type": "integer", "description": "A round that wants to check the amount of lottery winnings (e.g. 1001)"}}, "required": ["round"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the departure point."}, "acceptable_arguments": null}
{"serial_num": 21, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Can you book a car to Gangneung when you are on a business trip?"}], "input_tools": [{"type": "function", "function": {"name": "add_item_to_shopping_cart", "description": "Add new products to the shopping cart", "parameters": {"type": "object", "properties": {"product_id": {"type": "string", "description": "The unique identifier of the product you want to add"}, "quantity": {"type": "integer", "description": "Quantity"}}, "required": ["product_id", "quantity"]}}}, {"type": "function", "function": {"name": "searchFriendBirthday", "description": "A function that enters a friend's name and searches for birthday information", "parameters": {"type": "object", "properties": {"friendName": {"type": "string", "description": "A friend's name to search"}}, "required": ["friendName"]}}}, {"type": "function", "function": {"name": "bookBusinessVehicle", "description": "Book a car for business trips.", "parameters": {"type": "object", "properties": {"destination": {"type": "string", "description": "destination"}, "departure_date": {"type": "string", "description": "Express your departure date as it is. Example) '다음 주 월요일', '2022년 1월 1일'"}}, "required": ["destination", "departure_date"]}}}, {"type": "function", "function": {"name": "getHistoricalMinMaxTemperature", "description": "In the past, we look up for the minimum temperature and the highest temperature in certain regions.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "The name of the area to be searched"}, "date": {"type": "string", "description": "Date to look up ('YYYY-MM-DD' format)"}}, "required": ["location", "date"]}}}, {"type": "function", "function": {"name": "generate_syntax_tree_from_text", "description": "Create a syntax tree for a given text", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Text to create a syntax tree"}}, "required": ["text"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the departure date."}, "acceptable_arguments": null}
{"serial_num": 22, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Can you make a car for a business trip tomorrow?"}], "input_tools": [{"type": "function", "function": {"name": "add_item_to_shopping_cart", "description": "Add new products to the shopping cart", "parameters": {"type": "object", "properties": {"product_id": {"type": "string", "description": "The unique identifier of the product you want to add"}, "quantity": {"type": "integer", "description": "Quantity"}}, "required": ["product_id", "quantity"]}}}, {"type": "function", "function": {"name": "searchFriendBirthday", "description": "A function that enters a friend's name and searches for birthday information", "parameters": {"type": "object", "properties": {"friendName": {"type": "string", "description": "A friend's name to search"}}, "required": ["friendName"]}}}, {"type": "function", "function": {"name": "bookBusinessVehicle", "description": "Book a car for business trips.", "parameters": {"type": "object", "properties": {"destination": {"type": "string", "description": "destination"}, "departure_date": {"type": "string", "description": "Express your departure date as it is. Example) '다음 주 월요일', '2022년 1월 1일'"}}, "required": ["destination", "departure_date"]}}}, {"type": "function", "function": {"name": "getHistoricalMinMaxTemperature", "description": "In the past, we look up for the minimum temperature and the highest temperature in certain regions.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "The name of the area to be searched"}, "date": {"type": "string", "description": "Date to look up ('YYYY-MM-DD' format)"}}, "required": ["location", "date"]}}}, {"type": "function", "function": {"name": "generate_syntax_tree_from_text", "description": "Create a syntax tree for a given text", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Text to create a syntax tree"}}, "required": ["text"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me your destination."}, "acceptable_arguments": null}
{"serial_num": 23, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "I'm going to go on a business trip, can you make a reservation?"}, {"role": "assistant", "content": "Please tell us your destination and departure date."}, {"role": "user", "content": "Go to Seoul"}], "input_tools": [{"type": "function", "function": {"name": "DeleteEvent", "description": "Delete schedule from calendar", "parameters": {"type": "object", "properties": {"event_id": {"type": "string", "description": "ID of the schedule to be deleted"}}, "required": ["event_id"]}}}, {"type": "function", "function": {"name": "upload_artwork_to_online_site", "description": "Upload your work to the online art platform.", "parameters": {"type": "object", "properties": {"art_image_url": {"type": "string", "description": "The image of the work to be uploaded URL"}, "title": {"type": "string", "description": "Title of the work"}, "description": {"type": "string", "description": "A brief explanation of the work"}}, "required": ["art_image_url", "title", "description"]}}}, {"type": "function", "function": {"name": "bookBusinessVehicle", "description": "Book a car for business trips.", "parameters": {"type": "object", "properties": {"destination": {"type": "string", "description": "destination"}, "departure_date": {"type": "string", "description": "Express your departure date as it is. Example) '다음 주 월요일', '2022년 1월 1일'"}}, "required": ["destination", "departure_date"]}}}, {"type": "function", "function": {"name": "calculateLifeExpectancy", "description": "BMI, physical activity level, and smoking status estimates average life expectancy", "parameters": {"type": "object", "properties": {"BMI": {"type": "number", "description": "Body mass index (BMI)"}, "activityLevel": {"type": "string", "description": "Physical activity level (low, normal, high choice)"}, "smokingStatus": {"type": "boolean", "description": "Smoking state (smoking = true, non -smoking = false)"}}, "required": ["BMI", "activityLevel", "smokingStatus"]}}}, {"type": "function", "function": {"name": "informLottoWinnerPrizeByDate", "description": "It is a function that informs the amount of lottery winnings on a specific date.", "parameters": {"type": "object", "properties": {"date": {"type": "string", "description": "Date to check the amount of lottery winnings (e.g., March 4)"}}, "required": ["date"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the departure date."}, "acceptable_arguments": null}
{"serial_num": 24, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "I'm going to go on a business trip, can you make a reservation?"}, {"role": "assistant", "content": "Please tell us your destination and departure date."}, {"role": "user", "content": "Please make a reservation next Monday"}], "input_tools": [{"type": "function", "function": {"name": "DeleteEvent", "description": "Delete schedule from calendar", "parameters": {"type": "object", "properties": {"event_id": {"type": "string", "description": "ID of the schedule to be deleted"}}, "required": ["event_id"]}}}, {"type": "function", "function": {"name": "upload_artwork_to_online_site", "description": "Upload your work to the online art platform.", "parameters": {"type": "object", "properties": {"art_image_url": {"type": "string", "description": "The image of the work to be uploaded URL"}, "title": {"type": "string", "description": "Title of the work"}, "description": {"type": "string", "description": "A brief explanation of the work"}}, "required": ["art_image_url", "title", "description"]}}}, {"type": "function", "function": {"name": "bookBusinessVehicle", "description": "Book a car for business trips.", "parameters": {"type": "object", "properties": {"destination": {"type": "string", "description": "destination"}, "departure_date": {"type": "string", "description": "Express your departure date as it is. Example) '다음 주 월요일', '2022년 1월 1일'"}}, "required": ["destination", "departure_date"]}}}, {"type": "function", "function": {"name": "calculateLifeExpectancy", "description": "BMI, physical activity level, and smoking status estimates average life expectancy", "parameters": {"type": "object", "properties": {"BMI": {"type": "number", "description": "Body mass index (BMI)"}, "activityLevel": {"type": "string", "description": "Physical activity level (low, normal, high choice)"}, "smokingStatus": {"type": "boolean", "description": "Smoking state (smoking = true, non -smoking = false)"}}, "required": ["BMI", "activityLevel", "smokingStatus"]}}}, {"type": "function", "function": {"name": "informLottoWinnerPrizeByDate", "description": "It is a function that informs the amount of lottery winnings on a specific date.", "parameters": {"type": "object", "properties": {"date": {"type": "string", "description": "Date to check the amount of lottery winnings (e.g., March 4)"}}, "required": ["date"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me your destination."}, "acceptable_arguments": null}
{"serial_num": 25, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Compare the price of A4 paper at various stores."}], "input_tools": [{"type": "function", "function": {"name": "search_contact", "description": "Search for a list of contacts in the name of a person and bring his phone number and email address.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "The name of a person who wants to check the contact"}}, "required": ["name"]}}}, {"type": "function", "function": {"name": "CheckTaxRefund", "description": "Search for the user's tax refund.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "The name of the tax paymenter"}, "birth": {"type": "string", "description": "Date of birth of tax payers (YYYY-MM-DD)"}, "phone_number": {"type": "string", "description": "Contact of tax payers"}}, "required": ["name", "birth", "phone_number"]}}}, {"type": "function", "function": {"name": "compare_office_supplies_prices", "description": "Compare office supplies prices of various stores and provide the lowest price information.", "parameters": {"type": "object", "properties": {"product_name": {"type": "string", "description": "Product name that wants to compare prices"}, "quantity": {"type": "integer", "description": "Quantity"}}, "required": ["product_name", "quantity"]}}}, {"type": "function", "function": {"name": "informLottoWinnerPrizeByRound", "description": "It is a function that informs the amount of lottery winnings of a specific episode.", "parameters": {"type": "object", "properties": {"round": {"type": "integer", "description": "A round that wants to check the amount of lottery winnings (e.g. 1001)"}}, "required": ["round"]}}}, {"type": "function", "function": {"name": "reserve_restaurant", "description": "Reservation of the restaurant with the information provided by the user. Example) Please make a reservation at 6 pm tonight", "parameters": {"type": "object", "properties": {"store": {"type": "string", "description": "Restaurant name"}, "reservationDate": {"type": "string", "description": "Reservation date (YYYY-MM-DD)"}, "reservationTime": {"type": "string", "description": "Reservation time (hh: mm)"}, "numberOfPeople": {"type": "integer", "description": "Number of reservations"}}, "required": ["store", "reservationDate", "reservationTime", "numberOfPeople"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the quantity of the required product."}, "acceptable_arguments": null}
{"serial_num": 26, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "You will need 50 orders by tomorrow. Compare the prices of various places to tell me the lowest price"}], "input_tools": [{"type": "function", "function": {"name": "find_nearest_emergency_room_by_location", "description": "Based on a specific location, it provides the location and information of the nearby emergency room.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Current location (example: station, address, building name, etc.)"}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "getCryptocurrencyPrice", "description": "Inquire the current price of a specific cryptocurrency.", "parameters": {"type": "object", "properties": {"cryptocurrency": {"type": "string", "description": "Cryptocurrency name to view the price"}}, "required": ["cryptocurrency"]}}}, {"type": "function", "function": {"name": "compare_office_supplies_prices", "description": "Compare office supplies prices of various stores and provide the lowest price information.", "parameters": {"type": "object", "properties": {"product_name": {"type": "string", "description": "Product name that wants to compare prices"}, "quantity": {"type": "integer", "description": "Quantity"}}, "required": ["product_name", "quantity"]}}}, {"type": "function", "function": {"name": "informTyphoon", "description": "It provides location information of the current typhoon.", "parameters": {"type": "object", "properties": {"typhoonName": {"type": "string", "description": "The name of the typhoon to look upon"}}, "required": ["typhoonName"]}}}, {"type": "function", "function": {"name": "informLottoNumberByRound", "description": "It is a function that informs the lottery winning number of a specific episode.", "parameters": {"type": "object", "properties": {"round": {"type": "integer", "description": "The round to check the lottery winning number"}}, "required": ["round"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell us the name of the product you want to compare."}, "acceptable_arguments": null}
{"serial_num": 27, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "I'm trying to buy office supplies. Can you compare the prices of various retailers?"}, {"role": "assistant", "content": "Please tell me the name of the product and the quantity of the required product to compare the price."}, {"role": "user", "content": "I'm trying to buy a stapler."}], "input_tools": [{"type": "function", "function": {"name": "get_movie_details", "description": "Genre, directors, actors, plot, and screening time provide detailed information.", "parameters": {"type": "object", "properties": {"title": {"type": "string", "description": "Film title"}, "year": {"type": "integer", "description": "Movie release year"}}, "required": ["title"]}}}, {"type": "function", "function": {"name": "recommendLuckMessage", "description": "It is a function that recommends lucky words randomly.", "parameters": {"type": "object", "properties": {}, "required": []}}}, {"type": "function", "function": {"name": "compare_office_supplies_prices", "description": "Compare office supplies prices of various stores and provide the lowest price information.", "parameters": {"type": "object", "properties": {"product_name": {"type": "string", "description": "Product name that wants to compare prices"}, "quantity": {"type": "integer", "description": "Quantity"}}, "required": ["product_name", "quantity"]}}}, {"type": "function", "function": {"name": "add_contact", "description": "Register a new contact.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "Name to register a contact"}, "phone": {"type": "string", "description": "phone number"}, "email": {"type": "string", "description": "Email address"}}, "required": ["name"]}}}, {"type": "function", "function": {"name": "add_movie_review", "description": "Add a review of a specific movie to the movie scrapbook.", "parameters": {"type": "object", "properties": {"movie_id": {"type": "string", "description": "ID of the movie to add a review"}, "review_text": {"type": "string", "description": "Movie review contents"}}, "required": ["movie_id", "review_text"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the quantity of the required product."}, "acceptable_arguments": null}
{"serial_num": 28, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "The company is trying to order office supplies, but can you find out where it is the cheapest?"}, {"role": "assistant", "content": "Please tell me the name of the product and the quantity of the required product to compare the price."}, {"role": "user", "content": "To order 200"}], "input_tools": [{"type": "function", "function": {"name": "get_rainfall_probability", "description": "It brings probability information in a particular area.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Local name"}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "CallTaxi", "description": "Call a taxi from a specific location.", "parameters": {"type": "object", "properties": {"pickup_location": {"type": "string", "description": "Departure location (address, station name, building name, etc.)"}, "destination": {"type": "string", "description": "Arrival location (address, station name, building name, etc.)"}}, "required": ["pickup_location", "destination"]}}}, {"type": "function", "function": {"name": "compare_office_supplies_prices", "description": "Compare office supplies prices of various stores and provide the lowest price information.", "parameters": {"type": "object", "properties": {"product_name": {"type": "string", "description": "Product name that wants to compare prices"}, "quantity": {"type": "integer", "description": "Quantity"}}, "required": ["product_name", "quantity"]}}}, {"type": "function", "function": {"name": "create_user", "description": "Create a new user account.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "User's name"}, "email": {"type": "string", "description": "User's email address"}, "password": {"type": "string", "description": "User's password"}}, "required": ["name", "email", "password"]}}}, {"type": "function", "function": {"name": "getDailyNewsHeadlines", "description": "Today's main news headline is provided.", "parameters": {"type": "object", "properties": {}, "required": []}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell us the name of the product you want to compare."}, "acceptable_arguments": null}
{"serial_num": 29, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "I want to find out the meeting. The area is Seocho -gu."}], "input_tools": [{"type": "function", "function": {"name": "informLottoWinnerPrizeByDate", "description": "It is a function that informs the amount of lottery winnings on a specific date.", "parameters": {"type": "object", "properties": {"date": {"type": "string", "description": "Date to check the amount of lottery winnings (e.g., March 4)"}}, "required": ["date"]}}}, {"type": "function", "function": {"name": "getMonthlyBoxOfficeRanking", "description": "It offers a monthly box office ranking for the designated year and month.", "parameters": {"type": "object", "properties": {"year": {"type": "string", "description": "The year to look up (yyyy format)"}, "month": {"type": "string", "description": "Month to look up (MM format)"}}, "required": ["year", "month"]}}}, {"type": "function", "function": {"name": "find_group_or_club", "description": "Provides meetings or club information on certain topics based on the area around the specific location.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Where to find a meeting or club"}, "topic": {"type": "string", "description": "Interest"}}, "required": ["location", "topic"]}}}, {"type": "function", "function": {"name": "convert_to_uppercase", "description": "Converted strings to capital letters", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "String"}}, "required": ["text"]}}}, {"type": "function", "function": {"name": "generate_random_special_chars", "description": "Randomly return by selecting 5 special characters randomly from a special character set.", "parameters": {"type": "object", "properties": {}, "required": []}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the topic of interest."}, "acceptable_arguments": null}
{"serial_num": 30, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "I want to find a surf club. Give me some information."}], "input_tools": [{"type": "function", "function": {"name": "update_contact", "description": "Update (modify or add) contents of existing contacts.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "Name stored in the current contact"}, "new_name": {"type": "string", "description": "Name to update"}, "new_phone": {"type": "string", "description": "Phone number to update"}, "new_email": {"type": "string", "description": "Email address to be updated"}}, "required": ["name"]}}}, {"type": "function", "function": {"name": "deleteMemo", "description": "Delete the previously stored notes", "parameters": {"type": "object", "properties": {"memo_id": {"type": "string", "description": "A unique identifier of the memo to delete"}}, "required": ["memo_id"]}}}, {"type": "function", "function": {"name": "find_group_or_club", "description": "Provides meetings or club information on certain topics based on the area around the specific location.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Where to find a meeting or club"}, "topic": {"type": "string", "description": "Interest"}}, "required": ["location", "topic"]}}}, {"type": "function", "function": {"name": "informLottoWinnerPrizeByRound", "description": "It is a function that informs the amount of lottery winnings of a specific episode.", "parameters": {"type": "object", "properties": {"round": {"type": "integer", "description": "A round that wants to check the amount of lottery winnings (e.g. 1001)"}}, "required": ["round"]}}}, {"type": "function", "function": {"name": "calculate_tax", "description": "Calculate the tax on the given amount.", "parameters": {"type": "object", "properties": {"amount": {"type": "number", "description": "Prior to calculating"}, "tax_rate": {"type": "number", "description": "Tax rate to be applied (percentage)"}}, "required": ["amount", "tax_rate"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me where to find a club."}, "acceptable_arguments": null}
{"serial_num": 31, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "I want to find a club. Give me some information."}, {"role": "assistant", "content": "Please tell me the location and interest of interest to find the club."}, {"role": "user", "content": "I want to find a club held in Haeundae, Busan."}], "input_tools": [{"type": "function", "function": {"name": "update_contact", "description": "Update (modify or add) contents of existing contacts.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "Name stored in the current contact"}, "new_name": {"type": "string", "description": "Name to update"}, "new_phone": {"type": "string", "description": "Phone number to update"}, "new_email": {"type": "string", "description": "Email address to be updated"}}, "required": ["name"]}}}, {"type": "function", "function": {"name": "deleteMemo", "description": "Delete the previously stored notes", "parameters": {"type": "object", "properties": {"memo_id": {"type": "string", "description": "A unique identifier of the memo to delete"}}, "required": ["memo_id"]}}}, {"type": "function", "function": {"name": "find_group_or_club", "description": "Provides meetings or club information on certain topics based on the area around the specific location.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Where to find a meeting or club"}, "topic": {"type": "string", "description": "Interest"}}, "required": ["location", "topic"]}}}, {"type": "function", "function": {"name": "informLottoWinnerPrizeByRound", "description": "It is a function that informs the amount of lottery winnings of a specific episode.", "parameters": {"type": "object", "properties": {"round": {"type": "integer", "description": "A round that wants to check the amount of lottery winnings (e.g. 1001)"}}, "required": ["round"]}}}, {"type": "function", "function": {"name": "calculate_tax", "description": "Calculate the tax on the given amount.", "parameters": {"type": "object", "properties": {"amount": {"type": "number", "description": "Prior to calculating"}, "tax_rate": {"type": "number", "description": "Tax rate to be applied (percentage)"}}, "required": ["amount", "tax_rate"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the topic of interest."}, "acceptable_arguments": null}
{"serial_num": 32, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "I want to find out the meetings around our area."}, {"role": "assistant", "content": "Please tell us the location and interest of interest to find a meeting."}, {"role": "user", "content": "I want to find out the Java programming meeting."}], "input_tools": [{"type": "function", "function": {"name": "informLottoWinnerPrizeByDate", "description": "It is a function that informs the amount of lottery winnings on a specific date.", "parameters": {"type": "object", "properties": {"date": {"type": "string", "description": "Date to check the amount of lottery winnings (e.g., March 4)"}}, "required": ["date"]}}}, {"type": "function", "function": {"name": "getMonthlyBoxOfficeRanking", "description": "It offers a monthly box office ranking for the designated year and month.", "parameters": {"type": "object", "properties": {"year": {"type": "string", "description": "The year to look up (yyyy format)"}, "month": {"type": "string", "description": "Month to look up (MM format)"}}, "required": ["year", "month"]}}}, {"type": "function", "function": {"name": "find_group_or_club", "description": "Provides meetings or club information on certain topics based on the area around the specific location.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Where to find a meeting or club"}, "topic": {"type": "string", "description": "Interest"}}, "required": ["location", "topic"]}}}, {"type": "function", "function": {"name": "convert_to_uppercase", "description": "Converted strings to capital letters", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "String"}}, "required": ["text"]}}}, {"type": "function", "function": {"name": "generate_random_special_chars", "description": "Randomly return by selecting 5 special characters randomly from a special character set.", "parameters": {"type": "object", "properties": {}, "required": []}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me where to find a club."}, "acceptable_arguments": null}
{"serial_num": 33, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Please register for Choi Yuna's birthday"}], "input_tools": [{"type": "function", "function": {"name": "recommendLottoNumber", "description": "It is a function that recommends a lotto number randomly.", "parameters": {"type": "object", "properties": {}, "required": []}}}, {"type": "function", "function": {"name": "search_flight", "description": "Search for a flight from a specific airport and arriving at a specific airport.", "parameters": {"type": "object", "properties": {"departure_airport": {"type": "string", "description": "Departure airport name (extracted as user expression. Example: Los Angeles International Airport, Gimhae Airport, etc.)"}, "arrival_airport": {"type": "string", "description": "Arrival airport name (extracting as it is, Example: Los Angeles International Airport, Gimhae Airport, etc.)"}, "departure_date": {"type": "string", "description": "Departure Date (YYYY-MM-DD)"}}, "required": ["departure_airport", "arrival_airport", "departure_date"]}}}, {"type": "function", "function": {"name": "registerFriendBirthday", "description": "A function that registers a friend's name and birthday information", "parameters": {"type": "object", "properties": {"friendName": {"type": "string", "description": "A friend's name to register"}, "birthday": {"type": "string", "description": "The birthday of a friend to register (YYYY-MM-DD format)"}}, "required": ["friendName", "birthday"]}}}, {"type": "function", "function": {"name": "calculate_discount", "description": "Input the original price and discount rate (percentage unit) to calculate the discounted price.", "parameters": {"type": "object", "properties": {"original_price": {"type": "number", "description": "Original price of the product"}, "discount_percentage": {"type": "number", "description": "Discount rate to be applied (for example, 20% discount)"}}, "required": ["original_price", "discount_percentage"]}}}, {"type": "function", "function": {"name": "count_lowercase_letters", "description": "The number of lowercase in the string", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Cell string for lowercase"}}, "required": ["text"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me your friend's birthday."}, "acceptable_arguments": null}
{"serial_num": 34, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "20050109 Register your birthday"}], "input_tools": [{"type": "function", "function": {"name": "recommendLottoNumber", "description": "It is a function that recommends a lotto number randomly.", "parameters": {"type": "object", "properties": {}, "required": []}}}, {"type": "function", "function": {"name": "search_flight", "description": "Search for a flight from a specific airport and arriving at a specific airport.", "parameters": {"type": "object", "properties": {"departure_airport": {"type": "string", "description": "Departure airport name (extracted as user expression. Example: Los Angeles International Airport, Gimhae Airport, etc.)"}, "arrival_airport": {"type": "string", "description": "Arrival airport name (extracting as it is, Example: Los Angeles International Airport, Gimhae Airport, etc.)"}, "departure_date": {"type": "string", "description": "Departure Date (YYYY-MM-DD)"}}, "required": ["departure_airport", "arrival_airport", "departure_date"]}}}, {"type": "function", "function": {"name": "registerFriendBirthday", "description": "A function that registers a friend's name and birthday information", "parameters": {"type": "object", "properties": {"friendName": {"type": "string", "description": "A friend's name to register"}, "birthday": {"type": "string", "description": "The birthday of a friend to register (YYYY-MM-DD format)"}}, "required": ["friendName", "birthday"]}}}, {"type": "function", "function": {"name": "calculate_discount", "description": "Input the original price and discount rate (percentage unit) to calculate the discounted price.", "parameters": {"type": "object", "properties": {"original_price": {"type": "number", "description": "Original price of the product"}, "discount_percentage": {"type": "number", "description": "Discount rate to be applied (for example, 20% discount)"}}, "required": ["original_price", "discount_percentage"]}}}, {"type": "function", "function": {"name": "count_lowercase_letters", "description": "The number of lowercase in the string", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Cell string for lowercase"}}, "required": ["text"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me your friend's name."}, "acceptable_arguments": null}
{"serial_num": 35, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "If you can register your birthday, run it !!"}, {"role": "assistant", "content": "Please tell me your friend's name and birthday."}, {"role": "user", "content": "Ha -eun registers her birthday !!"}], "input_tools": [{"type": "function", "function": {"name": "convert_eur_to_jpy", "description": "Convert the given Euro (EUR) amount to JPY", "parameters": {"type": "object", "properties": {"amount_eur": {"type": "number", "description": "EUR amount to convert"}}, "required": ["amount_eur"]}}}, {"type": "function", "function": {"name": "convert_pyeong_to_squaremeter", "description": "Convert it to \"평\"을 입력받아서, \"제곱미터\".", "parameters": {"type": "object", "properties": {"pyeong": {"type": "number", "description": "Pyeongsu to be transformed"}}, "required": ["pyeong"]}}}, {"type": "function", "function": {"name": "registerFriendBirthday", "description": "A function that registers a friend's name and birthday information", "parameters": {"type": "object", "properties": {"friendName": {"type": "string", "description": "A friend's name to register"}, "birthday": {"type": "string", "description": "The birthday of a friend to register (YYYY-MM-DD format)"}}, "required": ["friendName", "birthday"]}}}, {"type": "function", "function": {"name": "discover_new_releases_hiphop", "description": "Provides the latest music release information of the hip -hop genre", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "getCurrentUTCTime", "description": "We offer current UTC time.", "parameters": {}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me your friend's birthday."}, "acceptable_arguments": null}
{"serial_num": 36, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Please register your friend's birthday ~~~"}, {"role": "assistant", "content": "Please tell me your friend's name and birthday."}, {"role": "user", "content": "It is March 15, 1995 ~~~"}], "input_tools": [{"type": "function", "function": {"name": "getCurrentUTCTime", "description": "We offer current UTC time.", "parameters": {}}}, {"type": "function", "function": {"name": "count_characters", "description": "Returns the total number of characters from a given string", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Cell string"}}, "required": ["text"]}}}, {"type": "function", "function": {"name": "registerFriendBirthday", "description": "A function that registers a friend's name and birthday information", "parameters": {"type": "object", "properties": {"friendName": {"type": "string", "description": "A friend's name to register"}, "birthday": {"type": "string", "description": "The birthday of a friend to register (YYYY-MM-DD format)"}}, "required": ["friendName", "birthday"]}}}, {"type": "function", "function": {"name": "update_item_quantity_in_shopping_cart", "description": "Update the quantity of specific products in the shopping cart", "parameters": {"type": "object", "properties": {"user_id": {"type": "string", "description": "User's unique identifier"}, "product_id": {"type": "string", "description": "A unique identifier of products that want to update the quantity"}, "new_quantity": {"type": "integer", "description": "New quantity to update"}}, "required": ["user_id", "product_id", "new_quantity"]}}}, {"type": "function", "function": {"name": "calculateTimeDifference", "description": "The time difference between the two regions is returned every time.", "parameters": {"type": "object", "properties": {"fromTimezone": {"type": "string", "description": "Time zone area"}, "toTimezone": {"type": "string", "description": "Time zone area for comparison"}}, "required": ["fromTimezone", "toTimezone"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me your friend's name."}, "acceptable_arguments": null}
{"serial_num": 37, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Will you send an email to cho@email.com?"}], "input_tools": [{"type": "function", "function": {"name": "generate_image_from_text", "description": "Create a picture based on a given text", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Text to create a picture"}}, "required": ["text"]}}}, {"type": "function", "function": {"name": "add_item_to_shopping_cart", "description": "Add new products to the shopping cart", "parameters": {"type": "object", "properties": {"product_id": {"type": "string", "description": "The unique identifier of the product you want to add"}, "quantity": {"type": "integer", "description": "Quantity"}}, "required": ["product_id", "quantity"]}}}, {"type": "function", "function": {"name": "sendEmail", "description": "Send email to a specific email address.", "parameters": {"type": "object", "properties": {"receiverEmail": {"type": "string", "description": "EMAIL address of the recipient"}, "subject": {"type": "string", "description": "Email title"}, "body": {"type": "string", "description": "Email content"}}, "required": ["receiverEmail", "subject", "body"]}}}, {"type": "function", "function": {"name": "compare_it_device_prices", "description": "It compares the price of IT devices from various sellers to provide low sales information.", "parameters": {"type": "object", "properties": {"device_name": {"type": "string", "description": "Name of IT devices that want to compare prices"}}, "required": ["device_name"]}}}, {"type": "function", "function": {"name": "convert_to_lowercase", "description": "Converted string to lowercase", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "String to be converted into lowercase"}}, "required": ["text"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "all right. Please tell me the title and content of the email."}, "acceptable_arguments": null}
{"serial_num": 38, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Can you send an email? The title is \"연말 평가 관련 자료 요청\""}], "input_tools": [{"type": "function", "function": {"name": "generate_image_from_text", "description": "Create a picture based on a given text", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Text to create a picture"}}, "required": ["text"]}}}, {"type": "function", "function": {"name": "add_item_to_shopping_cart", "description": "Add new products to the shopping cart", "parameters": {"type": "object", "properties": {"product_id": {"type": "string", "description": "The unique identifier of the product you want to add"}, "quantity": {"type": "integer", "description": "Quantity"}}, "required": ["product_id", "quantity"]}}}, {"type": "function", "function": {"name": "sendEmail", "description": "Send email to a specific email address.", "parameters": {"type": "object", "properties": {"receiverEmail": {"type": "string", "description": "EMAIL address of the recipient"}, "subject": {"type": "string", "description": "Email title"}, "body": {"type": "string", "description": "Email content"}}, "required": ["receiverEmail", "subject", "body"]}}}, {"type": "function", "function": {"name": "compare_it_device_prices", "description": "It compares the price of IT devices from various sellers to provide low sales information.", "parameters": {"type": "object", "properties": {"device_name": {"type": "string", "description": "Name of IT devices that want to compare prices"}}, "required": ["device_name"]}}}, {"type": "function", "function": {"name": "convert_to_lowercase", "description": "Converted string to lowercase", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "String to be converted into lowercase"}}, "required": ["text"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "all right. Please tell me the contents of the email address and email."}, "acceptable_arguments": null}
{"serial_num": 39, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Can you send an email? The email text can be written \"연말 평가에 필요한 평가 기준과 평가받을 직원 목록을 준비해 주시기 바랍니다.\"!"}], "input_tools": [{"type": "function", "function": {"name": "generate_image_from_text", "description": "Create a picture based on a given text", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Text to create a picture"}}, "required": ["text"]}}}, {"type": "function", "function": {"name": "add_item_to_shopping_cart", "description": "Add new products to the shopping cart", "parameters": {"type": "object", "properties": {"product_id": {"type": "string", "description": "The unique identifier of the product you want to add"}, "quantity": {"type": "integer", "description": "Quantity"}}, "required": ["product_id", "quantity"]}}}, {"type": "function", "function": {"name": "sendEmail", "description": "Send email to a specific email address.", "parameters": {"type": "object", "properties": {"receiverEmail": {"type": "string", "description": "EMAIL address of the recipient"}, "subject": {"type": "string", "description": "Email title"}, "body": {"type": "string", "description": "Email content"}}, "required": ["receiverEmail", "subject", "body"]}}}, {"type": "function", "function": {"name": "compare_it_device_prices", "description": "It compares the price of IT devices from various sellers to provide low sales information.", "parameters": {"type": "object", "properties": {"device_name": {"type": "string", "description": "Name of IT devices that want to compare prices"}}, "required": ["device_name"]}}}, {"type": "function", "function": {"name": "convert_to_lowercase", "description": "Converted string to lowercase", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "String to be converted into lowercase"}}, "required": ["text"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "all right. Please tell me the title of email address and email."}, "acceptable_arguments": null}
{"serial_num": 40, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Can you send an email? I'll tell you the title and the text"}, {"role": "assistant", "content": "all right. Please tell us the title and contents of your email address and email."}, {"role": "user", "content": "Please send me to cho@email.com"}], "input_tools": [{"type": "function", "function": {"name": "generate_image_from_text", "description": "Create a picture based on a given text", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Text to create a picture"}}, "required": ["text"]}}}, {"type": "function", "function": {"name": "add_item_to_shopping_cart", "description": "Add new products to the shopping cart", "parameters": {"type": "object", "properties": {"product_id": {"type": "string", "description": "The unique identifier of the product you want to add"}, "quantity": {"type": "integer", "description": "Quantity"}}, "required": ["product_id", "quantity"]}}}, {"type": "function", "function": {"name": "sendEmail", "description": "Send email to a specific email address.", "parameters": {"type": "object", "properties": {"receiverEmail": {"type": "string", "description": "EMAIL address of the recipient"}, "subject": {"type": "string", "description": "Email title"}, "body": {"type": "string", "description": "Email content"}}, "required": ["receiverEmail", "subject", "body"]}}}, {"type": "function", "function": {"name": "compare_it_device_prices", "description": "It compares the price of IT devices from various sellers to provide low sales information.", "parameters": {"type": "object", "properties": {"device_name": {"type": "string", "description": "Name of IT devices that want to compare prices"}}, "required": ["device_name"]}}}, {"type": "function", "function": {"name": "convert_to_lowercase", "description": "Converted string to lowercase", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "String to be converted into lowercase"}}, "required": ["text"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "all right. Please tell me the title and content of the email."}, "acceptable_arguments": null}
{"serial_num": 41, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Can you send an email? I'll tell you the title and the text"}, {"role": "assistant", "content": "all right. Please tell us the title and contents of your email address and email."}, {"role": "user", "content": "The title is \"연말 평가 관련 자료 요청\""}], "input_tools": [{"type": "function", "function": {"name": "generate_image_from_text", "description": "Create a picture based on a given text", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Text to create a picture"}}, "required": ["text"]}}}, {"type": "function", "function": {"name": "add_item_to_shopping_cart", "description": "Add new products to the shopping cart", "parameters": {"type": "object", "properties": {"product_id": {"type": "string", "description": "The unique identifier of the product you want to add"}, "quantity": {"type": "integer", "description": "Quantity"}}, "required": ["product_id", "quantity"]}}}, {"type": "function", "function": {"name": "sendEmail", "description": "Send email to a specific email address.", "parameters": {"type": "object", "properties": {"receiverEmail": {"type": "string", "description": "EMAIL address of the recipient"}, "subject": {"type": "string", "description": "Email title"}, "body": {"type": "string", "description": "Email content"}}, "required": ["receiverEmail", "subject", "body"]}}}, {"type": "function", "function": {"name": "compare_it_device_prices", "description": "It compares the price of IT devices from various sellers to provide low sales information.", "parameters": {"type": "object", "properties": {"device_name": {"type": "string", "description": "Name of IT devices that want to compare prices"}}, "required": ["device_name"]}}}, {"type": "function", "function": {"name": "convert_to_lowercase", "description": "Converted string to lowercase", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "String to be converted into lowercase"}}, "required": ["text"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "all right. Please tell me the contents of the email address and email."}, "acceptable_arguments": null}
{"serial_num": 42, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Can you send an email? I'll tell you the title and the text"}, {"role": "assistant", "content": "all right. Please tell us the title and contents of your email address and email."}, {"role": "user", "content": "The email text can be written \"연말 평가에 필요한 평가 기준과 평가받을 직원 목록을 준비해 주시기 바랍니다.\"!"}], "input_tools": [{"type": "function", "function": {"name": "generate_image_from_text", "description": "Create a picture based on a given text", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Text to create a picture"}}, "required": ["text"]}}}, {"type": "function", "function": {"name": "add_item_to_shopping_cart", "description": "Add new products to the shopping cart", "parameters": {"type": "object", "properties": {"product_id": {"type": "string", "description": "The unique identifier of the product you want to add"}, "quantity": {"type": "integer", "description": "Quantity"}}, "required": ["product_id", "quantity"]}}}, {"type": "function", "function": {"name": "sendEmail", "description": "Send email to a specific email address.", "parameters": {"type": "object", "properties": {"receiverEmail": {"type": "string", "description": "EMAIL address of the recipient"}, "subject": {"type": "string", "description": "Email title"}, "body": {"type": "string", "description": "Email content"}}, "required": ["receiverEmail", "subject", "body"]}}}, {"type": "function", "function": {"name": "compare_it_device_prices", "description": "It compares the price of IT devices from various sellers to provide low sales information.", "parameters": {"type": "object", "properties": {"device_name": {"type": "string", "description": "Name of IT devices that want to compare prices"}}, "required": ["device_name"]}}}, {"type": "function", "function": {"name": "convert_to_lowercase", "description": "Converted string to lowercase", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "String to be converted into lowercase"}}, "required": ["text"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "all right. Please tell me the title of email address and email."}, "acceptable_arguments": null}
{"serial_num": 43, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Can you send a e -mail to cho@email.com? The title is \"연말 평가 관련 자료 요청\"."}], "input_tools": [{"type": "function", "function": {"name": "generate_image_from_text", "description": "Create a picture based on a given text", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Text to create a picture"}}, "required": ["text"]}}}, {"type": "function", "function": {"name": "add_item_to_shopping_cart", "description": "Add new products to the shopping cart", "parameters": {"type": "object", "properties": {"product_id": {"type": "string", "description": "The unique identifier of the product you want to add"}, "quantity": {"type": "integer", "description": "Quantity"}}, "required": ["product_id", "quantity"]}}}, {"type": "function", "function": {"name": "sendEmail", "description": "Send email to a specific email address.", "parameters": {"type": "object", "properties": {"receiverEmail": {"type": "string", "description": "EMAIL address of the recipient"}, "subject": {"type": "string", "description": "Email title"}, "body": {"type": "string", "description": "Email content"}}, "required": ["receiverEmail", "subject", "body"]}}}, {"type": "function", "function": {"name": "compare_it_device_prices", "description": "It compares the price of IT devices from various sellers to provide low sales information.", "parameters": {"type": "object", "properties": {"device_name": {"type": "string", "description": "Name of IT devices that want to compare prices"}}, "required": ["device_name"]}}}, {"type": "function", "function": {"name": "convert_to_lowercase", "description": "Converted string to lowercase", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "String to be converted into lowercase"}}, "required": ["text"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "all right. Please tell me the contents of the email."}, "acceptable_arguments": null}
{"serial_num": 44, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Would you send an email with the title of \"연말 평가 관련 자료 요청\"? The email address is cho@email.com."}], "input_tools": [{"type": "function", "function": {"name": "generate_image_from_text", "description": "Create a picture based on a given text", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Text to create a picture"}}, "required": ["text"]}}}, {"type": "function", "function": {"name": "add_item_to_shopping_cart", "description": "Add new products to the shopping cart", "parameters": {"type": "object", "properties": {"product_id": {"type": "string", "description": "The unique identifier of the product you want to add"}, "quantity": {"type": "integer", "description": "Quantity"}}, "required": ["product_id", "quantity"]}}}, {"type": "function", "function": {"name": "sendEmail", "description": "Send email to a specific email address.", "parameters": {"type": "object", "properties": {"receiverEmail": {"type": "string", "description": "EMAIL address of the recipient"}, "subject": {"type": "string", "description": "Email title"}, "body": {"type": "string", "description": "Email content"}}, "required": ["receiverEmail", "subject", "body"]}}}, {"type": "function", "function": {"name": "compare_it_device_prices", "description": "It compares the price of IT devices from various sellers to provide low sales information.", "parameters": {"type": "object", "properties": {"device_name": {"type": "string", "description": "Name of IT devices that want to compare prices"}}, "required": ["device_name"]}}}, {"type": "function", "function": {"name": "convert_to_lowercase", "description": "Converted string to lowercase", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "String to be converted into lowercase"}}, "required": ["text"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "all right. Please tell me the contents of the email."}, "acceptable_arguments": null}
{"serial_num": 45, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Will you send an email to cho@email.com? The email text can be written \"연말 평가에 필요한 평가 기준과 평가받을 직원 목록을 준비해 주시기 바랍니다.\"!"}], "input_tools": [{"type": "function", "function": {"name": "generate_image_from_text", "description": "Create a picture based on a given text", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Text to create a picture"}}, "required": ["text"]}}}, {"type": "function", "function": {"name": "add_item_to_shopping_cart", "description": "Add new products to the shopping cart", "parameters": {"type": "object", "properties": {"product_id": {"type": "string", "description": "The unique identifier of the product you want to add"}, "quantity": {"type": "integer", "description": "Quantity"}}, "required": ["product_id", "quantity"]}}}, {"type": "function", "function": {"name": "sendEmail", "description": "Send email to a specific email address.", "parameters": {"type": "object", "properties": {"receiverEmail": {"type": "string", "description": "EMAIL address of the recipient"}, "subject": {"type": "string", "description": "Email title"}, "body": {"type": "string", "description": "Email content"}}, "required": ["receiverEmail", "subject", "body"]}}}, {"type": "function", "function": {"name": "compare_it_device_prices", "description": "It compares the price of IT devices from various sellers to provide low sales information.", "parameters": {"type": "object", "properties": {"device_name": {"type": "string", "description": "Name of IT devices that want to compare prices"}}, "required": ["device_name"]}}}, {"type": "function", "function": {"name": "convert_to_lowercase", "description": "Converted string to lowercase", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "String to be converted into lowercase"}}, "required": ["text"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "all right. Please tell me the title of the email."}, "acceptable_arguments": null}
{"serial_num": 46, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Can you send an email? You can write \"연말 평가에 필요한 평가 기준과 평가받을 직원 목록을 준비해 주시기 바랍니다.\"! The email address is cho@email.com."}], "input_tools": [{"type": "function", "function": {"name": "generate_image_from_text", "description": "Create a picture based on a given text", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Text to create a picture"}}, "required": ["text"]}}}, {"type": "function", "function": {"name": "add_item_to_shopping_cart", "description": "Add new products to the shopping cart", "parameters": {"type": "object", "properties": {"product_id": {"type": "string", "description": "The unique identifier of the product you want to add"}, "quantity": {"type": "integer", "description": "Quantity"}}, "required": ["product_id", "quantity"]}}}, {"type": "function", "function": {"name": "sendEmail", "description": "Send email to a specific email address.", "parameters": {"type": "object", "properties": {"receiverEmail": {"type": "string", "description": "EMAIL address of the recipient"}, "subject": {"type": "string", "description": "Email title"}, "body": {"type": "string", "description": "Email content"}}, "required": ["receiverEmail", "subject", "body"]}}}, {"type": "function", "function": {"name": "compare_it_device_prices", "description": "It compares the price of IT devices from various sellers to provide low sales information.", "parameters": {"type": "object", "properties": {"device_name": {"type": "string", "description": "Name of IT devices that want to compare prices"}}, "required": ["device_name"]}}}, {"type": "function", "function": {"name": "convert_to_lowercase", "description": "Converted string to lowercase", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "String to be converted into lowercase"}}, "required": ["text"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "all right. Please tell me the title of the email."}, "acceptable_arguments": null}
{"serial_num": 47, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Can you send an email? The title is \"연말 평가 관련 자료 요청\"이고 이메일 본문은 \"연말 평가에 필요한 평가 기준과 평가받을 직원 목록을 준비해 주시기 바랍니다.\"!"}], "input_tools": [{"type": "function", "function": {"name": "generate_image_from_text", "description": "Create a picture based on a given text", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Text to create a picture"}}, "required": ["text"]}}}, {"type": "function", "function": {"name": "add_item_to_shopping_cart", "description": "Add new products to the shopping cart", "parameters": {"type": "object", "properties": {"product_id": {"type": "string", "description": "The unique identifier of the product you want to add"}, "quantity": {"type": "integer", "description": "Quantity"}}, "required": ["product_id", "quantity"]}}}, {"type": "function", "function": {"name": "sendEmail", "description": "Send email to a specific email address.", "parameters": {"type": "object", "properties": {"receiverEmail": {"type": "string", "description": "EMAIL address of the recipient"}, "subject": {"type": "string", "description": "Email title"}, "body": {"type": "string", "description": "Email content"}}, "required": ["receiverEmail", "subject", "body"]}}}, {"type": "function", "function": {"name": "compare_it_device_prices", "description": "It compares the price of IT devices from various sellers to provide low sales information.", "parameters": {"type": "object", "properties": {"device_name": {"type": "string", "description": "Name of IT devices that want to compare prices"}}, "required": ["device_name"]}}}, {"type": "function", "function": {"name": "convert_to_lowercase", "description": "Converted string to lowercase", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "String to be converted into lowercase"}}, "required": ["text"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "all right. Please tell me your email address."}, "acceptable_arguments": null}
{"serial_num": 48, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Can you send an email? The text is \"연말 평가에 필요한 평가 기준과 평가받을 직원 목록을 준비해 주시기 바랍니다.\"라고 적어주면 되고 제목은 \"연말 평가 관련 자료 요청\"!"}], "input_tools": [{"type": "function", "function": {"name": "generate_image_from_text", "description": "Create a picture based on a given text", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Text to create a picture"}}, "required": ["text"]}}}, {"type": "function", "function": {"name": "add_item_to_shopping_cart", "description": "Add new products to the shopping cart", "parameters": {"type": "object", "properties": {"product_id": {"type": "string", "description": "The unique identifier of the product you want to add"}, "quantity": {"type": "integer", "description": "Quantity"}}, "required": ["product_id", "quantity"]}}}, {"type": "function", "function": {"name": "sendEmail", "description": "Send email to a specific email address.", "parameters": {"type": "object", "properties": {"receiverEmail": {"type": "string", "description": "EMAIL address of the recipient"}, "subject": {"type": "string", "description": "Email title"}, "body": {"type": "string", "description": "Email content"}}, "required": ["receiverEmail", "subject", "body"]}}}, {"type": "function", "function": {"name": "compare_it_device_prices", "description": "It compares the price of IT devices from various sellers to provide low sales information.", "parameters": {"type": "object", "properties": {"device_name": {"type": "string", "description": "Name of IT devices that want to compare prices"}}, "required": ["device_name"]}}}, {"type": "function", "function": {"name": "convert_to_lowercase", "description": "Converted string to lowercase", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "String to be converted into lowercase"}}, "required": ["text"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "all right. Please tell me your email address."}, "acceptable_arguments": null}
{"serial_num": 49, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Can you send an email? I'll tell you the title and the text"}, {"role": "assistant", "content": "all right. Please tell us the title and contents of your email address and email."}, {"role": "user", "content": "The address is cho@email.com, the title is \"연말 평가 관련 자료 요청\""}], "input_tools": [{"type": "function", "function": {"name": "generate_image_from_text", "description": "Create a picture based on a given text", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Text to create a picture"}}, "required": ["text"]}}}, {"type": "function", "function": {"name": "add_item_to_shopping_cart", "description": "Add new products to the shopping cart", "parameters": {"type": "object", "properties": {"product_id": {"type": "string", "description": "The unique identifier of the product you want to add"}, "quantity": {"type": "integer", "description": "Quantity"}}, "required": ["product_id", "quantity"]}}}, {"type": "function", "function": {"name": "sendEmail", "description": "Send email to a specific email address.", "parameters": {"type": "object", "properties": {"receiverEmail": {"type": "string", "description": "EMAIL address of the recipient"}, "subject": {"type": "string", "description": "Email title"}, "body": {"type": "string", "description": "Email content"}}, "required": ["receiverEmail", "subject", "body"]}}}, {"type": "function", "function": {"name": "compare_it_device_prices", "description": "It compares the price of IT devices from various sellers to provide low sales information.", "parameters": {"type": "object", "properties": {"device_name": {"type": "string", "description": "Name of IT devices that want to compare prices"}}, "required": ["device_name"]}}}, {"type": "function", "function": {"name": "convert_to_lowercase", "description": "Converted string to lowercase", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "String to be converted into lowercase"}}, "required": ["text"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "all right. Please tell me the contents of the email."}, "acceptable_arguments": null}
{"serial_num": 50, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Can you send an email? I'll tell you the title and the text"}, {"role": "assistant", "content": "all right. Please tell us the title and contents of your email address and email."}, {"role": "user", "content": "The title is \"연말 평가 관련 자료 요청\" and the address is cho@email.com"}], "input_tools": [{"type": "function", "function": {"name": "generate_image_from_text", "description": "Create a picture based on a given text", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Text to create a picture"}}, "required": ["text"]}}}, {"type": "function", "function": {"name": "add_item_to_shopping_cart", "description": "Add new products to the shopping cart", "parameters": {"type": "object", "properties": {"product_id": {"type": "string", "description": "The unique identifier of the product you want to add"}, "quantity": {"type": "integer", "description": "Quantity"}}, "required": ["product_id", "quantity"]}}}, {"type": "function", "function": {"name": "sendEmail", "description": "Send email to a specific email address.", "parameters": {"type": "object", "properties": {"receiverEmail": {"type": "string", "description": "EMAIL address of the recipient"}, "subject": {"type": "string", "description": "Email title"}, "body": {"type": "string", "description": "Email content"}}, "required": ["receiverEmail", "subject", "body"]}}}, {"type": "function", "function": {"name": "compare_it_device_prices", "description": "It compares the price of IT devices from various sellers to provide low sales information.", "parameters": {"type": "object", "properties": {"device_name": {"type": "string", "description": "Name of IT devices that want to compare prices"}}, "required": ["device_name"]}}}, {"type": "function", "function": {"name": "convert_to_lowercase", "description": "Converted string to lowercase", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "String to be converted into lowercase"}}, "required": ["text"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "all right. Please tell me the contents of the email."}, "acceptable_arguments": null}
{"serial_num": 51, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Can you send an email? I'll tell you the title and the text"}, {"role": "assistant", "content": "all right. Please tell us the title and contents of your email address and email."}, {"role": "user", "content": "Please send me to cho@email.com. The email text can be written \"연말 평가에 필요한 평가 기준과 평가받을 직원 목록을 준비해 주시기 바랍니다.\"!"}], "input_tools": [{"type": "function", "function": {"name": "generate_image_from_text", "description": "Create a picture based on a given text", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Text to create a picture"}}, "required": ["text"]}}}, {"type": "function", "function": {"name": "add_item_to_shopping_cart", "description": "Add new products to the shopping cart", "parameters": {"type": "object", "properties": {"product_id": {"type": "string", "description": "The unique identifier of the product you want to add"}, "quantity": {"type": "integer", "description": "Quantity"}}, "required": ["product_id", "quantity"]}}}, {"type": "function", "function": {"name": "sendEmail", "description": "Send email to a specific email address.", "parameters": {"type": "object", "properties": {"receiverEmail": {"type": "string", "description": "EMAIL address of the recipient"}, "subject": {"type": "string", "description": "Email title"}, "body": {"type": "string", "description": "Email content"}}, "required": ["receiverEmail", "subject", "body"]}}}, {"type": "function", "function": {"name": "compare_it_device_prices", "description": "It compares the price of IT devices from various sellers to provide low sales information.", "parameters": {"type": "object", "properties": {"device_name": {"type": "string", "description": "Name of IT devices that want to compare prices"}}, "required": ["device_name"]}}}, {"type": "function", "function": {"name": "convert_to_lowercase", "description": "Converted string to lowercase", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "String to be converted into lowercase"}}, "required": ["text"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "all right. Please tell me the title of the email."}, "acceptable_arguments": null}
{"serial_num": 52, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Can you send an email? I'll tell you the title and the text"}, {"role": "assistant", "content": "all right. Please tell us the title and contents of your email address and email."}, {"role": "user", "content": "The email text can be written \"연말 평가에 필요한 평가 기준과 평가받을 직원 목록을 준비해 주시기 바랍니다.\"! Please send me to cho@email.com."}], "input_tools": [{"type": "function", "function": {"name": "generate_image_from_text", "description": "Create a picture based on a given text", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Text to create a picture"}}, "required": ["text"]}}}, {"type": "function", "function": {"name": "add_item_to_shopping_cart", "description": "Add new products to the shopping cart", "parameters": {"type": "object", "properties": {"product_id": {"type": "string", "description": "The unique identifier of the product you want to add"}, "quantity": {"type": "integer", "description": "Quantity"}}, "required": ["product_id", "quantity"]}}}, {"type": "function", "function": {"name": "sendEmail", "description": "Send email to a specific email address.", "parameters": {"type": "object", "properties": {"receiverEmail": {"type": "string", "description": "EMAIL address of the recipient"}, "subject": {"type": "string", "description": "Email title"}, "body": {"type": "string", "description": "Email content"}}, "required": ["receiverEmail", "subject", "body"]}}}, {"type": "function", "function": {"name": "compare_it_device_prices", "description": "It compares the price of IT devices from various sellers to provide low sales information.", "parameters": {"type": "object", "properties": {"device_name": {"type": "string", "description": "Name of IT devices that want to compare prices"}}, "required": ["device_name"]}}}, {"type": "function", "function": {"name": "convert_to_lowercase", "description": "Converted string to lowercase", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "String to be converted into lowercase"}}, "required": ["text"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "all right. Please tell me the title of the email."}, "acceptable_arguments": null}
{"serial_num": 53, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Can you send an email? I'll tell you the title and the text"}, {"role": "assistant", "content": "all right. Please tell us the title and contents of your email address and email."}, {"role": "user", "content": "The title is \"연말 평가 관련 자료 요청\"이고 이메일 본문은 \"연말 평가에 필요한 평가 기준과 평가받을 직원 목록을 준비해 주시기 바랍니다.\"!"}], "input_tools": [{"type": "function", "function": {"name": "generate_image_from_text", "description": "Create a picture based on a given text", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Text to create a picture"}}, "required": ["text"]}}}, {"type": "function", "function": {"name": "add_item_to_shopping_cart", "description": "Add new products to the shopping cart", "parameters": {"type": "object", "properties": {"product_id": {"type": "string", "description": "The unique identifier of the product you want to add"}, "quantity": {"type": "integer", "description": "Quantity"}}, "required": ["product_id", "quantity"]}}}, {"type": "function", "function": {"name": "sendEmail", "description": "Send email to a specific email address.", "parameters": {"type": "object", "properties": {"receiverEmail": {"type": "string", "description": "EMAIL address of the recipient"}, "subject": {"type": "string", "description": "Email title"}, "body": {"type": "string", "description": "Email content"}}, "required": ["receiverEmail", "subject", "body"]}}}, {"type": "function", "function": {"name": "compare_it_device_prices", "description": "It compares the price of IT devices from various sellers to provide low sales information.", "parameters": {"type": "object", "properties": {"device_name": {"type": "string", "description": "Name of IT devices that want to compare prices"}}, "required": ["device_name"]}}}, {"type": "function", "function": {"name": "convert_to_lowercase", "description": "Converted string to lowercase", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "String to be converted into lowercase"}}, "required": ["text"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "all right. Please tell me the email."}, "acceptable_arguments": null}
{"serial_num": 54, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Can you send an email? I'll tell you the title and the text"}, {"role": "assistant", "content": "all right. Please tell us the title and contents of your email address and email."}, {"role": "user", "content": "The email text is \"연말 평가에 필요한 평가 기준과 평가받을 직원 목록을 준비해 주시기 바랍니다.\"라고 적어주면 돼!! 제목은 \"연말 평가 관련 자료 요청\"."}], "input_tools": [{"type": "function", "function": {"name": "generate_image_from_text", "description": "Create a picture based on a given text", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Text to create a picture"}}, "required": ["text"]}}}, {"type": "function", "function": {"name": "add_item_to_shopping_cart", "description": "Add new products to the shopping cart", "parameters": {"type": "object", "properties": {"product_id": {"type": "string", "description": "The unique identifier of the product you want to add"}, "quantity": {"type": "integer", "description": "Quantity"}}, "required": ["product_id", "quantity"]}}}, {"type": "function", "function": {"name": "sendEmail", "description": "Send email to a specific email address.", "parameters": {"type": "object", "properties": {"receiverEmail": {"type": "string", "description": "EMAIL address of the recipient"}, "subject": {"type": "string", "description": "Email title"}, "body": {"type": "string", "description": "Email content"}}, "required": ["receiverEmail", "subject", "body"]}}}, {"type": "function", "function": {"name": "compare_it_device_prices", "description": "It compares the price of IT devices from various sellers to provide low sales information.", "parameters": {"type": "object", "properties": {"device_name": {"type": "string", "description": "Name of IT devices that want to compare prices"}}, "required": ["device_name"]}}}, {"type": "function", "function": {"name": "convert_to_lowercase", "description": "Converted string to lowercase", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "String to be converted into lowercase"}}, "required": ["text"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "all right. Please tell me the email."}, "acceptable_arguments": null}
{"serial_num": 55, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Can you send a e -mail to cho@email.com?"}, {"role": "assistant", "content": "all right. Please tell me the title and content of the email."}, {"role": "user", "content": "The title is \"연말 평가 관련 자료 요청\""}], "input_tools": [{"type": "function", "function": {"name": "generate_image_from_text", "description": "Create a picture based on a given text", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Text to create a picture"}}, "required": ["text"]}}}, {"type": "function", "function": {"name": "add_item_to_shopping_cart", "description": "Add new products to the shopping cart", "parameters": {"type": "object", "properties": {"product_id": {"type": "string", "description": "The unique identifier of the product you want to add"}, "quantity": {"type": "integer", "description": "Quantity"}}, "required": ["product_id", "quantity"]}}}, {"type": "function", "function": {"name": "sendEmail", "description": "Send email to a specific email address.", "parameters": {"type": "object", "properties": {"receiverEmail": {"type": "string", "description": "EMAIL address of the recipient"}, "subject": {"type": "string", "description": "Email title"}, "body": {"type": "string", "description": "Email content"}}, "required": ["receiverEmail", "subject", "body"]}}}, {"type": "function", "function": {"name": "compare_it_device_prices", "description": "It compares the price of IT devices from various sellers to provide low sales information.", "parameters": {"type": "object", "properties": {"device_name": {"type": "string", "description": "Name of IT devices that want to compare prices"}}, "required": ["device_name"]}}}, {"type": "function", "function": {"name": "convert_to_lowercase", "description": "Converted string to lowercase", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "String to be converted into lowercase"}}, "required": ["text"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "all right. Please tell me the contents of the email."}, "acceptable_arguments": null}
{"serial_num": 56, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Would you like to send a title with \"연말 평가 관련 자료 요청\"?"}, {"role": "assistant", "content": "all right. Please tell me your email address and content."}, {"role": "user", "content": "Please send me to cho@email.com."}], "input_tools": [{"type": "function", "function": {"name": "generate_image_from_text", "description": "Create a picture based on a given text", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Text to create a picture"}}, "required": ["text"]}}}, {"type": "function", "function": {"name": "add_item_to_shopping_cart", "description": "Add new products to the shopping cart", "parameters": {"type": "object", "properties": {"product_id": {"type": "string", "description": "The unique identifier of the product you want to add"}, "quantity": {"type": "integer", "description": "Quantity"}}, "required": ["product_id", "quantity"]}}}, {"type": "function", "function": {"name": "sendEmail", "description": "Send email to a specific email address.", "parameters": {"type": "object", "properties": {"receiverEmail": {"type": "string", "description": "EMAIL address of the recipient"}, "subject": {"type": "string", "description": "Email title"}, "body": {"type": "string", "description": "Email content"}}, "required": ["receiverEmail", "subject", "body"]}}}, {"type": "function", "function": {"name": "compare_it_device_prices", "description": "It compares the price of IT devices from various sellers to provide low sales information.", "parameters": {"type": "object", "properties": {"device_name": {"type": "string", "description": "Name of IT devices that want to compare prices"}}, "required": ["device_name"]}}}, {"type": "function", "function": {"name": "convert_to_lowercase", "description": "Converted string to lowercase", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "String to be converted into lowercase"}}, "required": ["text"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "all right. Please tell me the contents of the email."}, "acceptable_arguments": null}
{"serial_num": 57, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Can you send a e -mail to cho@email.com?"}, {"role": "assistant", "content": "all right. Please tell me the title and content of the email."}, {"role": "user", "content": "The email text can be written \"연말 평가에 필요한 평가 기준과 평가받을 직원 목록을 준비해 주시기 바랍니다.\"!"}], "input_tools": [{"type": "function", "function": {"name": "generate_image_from_text", "description": "Create a picture based on a given text", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Text to create a picture"}}, "required": ["text"]}}}, {"type": "function", "function": {"name": "add_item_to_shopping_cart", "description": "Add new products to the shopping cart", "parameters": {"type": "object", "properties": {"product_id": {"type": "string", "description": "The unique identifier of the product you want to add"}, "quantity": {"type": "integer", "description": "Quantity"}}, "required": ["product_id", "quantity"]}}}, {"type": "function", "function": {"name": "sendEmail", "description": "Send email to a specific email address.", "parameters": {"type": "object", "properties": {"receiverEmail": {"type": "string", "description": "EMAIL address of the recipient"}, "subject": {"type": "string", "description": "Email title"}, "body": {"type": "string", "description": "Email content"}}, "required": ["receiverEmail", "subject", "body"]}}}, {"type": "function", "function": {"name": "compare_it_device_prices", "description": "It compares the price of IT devices from various sellers to provide low sales information.", "parameters": {"type": "object", "properties": {"device_name": {"type": "string", "description": "Name of IT devices that want to compare prices"}}, "required": ["device_name"]}}}, {"type": "function", "function": {"name": "convert_to_lowercase", "description": "Converted string to lowercase", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "String to be converted into lowercase"}}, "required": ["text"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "all right. Please tell me the title of the email."}, "acceptable_arguments": null}
{"serial_num": 58, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Would you like to send an email in the text and write \"연말 평가에 필요한 평가 기준과 평가받을 직원 목록을 준비해 주시기 바랍니다.\"?"}, {"role": "assistant", "content": "all right. Please tell me the address and title of the email."}, {"role": "user", "content": "Please send me to cho@email.com !!"}], "input_tools": [{"type": "function", "function": {"name": "generate_image_from_text", "description": "Create a picture based on a given text", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Text to create a picture"}}, "required": ["text"]}}}, {"type": "function", "function": {"name": "add_item_to_shopping_cart", "description": "Add new products to the shopping cart", "parameters": {"type": "object", "properties": {"product_id": {"type": "string", "description": "The unique identifier of the product you want to add"}, "quantity": {"type": "integer", "description": "Quantity"}}, "required": ["product_id", "quantity"]}}}, {"type": "function", "function": {"name": "sendEmail", "description": "Send email to a specific email address.", "parameters": {"type": "object", "properties": {"receiverEmail": {"type": "string", "description": "EMAIL address of the recipient"}, "subject": {"type": "string", "description": "Email title"}, "body": {"type": "string", "description": "Email content"}}, "required": ["receiverEmail", "subject", "body"]}}}, {"type": "function", "function": {"name": "compare_it_device_prices", "description": "It compares the price of IT devices from various sellers to provide low sales information.", "parameters": {"type": "object", "properties": {"device_name": {"type": "string", "description": "Name of IT devices that want to compare prices"}}, "required": ["device_name"]}}}, {"type": "function", "function": {"name": "convert_to_lowercase", "description": "Converted string to lowercase", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "String to be converted into lowercase"}}, "required": ["text"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "all right. Please tell me the title of the email."}, "acceptable_arguments": null}
{"serial_num": 59, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Would you send a title by \"연말 평가 관련 자료 요청\"?"}, {"role": "assistant", "content": "all right. Please tell me your email address and content."}, {"role": "user", "content": "The email text can be written \"연말 평가에 필요한 평가 기준과 평가받을 직원 목록을 준비해 주시기 바랍니다.\"!"}], "input_tools": [{"type": "function", "function": {"name": "generate_image_from_text", "description": "Create a picture based on a given text", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Text to create a picture"}}, "required": ["text"]}}}, {"type": "function", "function": {"name": "add_item_to_shopping_cart", "description": "Add new products to the shopping cart", "parameters": {"type": "object", "properties": {"product_id": {"type": "string", "description": "The unique identifier of the product you want to add"}, "quantity": {"type": "integer", "description": "Quantity"}}, "required": ["product_id", "quantity"]}}}, {"type": "function", "function": {"name": "sendEmail", "description": "Send email to a specific email address.", "parameters": {"type": "object", "properties": {"receiverEmail": {"type": "string", "description": "EMAIL address of the recipient"}, "subject": {"type": "string", "description": "Email title"}, "body": {"type": "string", "description": "Email content"}}, "required": ["receiverEmail", "subject", "body"]}}}, {"type": "function", "function": {"name": "compare_it_device_prices", "description": "It compares the price of IT devices from various sellers to provide low sales information.", "parameters": {"type": "object", "properties": {"device_name": {"type": "string", "description": "Name of IT devices that want to compare prices"}}, "required": ["device_name"]}}}, {"type": "function", "function": {"name": "convert_to_lowercase", "description": "Converted string to lowercase", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "String to be converted into lowercase"}}, "required": ["text"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "all right. Please tell me your email address."}, "acceptable_arguments": null}
{"serial_num": 60, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Would you send a text by \"연말 평가에 필요한 평가 기준과 평가받을 직원 목록을 준비해 주시기 바랍니다.\"?"}, {"role": "assistant", "content": "all right. Please tell me your email address and title."}, {"role": "user", "content": "The title is \"연말 평가 관련 자료 요청\"!"}], "input_tools": [{"type": "function", "function": {"name": "generate_image_from_text", "description": "Create a picture based on a given text", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Text to create a picture"}}, "required": ["text"]}}}, {"type": "function", "function": {"name": "add_item_to_shopping_cart", "description": "Add new products to the shopping cart", "parameters": {"type": "object", "properties": {"product_id": {"type": "string", "description": "The unique identifier of the product you want to add"}, "quantity": {"type": "integer", "description": "Quantity"}}, "required": ["product_id", "quantity"]}}}, {"type": "function", "function": {"name": "sendEmail", "description": "Send email to a specific email address.", "parameters": {"type": "object", "properties": {"receiverEmail": {"type": "string", "description": "EMAIL address of the recipient"}, "subject": {"type": "string", "description": "Email title"}, "body": {"type": "string", "description": "Email content"}}, "required": ["receiverEmail", "subject", "body"]}}}, {"type": "function", "function": {"name": "compare_it_device_prices", "description": "It compares the price of IT devices from various sellers to provide low sales information.", "parameters": {"type": "object", "properties": {"device_name": {"type": "string", "description": "Name of IT devices that want to compare prices"}}, "required": ["device_name"]}}}, {"type": "function", "function": {"name": "convert_to_lowercase", "description": "Converted string to lowercase", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "String to be converted into lowercase"}}, "required": ["text"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "all right. Please tell me your email address."}, "acceptable_arguments": null}
{"serial_num": 61, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Can you send an email? I'll tell you the title and the text"}, {"role": "assistant", "content": "all right. Please tell us the title and contents of your email address and email."}, {"role": "user", "content": "Please send me to cho@email.com."}, {"role": "assistant", "content": "all right. Please tell me the title and content of the email."}, {"role": "user", "content": "The title is \"연말 평가 관련 자료 요청\""}], "input_tools": [{"type": "function", "function": {"name": "generate_image_from_text", "description": "Create a picture based on a given text", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Text to create a picture"}}, "required": ["text"]}}}, {"type": "function", "function": {"name": "add_item_to_shopping_cart", "description": "Add new products to the shopping cart", "parameters": {"type": "object", "properties": {"product_id": {"type": "string", "description": "The unique identifier of the product you want to add"}, "quantity": {"type": "integer", "description": "Quantity"}}, "required": ["product_id", "quantity"]}}}, {"type": "function", "function": {"name": "sendEmail", "description": "Send email to a specific email address.", "parameters": {"type": "object", "properties": {"receiverEmail": {"type": "string", "description": "EMAIL address of the recipient"}, "subject": {"type": "string", "description": "Email title"}, "body": {"type": "string", "description": "Email content"}}, "required": ["receiverEmail", "subject", "body"]}}}, {"type": "function", "function": {"name": "compare_it_device_prices", "description": "It compares the price of IT devices from various sellers to provide low sales information.", "parameters": {"type": "object", "properties": {"device_name": {"type": "string", "description": "Name of IT devices that want to compare prices"}}, "required": ["device_name"]}}}, {"type": "function", "function": {"name": "convert_to_lowercase", "description": "Converted string to lowercase", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "String to be converted into lowercase"}}, "required": ["text"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "all right. Please tell me the contents of the email."}, "acceptable_arguments": null}
{"serial_num": 62, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Can you send an email?"}, {"role": "assistant", "content": "all right. Please tell us the title and contents of your email address and email."}, {"role": "user", "content": "Send the title to \"연말 평가 관련 자료 요청\""}, {"role": "assistant", "content": "all right. Please tell me your email address and content."}, {"role": "user", "content": "Please send me to cho@email.com."}], "input_tools": [{"type": "function", "function": {"name": "generate_image_from_text", "description": "Create a picture based on a given text", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Text to create a picture"}}, "required": ["text"]}}}, {"type": "function", "function": {"name": "add_item_to_shopping_cart", "description": "Add new products to the shopping cart", "parameters": {"type": "object", "properties": {"product_id": {"type": "string", "description": "The unique identifier of the product you want to add"}, "quantity": {"type": "integer", "description": "Quantity"}}, "required": ["product_id", "quantity"]}}}, {"type": "function", "function": {"name": "sendEmail", "description": "Send email to a specific email address.", "parameters": {"type": "object", "properties": {"receiverEmail": {"type": "string", "description": "EMAIL address of the recipient"}, "subject": {"type": "string", "description": "Email title"}, "body": {"type": "string", "description": "Email content"}}, "required": ["receiverEmail", "subject", "body"]}}}, {"type": "function", "function": {"name": "compare_it_device_prices", "description": "It compares the price of IT devices from various sellers to provide low sales information.", "parameters": {"type": "object", "properties": {"device_name": {"type": "string", "description": "Name of IT devices that want to compare prices"}}, "required": ["device_name"]}}}, {"type": "function", "function": {"name": "convert_to_lowercase", "description": "Converted string to lowercase", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "String to be converted into lowercase"}}, "required": ["text"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "all right. Please tell me the contents of the email."}, "acceptable_arguments": null}
{"serial_num": 63, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Can you send an email?"}, {"role": "assistant", "content": "all right. Please tell us the title and contents of your email address and email."}, {"role": "user", "content": "Please send me to cho@email.com"}, {"role": "assistant", "content": "all right. Please tell me the title and content of the email."}, {"role": "user", "content": "The email text can be written \"연말 평가에 필요한 평가 기준과 평가받을 직원 목록을 준비해 주시기 바랍니다.\"!"}], "input_tools": [{"type": "function", "function": {"name": "generate_image_from_text", "description": "Create a picture based on a given text", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Text to create a picture"}}, "required": ["text"]}}}, {"type": "function", "function": {"name": "add_item_to_shopping_cart", "description": "Add new products to the shopping cart", "parameters": {"type": "object", "properties": {"product_id": {"type": "string", "description": "The unique identifier of the product you want to add"}, "quantity": {"type": "integer", "description": "Quantity"}}, "required": ["product_id", "quantity"]}}}, {"type": "function", "function": {"name": "sendEmail", "description": "Send email to a specific email address.", "parameters": {"type": "object", "properties": {"receiverEmail": {"type": "string", "description": "EMAIL address of the recipient"}, "subject": {"type": "string", "description": "Email title"}, "body": {"type": "string", "description": "Email content"}}, "required": ["receiverEmail", "subject", "body"]}}}, {"type": "function", "function": {"name": "compare_it_device_prices", "description": "It compares the price of IT devices from various sellers to provide low sales information.", "parameters": {"type": "object", "properties": {"device_name": {"type": "string", "description": "Name of IT devices that want to compare prices"}}, "required": ["device_name"]}}}, {"type": "function", "function": {"name": "convert_to_lowercase", "description": "Converted string to lowercase", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "String to be converted into lowercase"}}, "required": ["text"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "all right. Please tell me the title of the email."}, "acceptable_arguments": null}
{"serial_num": 64, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Can you send an email?"}, {"role": "assistant", "content": "all right. Please tell us the title and contents of your email address and email."}, {"role": "user", "content": "Send it in the text and write \"연말 평가에 필요한 평가 기준과 평가받을 직원 목록을 준비해 주시기 바랍니다.\""}, {"role": "assistant", "content": "all right. Please tell me the address and title of the email."}, {"role": "user", "content": "Please send me to cho@email.com !!"}], "input_tools": [{"type": "function", "function": {"name": "generate_image_from_text", "description": "Create a picture based on a given text", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Text to create a picture"}}, "required": ["text"]}}}, {"type": "function", "function": {"name": "add_item_to_shopping_cart", "description": "Add new products to the shopping cart", "parameters": {"type": "object", "properties": {"product_id": {"type": "string", "description": "The unique identifier of the product you want to add"}, "quantity": {"type": "integer", "description": "Quantity"}}, "required": ["product_id", "quantity"]}}}, {"type": "function", "function": {"name": "sendEmail", "description": "Send email to a specific email address.", "parameters": {"type": "object", "properties": {"receiverEmail": {"type": "string", "description": "EMAIL address of the recipient"}, "subject": {"type": "string", "description": "Email title"}, "body": {"type": "string", "description": "Email content"}}, "required": ["receiverEmail", "subject", "body"]}}}, {"type": "function", "function": {"name": "compare_it_device_prices", "description": "It compares the price of IT devices from various sellers to provide low sales information.", "parameters": {"type": "object", "properties": {"device_name": {"type": "string", "description": "Name of IT devices that want to compare prices"}}, "required": ["device_name"]}}}, {"type": "function", "function": {"name": "convert_to_lowercase", "description": "Converted string to lowercase", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "String to be converted into lowercase"}}, "required": ["text"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "all right. Please tell me the title of the email."}, "acceptable_arguments": null}
{"serial_num": 65, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Can you send an email?"}, {"role": "assistant", "content": "all right. Please tell us the title and contents of your email address and email."}, {"role": "user", "content": "Send the title as \"연말 평가 관련 자료 요청\""}, {"role": "assistant", "content": "all right. Please tell me your email address and content."}, {"role": "user", "content": "The email text can be written \"연말 평가에 필요한 평가 기준과 평가받을 직원 목록을 준비해 주시기 바랍니다.\"!"}], "input_tools": [{"type": "function", "function": {"name": "generate_image_from_text", "description": "Create a picture based on a given text", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Text to create a picture"}}, "required": ["text"]}}}, {"type": "function", "function": {"name": "add_item_to_shopping_cart", "description": "Add new products to the shopping cart", "parameters": {"type": "object", "properties": {"product_id": {"type": "string", "description": "The unique identifier of the product you want to add"}, "quantity": {"type": "integer", "description": "Quantity"}}, "required": ["product_id", "quantity"]}}}, {"type": "function", "function": {"name": "sendEmail", "description": "Send email to a specific email address.", "parameters": {"type": "object", "properties": {"receiverEmail": {"type": "string", "description": "EMAIL address of the recipient"}, "subject": {"type": "string", "description": "Email title"}, "body": {"type": "string", "description": "Email content"}}, "required": ["receiverEmail", "subject", "body"]}}}, {"type": "function", "function": {"name": "compare_it_device_prices", "description": "It compares the price of IT devices from various sellers to provide low sales information.", "parameters": {"type": "object", "properties": {"device_name": {"type": "string", "description": "Name of IT devices that want to compare prices"}}, "required": ["device_name"]}}}, {"type": "function", "function": {"name": "convert_to_lowercase", "description": "Converted string to lowercase", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "String to be converted into lowercase"}}, "required": ["text"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "all right. Please tell me your email address."}, "acceptable_arguments": null}
{"serial_num": 66, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Can you send an email?"}, {"role": "assistant", "content": "all right. Please tell us the title and contents of your email address and email."}, {"role": "user", "content": "Send the text as \"연말 평가에 필요한 평가 기준과 평가받을 직원 목록을 준비해 주시기 바랍니다.\""}, {"role": "assistant", "content": "all right. Please tell me your email address and title."}, {"role": "user", "content": "The title is \"연말 평가 관련 자료 요청\"!"}], "input_tools": [{"type": "function", "function": {"name": "generate_image_from_text", "description": "Create a picture based on a given text", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Text to create a picture"}}, "required": ["text"]}}}, {"type": "function", "function": {"name": "add_item_to_shopping_cart", "description": "Add new products to the shopping cart", "parameters": {"type": "object", "properties": {"product_id": {"type": "string", "description": "The unique identifier of the product you want to add"}, "quantity": {"type": "integer", "description": "Quantity"}}, "required": ["product_id", "quantity"]}}}, {"type": "function", "function": {"name": "sendEmail", "description": "Send email to a specific email address.", "parameters": {"type": "object", "properties": {"receiverEmail": {"type": "string", "description": "EMAIL address of the recipient"}, "subject": {"type": "string", "description": "Email title"}, "body": {"type": "string", "description": "Email content"}}, "required": ["receiverEmail", "subject", "body"]}}}, {"type": "function", "function": {"name": "compare_it_device_prices", "description": "It compares the price of IT devices from various sellers to provide low sales information.", "parameters": {"type": "object", "properties": {"device_name": {"type": "string", "description": "Name of IT devices that want to compare prices"}}, "required": ["device_name"]}}}, {"type": "function", "function": {"name": "convert_to_lowercase", "description": "Converted string to lowercase", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "String to be converted into lowercase"}}, "required": ["text"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "all right. Please tell me your email address."}, "acceptable_arguments": null}
{"serial_num": 67, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Send some money to your brother Kakao Bank account."}], "input_tools": [{"type": "function", "function": {"name": "calculateBMR", "description": "Basal metabolic rate calculation", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}, "height": {"type": "number", "description": "Centimeter key"}, "age": {"type": "integer", "description": "age"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["weight", "height", "age", "gender"]}}}, {"type": "function", "function": {"name": "getCurrentKoreaTime", "description": "Currently, the time of Korea is returned to year-month-day: minor: second format.", "parameters": {}}}, {"type": "function", "function": {"name": "transferMoney", "description": "Send money to a specific account.", "parameters": {"type": "object", "properties": {"receiver_bank": {"type": "string", "description": "Bank"}, "receiver_account": {"type": "string", "description": "Account number to send"}, "amount": {"type": "number", "description": "Missing money (unit: krw))"}}, "required": ["receiver_bank", "receiver_account", "amount"]}}}, {"type": "function", "function": {"name": "create_user", "description": "Create a new user account.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "User's name"}, "email": {"type": "string", "description": "User's email address"}, "password": {"type": "string", "description": "User's password"}}, "required": ["name", "email", "password"]}}}, {"type": "function", "function": {"name": "search_email_content", "description": "Search for emails containing keywords specified by the user during the saved email.", "parameters": {"type": "object", "properties": {"keyword": {"type": "string", "description": "Keyword to search"}, "from_date": {"type": "string", "description": "Date to start searching (optional)"}, "to_date": {"type": "string", "description": "Date to finish the search (optional)"}, "sender": {"type": "string", "description": "Email caller address (optional)"}}, "required": ["keyword"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the account number to be transferred and the amount to be remitted."}, "acceptable_arguments": null}
{"serial_num": 68, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "890-123-456 Send some money here."}], "input_tools": [{"type": "function", "function": {"name": "calculateBMR", "description": "Basal metabolic rate calculation", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}, "height": {"type": "number", "description": "Centimeter key"}, "age": {"type": "integer", "description": "age"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["weight", "height", "age", "gender"]}}}, {"type": "function", "function": {"name": "getCurrentKoreaTime", "description": "Currently, the time of Korea is returned to year-month-day: minor: second format.", "parameters": {}}}, {"type": "function", "function": {"name": "transferMoney", "description": "Send money to a specific account.", "parameters": {"type": "object", "properties": {"receiver_bank": {"type": "string", "description": "Bank"}, "receiver_account": {"type": "string", "description": "Account number to send"}, "amount": {"type": "number", "description": "Missing money (unit: krw))"}}, "required": ["receiver_bank", "receiver_account", "amount"]}}}, {"type": "function", "function": {"name": "create_user", "description": "Create a new user account.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "User's name"}, "email": {"type": "string", "description": "User's email address"}, "password": {"type": "string", "description": "User's password"}}, "required": ["name", "email", "password"]}}}, {"type": "function", "function": {"name": "search_email_content", "description": "Search for emails containing keywords specified by the user during the saved email.", "parameters": {"type": "object", "properties": {"keyword": {"type": "string", "description": "Keyword to search"}, "from_date": {"type": "string", "description": "Date to start searching (optional)"}, "to_date": {"type": "string", "description": "Date to finish the search (optional)"}, "sender": {"type": "string", "description": "Email caller address (optional)"}}, "required": ["keyword"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the bank name and money to send money."}, "acceptable_arguments": null}
{"serial_num": 69, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Send 8,000 won to your brother."}], "input_tools": [{"type": "function", "function": {"name": "calculateBMR", "description": "Basal metabolic rate calculation", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}, "height": {"type": "number", "description": "Centimeter key"}, "age": {"type": "integer", "description": "age"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["weight", "height", "age", "gender"]}}}, {"type": "function", "function": {"name": "getCurrentKoreaTime", "description": "Currently, the time of Korea is returned to year-month-day: minor: second format.", "parameters": {}}}, {"type": "function", "function": {"name": "transferMoney", "description": "Send money to a specific account.", "parameters": {"type": "object", "properties": {"receiver_bank": {"type": "string", "description": "Bank"}, "receiver_account": {"type": "string", "description": "Account number to send"}, "amount": {"type": "number", "description": "Missing money (unit: krw))"}}, "required": ["receiver_bank", "receiver_account", "amount"]}}}, {"type": "function", "function": {"name": "create_user", "description": "Create a new user account.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "User's name"}, "email": {"type": "string", "description": "User's email address"}, "password": {"type": "string", "description": "User's password"}}, "required": ["name", "email", "password"]}}}, {"type": "function", "function": {"name": "search_email_content", "description": "Search for emails containing keywords specified by the user during the saved email.", "parameters": {"type": "object", "properties": {"keyword": {"type": "string", "description": "Keyword to search"}, "from_date": {"type": "string", "description": "Date to start searching (optional)"}, "to_date": {"type": "string", "description": "Date to finish the search (optional)"}, "sender": {"type": "string", "description": "Email caller address (optional)"}}, "required": ["keyword"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the bank name and account number of the account to be sent."}, "acceptable_arguments": null}
{"serial_num": 70, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Send some money to your brother."}, {"role": "assistant", "content": "Please tell me the bank name, account number, and money to be transferred."}, {"role": "user", "content": "His brother Kakao Bank account."}], "input_tools": [{"type": "function", "function": {"name": "calculateBMR", "description": "Basal metabolic rate calculation", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}, "height": {"type": "number", "description": "Centimeter key"}, "age": {"type": "integer", "description": "age"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["weight", "height", "age", "gender"]}}}, {"type": "function", "function": {"name": "getCurrentKoreaTime", "description": "Currently, the time of Korea is returned to year-month-day: minor: second format.", "parameters": {}}}, {"type": "function", "function": {"name": "transferMoney", "description": "Send money to a specific account.", "parameters": {"type": "object", "properties": {"receiver_bank": {"type": "string", "description": "Bank"}, "receiver_account": {"type": "string", "description": "Account number to send"}, "amount": {"type": "number", "description": "Missing money (unit: krw))"}}, "required": ["receiver_bank", "receiver_account", "amount"]}}}, {"type": "function", "function": {"name": "create_user", "description": "Create a new user account.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "User's name"}, "email": {"type": "string", "description": "User's email address"}, "password": {"type": "string", "description": "User's password"}}, "required": ["name", "email", "password"]}}}, {"type": "function", "function": {"name": "search_email_content", "description": "Search for emails containing keywords specified by the user during the saved email.", "parameters": {"type": "object", "properties": {"keyword": {"type": "string", "description": "Keyword to search"}, "from_date": {"type": "string", "description": "Date to start searching (optional)"}, "to_date": {"type": "string", "description": "Date to finish the search (optional)"}, "sender": {"type": "string", "description": "Email caller address (optional)"}}, "required": ["keyword"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the account number to be transferred and the amount to be remitted."}, "acceptable_arguments": null}
{"serial_num": 71, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Send some money to your brother."}, {"role": "assistant", "content": "Please tell me the bank name, account number, and money to be transferred."}, {"role": "user", "content": "890-123-456 here."}], "input_tools": [{"type": "function", "function": {"name": "calculateBMR", "description": "Basal metabolic rate calculation", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}, "height": {"type": "number", "description": "Centimeter key"}, "age": {"type": "integer", "description": "age"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["weight", "height", "age", "gender"]}}}, {"type": "function", "function": {"name": "getCurrentKoreaTime", "description": "Currently, the time of Korea is returned to year-month-day: minor: second format.", "parameters": {}}}, {"type": "function", "function": {"name": "transferMoney", "description": "Send money to a specific account.", "parameters": {"type": "object", "properties": {"receiver_bank": {"type": "string", "description": "Bank"}, "receiver_account": {"type": "string", "description": "Account number to send"}, "amount": {"type": "number", "description": "Missing money (unit: krw))"}}, "required": ["receiver_bank", "receiver_account", "amount"]}}}, {"type": "function", "function": {"name": "create_user", "description": "Create a new user account.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "User's name"}, "email": {"type": "string", "description": "User's email address"}, "password": {"type": "string", "description": "User's password"}}, "required": ["name", "email", "password"]}}}, {"type": "function", "function": {"name": "search_email_content", "description": "Search for emails containing keywords specified by the user during the saved email.", "parameters": {"type": "object", "properties": {"keyword": {"type": "string", "description": "Keyword to search"}, "from_date": {"type": "string", "description": "Date to start searching (optional)"}, "to_date": {"type": "string", "description": "Date to finish the search (optional)"}, "sender": {"type": "string", "description": "Email caller address (optional)"}}, "required": ["keyword"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the bank name and money to send money."}, "acceptable_arguments": null}
{"serial_num": 72, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Send some money to your brother."}, {"role": "assistant", "content": "Please tell me the bank name, account number, and money to be transferred."}, {"role": "user", "content": "Please send me 8,000 won."}], "input_tools": [{"type": "function", "function": {"name": "calculateBMR", "description": "Basal metabolic rate calculation", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}, "height": {"type": "number", "description": "Centimeter key"}, "age": {"type": "integer", "description": "age"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["weight", "height", "age", "gender"]}}}, {"type": "function", "function": {"name": "getCurrentKoreaTime", "description": "Currently, the time of Korea is returned to year-month-day: minor: second format.", "parameters": {}}}, {"type": "function", "function": {"name": "transferMoney", "description": "Send money to a specific account.", "parameters": {"type": "object", "properties": {"receiver_bank": {"type": "string", "description": "Bank"}, "receiver_account": {"type": "string", "description": "Account number to send"}, "amount": {"type": "number", "description": "Missing money (unit: krw))"}}, "required": ["receiver_bank", "receiver_account", "amount"]}}}, {"type": "function", "function": {"name": "create_user", "description": "Create a new user account.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "User's name"}, "email": {"type": "string", "description": "User's email address"}, "password": {"type": "string", "description": "User's password"}}, "required": ["name", "email", "password"]}}}, {"type": "function", "function": {"name": "search_email_content", "description": "Search for emails containing keywords specified by the user during the saved email.", "parameters": {"type": "object", "properties": {"keyword": {"type": "string", "description": "Keyword to search"}, "from_date": {"type": "string", "description": "Date to start searching (optional)"}, "to_date": {"type": "string", "description": "Date to finish the search (optional)"}, "sender": {"type": "string", "description": "Email caller address (optional)"}}, "required": ["keyword"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the bank name and account number of the account to be sent."}, "acceptable_arguments": null}
{"serial_num": 73, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Send some money to your brother. The account is Kakao Bank 890-123-456."}], "input_tools": [{"type": "function", "function": {"name": "calculateBMR", "description": "Basal metabolic rate calculation", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}, "height": {"type": "number", "description": "Centimeter key"}, "age": {"type": "integer", "description": "age"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["weight", "height", "age", "gender"]}}}, {"type": "function", "function": {"name": "getCurrentKoreaTime", "description": "Currently, the time of Korea is returned to year-month-day: minor: second format.", "parameters": {}}}, {"type": "function", "function": {"name": "transferMoney", "description": "Send money to a specific account.", "parameters": {"type": "object", "properties": {"receiver_bank": {"type": "string", "description": "Bank"}, "receiver_account": {"type": "string", "description": "Account number to send"}, "amount": {"type": "number", "description": "Missing money (unit: krw))"}}, "required": ["receiver_bank", "receiver_account", "amount"]}}}, {"type": "function", "function": {"name": "create_user", "description": "Create a new user account.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "User's name"}, "email": {"type": "string", "description": "User's email address"}, "password": {"type": "string", "description": "User's password"}}, "required": ["name", "email", "password"]}}}, {"type": "function", "function": {"name": "search_email_content", "description": "Search for emails containing keywords specified by the user during the saved email.", "parameters": {"type": "object", "properties": {"keyword": {"type": "string", "description": "Keyword to search"}, "from_date": {"type": "string", "description": "Date to start searching (optional)"}, "to_date": {"type": "string", "description": "Date to finish the search (optional)"}, "sender": {"type": "string", "description": "Email caller address (optional)"}}, "required": ["keyword"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the amount to send."}, "acceptable_arguments": null}
{"serial_num": 74, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Send some money to your brother. The account is 890-123-456 Kakao Bank."}], "input_tools": [{"type": "function", "function": {"name": "calculateBMR", "description": "Basal metabolic rate calculation", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}, "height": {"type": "number", "description": "Centimeter key"}, "age": {"type": "integer", "description": "age"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["weight", "height", "age", "gender"]}}}, {"type": "function", "function": {"name": "getCurrentKoreaTime", "description": "Currently, the time of Korea is returned to year-month-day: minor: second format.", "parameters": {}}}, {"type": "function", "function": {"name": "transferMoney", "description": "Send money to a specific account.", "parameters": {"type": "object", "properties": {"receiver_bank": {"type": "string", "description": "Bank"}, "receiver_account": {"type": "string", "description": "Account number to send"}, "amount": {"type": "number", "description": "Missing money (unit: krw))"}}, "required": ["receiver_bank", "receiver_account", "amount"]}}}, {"type": "function", "function": {"name": "create_user", "description": "Create a new user account.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "User's name"}, "email": {"type": "string", "description": "User's email address"}, "password": {"type": "string", "description": "User's password"}}, "required": ["name", "email", "password"]}}}, {"type": "function", "function": {"name": "search_email_content", "description": "Search for emails containing keywords specified by the user during the saved email.", "parameters": {"type": "object", "properties": {"keyword": {"type": "string", "description": "Keyword to search"}, "from_date": {"type": "string", "description": "Date to start searching (optional)"}, "to_date": {"type": "string", "description": "Date to finish the search (optional)"}, "sender": {"type": "string", "description": "Email caller address (optional)"}}, "required": ["keyword"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the amount to send."}, "acceptable_arguments": null}
{"serial_num": 75, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Send your brother to Kakao Bank account 8,000 won."}], "input_tools": [{"type": "function", "function": {"name": "calculateBMR", "description": "Basal metabolic rate calculation", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}, "height": {"type": "number", "description": "Centimeter key"}, "age": {"type": "integer", "description": "age"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["weight", "height", "age", "gender"]}}}, {"type": "function", "function": {"name": "getCurrentKoreaTime", "description": "Currently, the time of Korea is returned to year-month-day: minor: second format.", "parameters": {}}}, {"type": "function", "function": {"name": "transferMoney", "description": "Send money to a specific account.", "parameters": {"type": "object", "properties": {"receiver_bank": {"type": "string", "description": "Bank"}, "receiver_account": {"type": "string", "description": "Account number to send"}, "amount": {"type": "number", "description": "Missing money (unit: krw))"}}, "required": ["receiver_bank", "receiver_account", "amount"]}}}, {"type": "function", "function": {"name": "create_user", "description": "Create a new user account.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "User's name"}, "email": {"type": "string", "description": "User's email address"}, "password": {"type": "string", "description": "User's password"}}, "required": ["name", "email", "password"]}}}, {"type": "function", "function": {"name": "search_email_content", "description": "Search for emails containing keywords specified by the user during the saved email.", "parameters": {"type": "object", "properties": {"keyword": {"type": "string", "description": "Keyword to search"}, "from_date": {"type": "string", "description": "Date to start searching (optional)"}, "to_date": {"type": "string", "description": "Date to finish the search (optional)"}, "sender": {"type": "string", "description": "Email caller address (optional)"}}, "required": ["keyword"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the account number."}, "acceptable_arguments": null}
{"serial_num": 76, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Send 8,000 won to your brother. To Kakao Bank account."}], "input_tools": [{"type": "function", "function": {"name": "calculateBMR", "description": "Basal metabolic rate calculation", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}, "height": {"type": "number", "description": "Centimeter key"}, "age": {"type": "integer", "description": "age"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["weight", "height", "age", "gender"]}}}, {"type": "function", "function": {"name": "getCurrentKoreaTime", "description": "Currently, the time of Korea is returned to year-month-day: minor: second format.", "parameters": {}}}, {"type": "function", "function": {"name": "transferMoney", "description": "Send money to a specific account.", "parameters": {"type": "object", "properties": {"receiver_bank": {"type": "string", "description": "Bank"}, "receiver_account": {"type": "string", "description": "Account number to send"}, "amount": {"type": "number", "description": "Missing money (unit: krw))"}}, "required": ["receiver_bank", "receiver_account", "amount"]}}}, {"type": "function", "function": {"name": "create_user", "description": "Create a new user account.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "User's name"}, "email": {"type": "string", "description": "User's email address"}, "password": {"type": "string", "description": "User's password"}}, "required": ["name", "email", "password"]}}}, {"type": "function", "function": {"name": "search_email_content", "description": "Search for emails containing keywords specified by the user during the saved email.", "parameters": {"type": "object", "properties": {"keyword": {"type": "string", "description": "Keyword to search"}, "from_date": {"type": "string", "description": "Date to start searching (optional)"}, "to_date": {"type": "string", "description": "Date to finish the search (optional)"}, "sender": {"type": "string", "description": "Email caller address (optional)"}}, "required": ["keyword"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the account number."}, "acceptable_arguments": null}
{"serial_num": 77, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Send some money to your brother. 890-123-456 You can send 8,000 won here."}], "input_tools": [{"type": "function", "function": {"name": "calculateBMR", "description": "Basal metabolic rate calculation", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}, "height": {"type": "number", "description": "Centimeter key"}, "age": {"type": "integer", "description": "age"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["weight", "height", "age", "gender"]}}}, {"type": "function", "function": {"name": "getCurrentKoreaTime", "description": "Currently, the time of Korea is returned to year-month-day: minor: second format.", "parameters": {}}}, {"type": "function", "function": {"name": "transferMoney", "description": "Send money to a specific account.", "parameters": {"type": "object", "properties": {"receiver_bank": {"type": "string", "description": "Bank"}, "receiver_account": {"type": "string", "description": "Account number to send"}, "amount": {"type": "number", "description": "Missing money (unit: krw))"}}, "required": ["receiver_bank", "receiver_account", "amount"]}}}, {"type": "function", "function": {"name": "create_user", "description": "Create a new user account.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "User's name"}, "email": {"type": "string", "description": "User's email address"}, "password": {"type": "string", "description": "User's password"}}, "required": ["name", "email", "password"]}}}, {"type": "function", "function": {"name": "search_email_content", "description": "Search for emails containing keywords specified by the user during the saved email.", "parameters": {"type": "object", "properties": {"keyword": {"type": "string", "description": "Keyword to search"}, "from_date": {"type": "string", "description": "Date to start searching (optional)"}, "to_date": {"type": "string", "description": "Date to finish the search (optional)"}, "sender": {"type": "string", "description": "Email caller address (optional)"}}, "required": ["keyword"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the bank name of the bank to send."}, "acceptable_arguments": null}
{"serial_num": 78, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Send 8,000 won to your brother. 890-123-456 You can send it here."}], "input_tools": [{"type": "function", "function": {"name": "calculateBMR", "description": "Basal metabolic rate calculation", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}, "height": {"type": "number", "description": "Centimeter key"}, "age": {"type": "integer", "description": "age"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["weight", "height", "age", "gender"]}}}, {"type": "function", "function": {"name": "getCurrentKoreaTime", "description": "Currently, the time of Korea is returned to year-month-day: minor: second format.", "parameters": {}}}, {"type": "function", "function": {"name": "transferMoney", "description": "Send money to a specific account.", "parameters": {"type": "object", "properties": {"receiver_bank": {"type": "string", "description": "Bank"}, "receiver_account": {"type": "string", "description": "Account number to send"}, "amount": {"type": "number", "description": "Missing money (unit: krw))"}}, "required": ["receiver_bank", "receiver_account", "amount"]}}}, {"type": "function", "function": {"name": "create_user", "description": "Create a new user account.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "User's name"}, "email": {"type": "string", "description": "User's email address"}, "password": {"type": "string", "description": "User's password"}}, "required": ["name", "email", "password"]}}}, {"type": "function", "function": {"name": "search_email_content", "description": "Search for emails containing keywords specified by the user during the saved email.", "parameters": {"type": "object", "properties": {"keyword": {"type": "string", "description": "Keyword to search"}, "from_date": {"type": "string", "description": "Date to start searching (optional)"}, "to_date": {"type": "string", "description": "Date to finish the search (optional)"}, "sender": {"type": "string", "description": "Email caller address (optional)"}}, "required": ["keyword"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the bank name of the bank to send."}, "acceptable_arguments": null}
{"serial_num": 79, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Send some money to your brother."}, {"role": "assistant", "content": "Please tell me the bank name, account number, and money to be transferred."}, {"role": "user", "content": "The account is Kakao Bank 890-123-456."}], "input_tools": [{"type": "function", "function": {"name": "calculateBMR", "description": "Basal metabolic rate calculation", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}, "height": {"type": "number", "description": "Centimeter key"}, "age": {"type": "integer", "description": "age"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["weight", "height", "age", "gender"]}}}, {"type": "function", "function": {"name": "getCurrentKoreaTime", "description": "Currently, the time of Korea is returned to year-month-day: minor: second format.", "parameters": {}}}, {"type": "function", "function": {"name": "transferMoney", "description": "Send money to a specific account.", "parameters": {"type": "object", "properties": {"receiver_bank": {"type": "string", "description": "Bank"}, "receiver_account": {"type": "string", "description": "Account number to send"}, "amount": {"type": "number", "description": "Missing money (unit: krw))"}}, "required": ["receiver_bank", "receiver_account", "amount"]}}}, {"type": "function", "function": {"name": "create_user", "description": "Create a new user account.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "User's name"}, "email": {"type": "string", "description": "User's email address"}, "password": {"type": "string", "description": "User's password"}}, "required": ["name", "email", "password"]}}}, {"type": "function", "function": {"name": "search_email_content", "description": "Search for emails containing keywords specified by the user during the saved email.", "parameters": {"type": "object", "properties": {"keyword": {"type": "string", "description": "Keyword to search"}, "from_date": {"type": "string", "description": "Date to start searching (optional)"}, "to_date": {"type": "string", "description": "Date to finish the search (optional)"}, "sender": {"type": "string", "description": "Email caller address (optional)"}}, "required": ["keyword"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the amount to send."}, "acceptable_arguments": null}
{"serial_num": 80, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Send some money to your brother."}, {"role": "assistant", "content": "Please tell me the bank name, account number, and money to be transferred."}, {"role": "user", "content": "The account is 890-123-456 Kakao Bank."}], "input_tools": [{"type": "function", "function": {"name": "calculateBMR", "description": "Basal metabolic rate calculation", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}, "height": {"type": "number", "description": "Centimeter key"}, "age": {"type": "integer", "description": "age"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["weight", "height", "age", "gender"]}}}, {"type": "function", "function": {"name": "getCurrentKoreaTime", "description": "Currently, the time of Korea is returned to year-month-day: minor: second format.", "parameters": {}}}, {"type": "function", "function": {"name": "transferMoney", "description": "Send money to a specific account.", "parameters": {"type": "object", "properties": {"receiver_bank": {"type": "string", "description": "Bank"}, "receiver_account": {"type": "string", "description": "Account number to send"}, "amount": {"type": "number", "description": "Missing money (unit: krw))"}}, "required": ["receiver_bank", "receiver_account", "amount"]}}}, {"type": "function", "function": {"name": "create_user", "description": "Create a new user account.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "User's name"}, "email": {"type": "string", "description": "User's email address"}, "password": {"type": "string", "description": "User's password"}}, "required": ["name", "email", "password"]}}}, {"type": "function", "function": {"name": "search_email_content", "description": "Search for emails containing keywords specified by the user during the saved email.", "parameters": {"type": "object", "properties": {"keyword": {"type": "string", "description": "Keyword to search"}, "from_date": {"type": "string", "description": "Date to start searching (optional)"}, "to_date": {"type": "string", "description": "Date to finish the search (optional)"}, "sender": {"type": "string", "description": "Email caller address (optional)"}}, "required": ["keyword"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the amount to send."}, "acceptable_arguments": null}
{"serial_num": 81, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Send some money to your brother."}, {"role": "assistant", "content": "Please tell me the bank name, account number, and money to be transferred."}, {"role": "user", "content": "Send 8,000 won to Kakao Bank account."}], "input_tools": [{"type": "function", "function": {"name": "calculateBMR", "description": "Basal metabolic rate calculation", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}, "height": {"type": "number", "description": "Centimeter key"}, "age": {"type": "integer", "description": "age"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["weight", "height", "age", "gender"]}}}, {"type": "function", "function": {"name": "getCurrentKoreaTime", "description": "Currently, the time of Korea is returned to year-month-day: minor: second format.", "parameters": {}}}, {"type": "function", "function": {"name": "transferMoney", "description": "Send money to a specific account.", "parameters": {"type": "object", "properties": {"receiver_bank": {"type": "string", "description": "Bank"}, "receiver_account": {"type": "string", "description": "Account number to send"}, "amount": {"type": "number", "description": "Missing money (unit: krw))"}}, "required": ["receiver_bank", "receiver_account", "amount"]}}}, {"type": "function", "function": {"name": "create_user", "description": "Create a new user account.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "User's name"}, "email": {"type": "string", "description": "User's email address"}, "password": {"type": "string", "description": "User's password"}}, "required": ["name", "email", "password"]}}}, {"type": "function", "function": {"name": "search_email_content", "description": "Search for emails containing keywords specified by the user during the saved email.", "parameters": {"type": "object", "properties": {"keyword": {"type": "string", "description": "Keyword to search"}, "from_date": {"type": "string", "description": "Date to start searching (optional)"}, "to_date": {"type": "string", "description": "Date to finish the search (optional)"}, "sender": {"type": "string", "description": "Email caller address (optional)"}}, "required": ["keyword"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the account number."}, "acceptable_arguments": null}
{"serial_num": 82, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Send some money to your brother."}, {"role": "assistant", "content": "Please tell me the bank name, account number, and money to be transferred."}, {"role": "user", "content": "8,000 won to Kakao Bank account."}], "input_tools": [{"type": "function", "function": {"name": "calculateBMR", "description": "Basal metabolic rate calculation", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}, "height": {"type": "number", "description": "Centimeter key"}, "age": {"type": "integer", "description": "age"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["weight", "height", "age", "gender"]}}}, {"type": "function", "function": {"name": "getCurrentKoreaTime", "description": "Currently, the time of Korea is returned to year-month-day: minor: second format.", "parameters": {}}}, {"type": "function", "function": {"name": "transferMoney", "description": "Send money to a specific account.", "parameters": {"type": "object", "properties": {"receiver_bank": {"type": "string", "description": "Bank"}, "receiver_account": {"type": "string", "description": "Account number to send"}, "amount": {"type": "number", "description": "Missing money (unit: krw))"}}, "required": ["receiver_bank", "receiver_account", "amount"]}}}, {"type": "function", "function": {"name": "create_user", "description": "Create a new user account.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "User's name"}, "email": {"type": "string", "description": "User's email address"}, "password": {"type": "string", "description": "User's password"}}, "required": ["name", "email", "password"]}}}, {"type": "function", "function": {"name": "search_email_content", "description": "Search for emails containing keywords specified by the user during the saved email.", "parameters": {"type": "object", "properties": {"keyword": {"type": "string", "description": "Keyword to search"}, "from_date": {"type": "string", "description": "Date to start searching (optional)"}, "to_date": {"type": "string", "description": "Date to finish the search (optional)"}, "sender": {"type": "string", "description": "Email caller address (optional)"}}, "required": ["keyword"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the account number."}, "acceptable_arguments": null}
{"serial_num": 83, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Send some money to your brother."}, {"role": "assistant", "content": "Please tell me the bank name, account number, and money to be transferred."}, {"role": "user", "content": "890-123-456 You can send 8,000 won here."}], "input_tools": [{"type": "function", "function": {"name": "calculateBMR", "description": "Basal metabolic rate calculation", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}, "height": {"type": "number", "description": "Centimeter key"}, "age": {"type": "integer", "description": "age"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["weight", "height", "age", "gender"]}}}, {"type": "function", "function": {"name": "getCurrentKoreaTime", "description": "Currently, the time of Korea is returned to year-month-day: minor: second format.", "parameters": {}}}, {"type": "function", "function": {"name": "transferMoney", "description": "Send money to a specific account.", "parameters": {"type": "object", "properties": {"receiver_bank": {"type": "string", "description": "Bank"}, "receiver_account": {"type": "string", "description": "Account number to send"}, "amount": {"type": "number", "description": "Missing money (unit: krw))"}}, "required": ["receiver_bank", "receiver_account", "amount"]}}}, {"type": "function", "function": {"name": "create_user", "description": "Create a new user account.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "User's name"}, "email": {"type": "string", "description": "User's email address"}, "password": {"type": "string", "description": "User's password"}}, "required": ["name", "email", "password"]}}}, {"type": "function", "function": {"name": "search_email_content", "description": "Search for emails containing keywords specified by the user during the saved email.", "parameters": {"type": "object", "properties": {"keyword": {"type": "string", "description": "Keyword to search"}, "from_date": {"type": "string", "description": "Date to start searching (optional)"}, "to_date": {"type": "string", "description": "Date to finish the search (optional)"}, "sender": {"type": "string", "description": "Email caller address (optional)"}}, "required": ["keyword"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the bank name of the bank to send."}, "acceptable_arguments": null}
{"serial_num": 84, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Send some money to your brother."}, {"role": "assistant", "content": "Please tell me the bank name, account number, and money to be transferred."}, {"role": "user", "content": "Send 8,000 won. 890-123-456 You can send it here."}], "input_tools": [{"type": "function", "function": {"name": "calculateBMR", "description": "Basal metabolic rate calculation", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}, "height": {"type": "number", "description": "Centimeter key"}, "age": {"type": "integer", "description": "age"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["weight", "height", "age", "gender"]}}}, {"type": "function", "function": {"name": "getCurrentKoreaTime", "description": "Currently, the time of Korea is returned to year-month-day: minor: second format.", "parameters": {}}}, {"type": "function", "function": {"name": "transferMoney", "description": "Send money to a specific account.", "parameters": {"type": "object", "properties": {"receiver_bank": {"type": "string", "description": "Bank"}, "receiver_account": {"type": "string", "description": "Account number to send"}, "amount": {"type": "number", "description": "Missing money (unit: krw))"}}, "required": ["receiver_bank", "receiver_account", "amount"]}}}, {"type": "function", "function": {"name": "create_user", "description": "Create a new user account.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "User's name"}, "email": {"type": "string", "description": "User's email address"}, "password": {"type": "string", "description": "User's password"}}, "required": ["name", "email", "password"]}}}, {"type": "function", "function": {"name": "search_email_content", "description": "Search for emails containing keywords specified by the user during the saved email.", "parameters": {"type": "object", "properties": {"keyword": {"type": "string", "description": "Keyword to search"}, "from_date": {"type": "string", "description": "Date to start searching (optional)"}, "to_date": {"type": "string", "description": "Date to finish the search (optional)"}, "sender": {"type": "string", "description": "Email caller address (optional)"}}, "required": ["keyword"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the bank name of the bank to send."}, "acceptable_arguments": null}
{"serial_num": 85, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Send some money to your brother Kakao Bank account."}, {"role": "assistant", "content": "Please tell me the account number to be transferred and the amount to be remitted."}, {"role": "user", "content": "890-123-456 Send here."}], "input_tools": [{"type": "function", "function": {"name": "calculateBMR", "description": "Basal metabolic rate calculation", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}, "height": {"type": "number", "description": "Centimeter key"}, "age": {"type": "integer", "description": "age"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["weight", "height", "age", "gender"]}}}, {"type": "function", "function": {"name": "getCurrentKoreaTime", "description": "Currently, the time of Korea is returned to year-month-day: minor: second format.", "parameters": {}}}, {"type": "function", "function": {"name": "transferMoney", "description": "Send money to a specific account.", "parameters": {"type": "object", "properties": {"receiver_bank": {"type": "string", "description": "Bank"}, "receiver_account": {"type": "string", "description": "Account number to send"}, "amount": {"type": "number", "description": "Missing money (unit: krw))"}}, "required": ["receiver_bank", "receiver_account", "amount"]}}}, {"type": "function", "function": {"name": "create_user", "description": "Create a new user account.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "User's name"}, "email": {"type": "string", "description": "User's email address"}, "password": {"type": "string", "description": "User's password"}}, "required": ["name", "email", "password"]}}}, {"type": "function", "function": {"name": "search_email_content", "description": "Search for emails containing keywords specified by the user during the saved email.", "parameters": {"type": "object", "properties": {"keyword": {"type": "string", "description": "Keyword to search"}, "from_date": {"type": "string", "description": "Date to start searching (optional)"}, "to_date": {"type": "string", "description": "Date to finish the search (optional)"}, "sender": {"type": "string", "description": "Email caller address (optional)"}}, "required": ["keyword"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the amount to send."}, "acceptable_arguments": null}
{"serial_num": 86, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "890-123-456 Send some money here."}, {"role": "assistant", "content": "Please tell me the bank name and money to send money."}, {"role": "user", "content": "Send my brother to Kakao Bank account."}], "input_tools": [{"type": "function", "function": {"name": "calculateBMR", "description": "Basal metabolic rate calculation", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}, "height": {"type": "number", "description": "Centimeter key"}, "age": {"type": "integer", "description": "age"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["weight", "height", "age", "gender"]}}}, {"type": "function", "function": {"name": "getCurrentKoreaTime", "description": "Currently, the time of Korea is returned to year-month-day: minor: second format.", "parameters": {}}}, {"type": "function", "function": {"name": "transferMoney", "description": "Send money to a specific account.", "parameters": {"type": "object", "properties": {"receiver_bank": {"type": "string", "description": "Bank"}, "receiver_account": {"type": "string", "description": "Account number to send"}, "amount": {"type": "number", "description": "Missing money (unit: krw))"}}, "required": ["receiver_bank", "receiver_account", "amount"]}}}, {"type": "function", "function": {"name": "create_user", "description": "Create a new user account.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "User's name"}, "email": {"type": "string", "description": "User's email address"}, "password": {"type": "string", "description": "User's password"}}, "required": ["name", "email", "password"]}}}, {"type": "function", "function": {"name": "search_email_content", "description": "Search for emails containing keywords specified by the user during the saved email.", "parameters": {"type": "object", "properties": {"keyword": {"type": "string", "description": "Keyword to search"}, "from_date": {"type": "string", "description": "Date to start searching (optional)"}, "to_date": {"type": "string", "description": "Date to finish the search (optional)"}, "sender": {"type": "string", "description": "Email caller address (optional)"}}, "required": ["keyword"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the amount to send."}, "acceptable_arguments": null}
{"serial_num": 87, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Send some money to your brother Kakao Bank account."}, {"role": "assistant", "content": "Please tell me the account number to be transferred and the amount to be remitted."}, {"role": "user", "content": "Send 8,000 won."}], "input_tools": [{"type": "function", "function": {"name": "calculateBMR", "description": "Basal metabolic rate calculation", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}, "height": {"type": "number", "description": "Centimeter key"}, "age": {"type": "integer", "description": "age"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["weight", "height", "age", "gender"]}}}, {"type": "function", "function": {"name": "getCurrentKoreaTime", "description": "Currently, the time of Korea is returned to year-month-day: minor: second format.", "parameters": {}}}, {"type": "function", "function": {"name": "transferMoney", "description": "Send money to a specific account.", "parameters": {"type": "object", "properties": {"receiver_bank": {"type": "string", "description": "Bank"}, "receiver_account": {"type": "string", "description": "Account number to send"}, "amount": {"type": "number", "description": "Missing money (unit: krw))"}}, "required": ["receiver_bank", "receiver_account", "amount"]}}}, {"type": "function", "function": {"name": "create_user", "description": "Create a new user account.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "User's name"}, "email": {"type": "string", "description": "User's email address"}, "password": {"type": "string", "description": "User's password"}}, "required": ["name", "email", "password"]}}}, {"type": "function", "function": {"name": "search_email_content", "description": "Search for emails containing keywords specified by the user during the saved email.", "parameters": {"type": "object", "properties": {"keyword": {"type": "string", "description": "Keyword to search"}, "from_date": {"type": "string", "description": "Date to start searching (optional)"}, "to_date": {"type": "string", "description": "Date to finish the search (optional)"}, "sender": {"type": "string", "description": "Email caller address (optional)"}}, "required": ["keyword"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the account number to send."}, "acceptable_arguments": null}
{"serial_num": 88, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Send 8,000 won to your brother."}, {"role": "assistant", "content": "Please tell me the bank name and account number of the account to be sent."}, {"role": "user", "content": "Kakao Bank"}], "input_tools": [{"type": "function", "function": {"name": "calculateBMR", "description": "Basal metabolic rate calculation", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}, "height": {"type": "number", "description": "Centimeter key"}, "age": {"type": "integer", "description": "age"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["weight", "height", "age", "gender"]}}}, {"type": "function", "function": {"name": "getCurrentKoreaTime", "description": "Currently, the time of Korea is returned to year-month-day: minor: second format.", "parameters": {}}}, {"type": "function", "function": {"name": "transferMoney", "description": "Send money to a specific account.", "parameters": {"type": "object", "properties": {"receiver_bank": {"type": "string", "description": "Bank"}, "receiver_account": {"type": "string", "description": "Account number to send"}, "amount": {"type": "number", "description": "Missing money (unit: krw))"}}, "required": ["receiver_bank", "receiver_account", "amount"]}}}, {"type": "function", "function": {"name": "create_user", "description": "Create a new user account.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "User's name"}, "email": {"type": "string", "description": "User's email address"}, "password": {"type": "string", "description": "User's password"}}, "required": ["name", "email", "password"]}}}, {"type": "function", "function": {"name": "search_email_content", "description": "Search for emails containing keywords specified by the user during the saved email.", "parameters": {"type": "object", "properties": {"keyword": {"type": "string", "description": "Keyword to search"}, "from_date": {"type": "string", "description": "Date to start searching (optional)"}, "to_date": {"type": "string", "description": "Date to finish the search (optional)"}, "sender": {"type": "string", "description": "Email caller address (optional)"}}, "required": ["keyword"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the account number to send."}, "acceptable_arguments": null}
{"serial_num": 89, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "890-123-456 Send some money here."}, {"role": "assistant", "content": "Please tell me the bank name and money to send money."}, {"role": "user", "content": "Send 8,000 won."}], "input_tools": [{"type": "function", "function": {"name": "calculateBMR", "description": "Basal metabolic rate calculation", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}, "height": {"type": "number", "description": "Centimeter key"}, "age": {"type": "integer", "description": "age"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["weight", "height", "age", "gender"]}}}, {"type": "function", "function": {"name": "getCurrentKoreaTime", "description": "Currently, the time of Korea is returned to year-month-day: minor: second format.", "parameters": {}}}, {"type": "function", "function": {"name": "transferMoney", "description": "Send money to a specific account.", "parameters": {"type": "object", "properties": {"receiver_bank": {"type": "string", "description": "Bank"}, "receiver_account": {"type": "string", "description": "Account number to send"}, "amount": {"type": "number", "description": "Missing money (unit: krw))"}}, "required": ["receiver_bank", "receiver_account", "amount"]}}}, {"type": "function", "function": {"name": "create_user", "description": "Create a new user account.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "User's name"}, "email": {"type": "string", "description": "User's email address"}, "password": {"type": "string", "description": "User's password"}}, "required": ["name", "email", "password"]}}}, {"type": "function", "function": {"name": "search_email_content", "description": "Search for emails containing keywords specified by the user during the saved email.", "parameters": {"type": "object", "properties": {"keyword": {"type": "string", "description": "Keyword to search"}, "from_date": {"type": "string", "description": "Date to start searching (optional)"}, "to_date": {"type": "string", "description": "Date to finish the search (optional)"}, "sender": {"type": "string", "description": "Email caller address (optional)"}}, "required": ["keyword"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the bank name of the bank to send."}, "acceptable_arguments": null}
{"serial_num": 90, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Send 8,000 won to your brother."}, {"role": "assistant", "content": "Please tell me the bank name and account number of the account to be sent."}, {"role": "user", "content": "890-123-456"}], "input_tools": [{"type": "function", "function": {"name": "calculateBMR", "description": "Basal metabolic rate calculation", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}, "height": {"type": "number", "description": "Centimeter key"}, "age": {"type": "integer", "description": "age"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["weight", "height", "age", "gender"]}}}, {"type": "function", "function": {"name": "getCurrentKoreaTime", "description": "Currently, the time of Korea is returned to year-month-day: minor: second format.", "parameters": {}}}, {"type": "function", "function": {"name": "transferMoney", "description": "Send money to a specific account.", "parameters": {"type": "object", "properties": {"receiver_bank": {"type": "string", "description": "Bank"}, "receiver_account": {"type": "string", "description": "Account number to send"}, "amount": {"type": "number", "description": "Missing money (unit: krw))"}}, "required": ["receiver_bank", "receiver_account", "amount"]}}}, {"type": "function", "function": {"name": "create_user", "description": "Create a new user account.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "User's name"}, "email": {"type": "string", "description": "User's email address"}, "password": {"type": "string", "description": "User's password"}}, "required": ["name", "email", "password"]}}}, {"type": "function", "function": {"name": "search_email_content", "description": "Search for emails containing keywords specified by the user during the saved email.", "parameters": {"type": "object", "properties": {"keyword": {"type": "string", "description": "Keyword to search"}, "from_date": {"type": "string", "description": "Date to start searching (optional)"}, "to_date": {"type": "string", "description": "Date to finish the search (optional)"}, "sender": {"type": "string", "description": "Email caller address (optional)"}}, "required": ["keyword"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the bank name of the bank to send."}, "acceptable_arguments": null}
{"serial_num": 91, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Send some money to your brother."}, {"role": "assistant", "content": "Please tell me the bank name, account number, and money to be transferred."}, {"role": "user", "content": "His brother Kakao Bank account."}, {"role": "assistant", "content": "Please tell me the account number to be transferred and the amount to be remitted."}, {"role": "user", "content": "890-123-456 Send here."}], "input_tools": [{"type": "function", "function": {"name": "calculateBMR", "description": "Basal metabolic rate calculation", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}, "height": {"type": "number", "description": "Centimeter key"}, "age": {"type": "integer", "description": "age"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["weight", "height", "age", "gender"]}}}, {"type": "function", "function": {"name": "getCurrentKoreaTime", "description": "Currently, the time of Korea is returned to year-month-day: minor: second format.", "parameters": {}}}, {"type": "function", "function": {"name": "transferMoney", "description": "Send money to a specific account.", "parameters": {"type": "object", "properties": {"receiver_bank": {"type": "string", "description": "Bank"}, "receiver_account": {"type": "string", "description": "Account number to send"}, "amount": {"type": "number", "description": "Missing money (unit: krw))"}}, "required": ["receiver_bank", "receiver_account", "amount"]}}}, {"type": "function", "function": {"name": "create_user", "description": "Create a new user account.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "User's name"}, "email": {"type": "string", "description": "User's email address"}, "password": {"type": "string", "description": "User's password"}}, "required": ["name", "email", "password"]}}}, {"type": "function", "function": {"name": "search_email_content", "description": "Search for emails containing keywords specified by the user during the saved email.", "parameters": {"type": "object", "properties": {"keyword": {"type": "string", "description": "Keyword to search"}, "from_date": {"type": "string", "description": "Date to start searching (optional)"}, "to_date": {"type": "string", "description": "Date to finish the search (optional)"}, "sender": {"type": "string", "description": "Email caller address (optional)"}}, "required": ["keyword"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the amount to send."}, "acceptable_arguments": null}
{"serial_num": 92, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Send some money to your brother."}, {"role": "assistant", "content": "Please tell me the bank name, account number, and money to be transferred."}, {"role": "user", "content": "890-123-456"}, {"role": "assistant", "content": "Please tell me the bank name and money to send money."}, {"role": "user", "content": "Send my brother to Kakao Bank account."}], "input_tools": [{"type": "function", "function": {"name": "calculateBMR", "description": "Basal metabolic rate calculation", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}, "height": {"type": "number", "description": "Centimeter key"}, "age": {"type": "integer", "description": "age"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["weight", "height", "age", "gender"]}}}, {"type": "function", "function": {"name": "getCurrentKoreaTime", "description": "Currently, the time of Korea is returned to year-month-day: minor: second format.", "parameters": {}}}, {"type": "function", "function": {"name": "transferMoney", "description": "Send money to a specific account.", "parameters": {"type": "object", "properties": {"receiver_bank": {"type": "string", "description": "Bank"}, "receiver_account": {"type": "string", "description": "Account number to send"}, "amount": {"type": "number", "description": "Missing money (unit: krw))"}}, "required": ["receiver_bank", "receiver_account", "amount"]}}}, {"type": "function", "function": {"name": "create_user", "description": "Create a new user account.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "User's name"}, "email": {"type": "string", "description": "User's email address"}, "password": {"type": "string", "description": "User's password"}}, "required": ["name", "email", "password"]}}}, {"type": "function", "function": {"name": "search_email_content", "description": "Search for emails containing keywords specified by the user during the saved email.", "parameters": {"type": "object", "properties": {"keyword": {"type": "string", "description": "Keyword to search"}, "from_date": {"type": "string", "description": "Date to start searching (optional)"}, "to_date": {"type": "string", "description": "Date to finish the search (optional)"}, "sender": {"type": "string", "description": "Email caller address (optional)"}}, "required": ["keyword"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the amount to send."}, "acceptable_arguments": null}
{"serial_num": 93, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Send some money to your brother."}, {"role": "assistant", "content": "Please tell me the bank name, account number, and money to be transferred."}, {"role": "user", "content": "Send my brother to Kakao Bank account."}, {"role": "assistant", "content": "Please tell me the account number to be transferred and the amount to be remitted."}, {"role": "user", "content": "Send 8,000 won."}], "input_tools": [{"type": "function", "function": {"name": "calculateBMR", "description": "Basal metabolic rate calculation", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}, "height": {"type": "number", "description": "Centimeter key"}, "age": {"type": "integer", "description": "age"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["weight", "height", "age", "gender"]}}}, {"type": "function", "function": {"name": "getCurrentKoreaTime", "description": "Currently, the time of Korea is returned to year-month-day: minor: second format.", "parameters": {}}}, {"type": "function", "function": {"name": "transferMoney", "description": "Send money to a specific account.", "parameters": {"type": "object", "properties": {"receiver_bank": {"type": "string", "description": "Bank"}, "receiver_account": {"type": "string", "description": "Account number to send"}, "amount": {"type": "number", "description": "Missing money (unit: krw))"}}, "required": ["receiver_bank", "receiver_account", "amount"]}}}, {"type": "function", "function": {"name": "create_user", "description": "Create a new user account.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "User's name"}, "email": {"type": "string", "description": "User's email address"}, "password": {"type": "string", "description": "User's password"}}, "required": ["name", "email", "password"]}}}, {"type": "function", "function": {"name": "search_email_content", "description": "Search for emails containing keywords specified by the user during the saved email.", "parameters": {"type": "object", "properties": {"keyword": {"type": "string", "description": "Keyword to search"}, "from_date": {"type": "string", "description": "Date to start searching (optional)"}, "to_date": {"type": "string", "description": "Date to finish the search (optional)"}, "sender": {"type": "string", "description": "Email caller address (optional)"}}, "required": ["keyword"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the account number to send."}, "acceptable_arguments": null}
{"serial_num": 94, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Send some money to your brother."}, {"role": "assistant", "content": "Please tell me the bank name, account number, and money to be transferred."}, {"role": "user", "content": "Send 8,000 won."}, {"role": "assistant", "content": "Please tell me the bank name and account number of the account to be sent."}, {"role": "user", "content": "Kakao Bank"}], "input_tools": [{"type": "function", "function": {"name": "calculateBMR", "description": "Basal metabolic rate calculation", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}, "height": {"type": "number", "description": "Centimeter key"}, "age": {"type": "integer", "description": "age"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["weight", "height", "age", "gender"]}}}, {"type": "function", "function": {"name": "getCurrentKoreaTime", "description": "Currently, the time of Korea is returned to year-month-day: minor: second format.", "parameters": {}}}, {"type": "function", "function": {"name": "transferMoney", "description": "Send money to a specific account.", "parameters": {"type": "object", "properties": {"receiver_bank": {"type": "string", "description": "Bank"}, "receiver_account": {"type": "string", "description": "Account number to send"}, "amount": {"type": "number", "description": "Missing money (unit: krw))"}}, "required": ["receiver_bank", "receiver_account", "amount"]}}}, {"type": "function", "function": {"name": "create_user", "description": "Create a new user account.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "User's name"}, "email": {"type": "string", "description": "User's email address"}, "password": {"type": "string", "description": "User's password"}}, "required": ["name", "email", "password"]}}}, {"type": "function", "function": {"name": "search_email_content", "description": "Search for emails containing keywords specified by the user during the saved email.", "parameters": {"type": "object", "properties": {"keyword": {"type": "string", "description": "Keyword to search"}, "from_date": {"type": "string", "description": "Date to start searching (optional)"}, "to_date": {"type": "string", "description": "Date to finish the search (optional)"}, "sender": {"type": "string", "description": "Email caller address (optional)"}}, "required": ["keyword"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the account number to send."}, "acceptable_arguments": null}
{"serial_num": 95, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Send some money to your brother."}, {"role": "assistant", "content": "Please tell me the bank name, account number, and money to be transferred."}, {"role": "user", "content": "The account number is 890-123-456"}, {"role": "assistant", "content": "Please tell me the bank name and money to send money."}, {"role": "user", "content": "Send 8,000 won."}], "input_tools": [{"type": "function", "function": {"name": "calculateBMR", "description": "Basal metabolic rate calculation", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}, "height": {"type": "number", "description": "Centimeter key"}, "age": {"type": "integer", "description": "age"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["weight", "height", "age", "gender"]}}}, {"type": "function", "function": {"name": "getCurrentKoreaTime", "description": "Currently, the time of Korea is returned to year-month-day: minor: second format.", "parameters": {}}}, {"type": "function", "function": {"name": "transferMoney", "description": "Send money to a specific account.", "parameters": {"type": "object", "properties": {"receiver_bank": {"type": "string", "description": "Bank"}, "receiver_account": {"type": "string", "description": "Account number to send"}, "amount": {"type": "number", "description": "Missing money (unit: krw))"}}, "required": ["receiver_bank", "receiver_account", "amount"]}}}, {"type": "function", "function": {"name": "create_user", "description": "Create a new user account.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "User's name"}, "email": {"type": "string", "description": "User's email address"}, "password": {"type": "string", "description": "User's password"}}, "required": ["name", "email", "password"]}}}, {"type": "function", "function": {"name": "search_email_content", "description": "Search for emails containing keywords specified by the user during the saved email.", "parameters": {"type": "object", "properties": {"keyword": {"type": "string", "description": "Keyword to search"}, "from_date": {"type": "string", "description": "Date to start searching (optional)"}, "to_date": {"type": "string", "description": "Date to finish the search (optional)"}, "sender": {"type": "string", "description": "Email caller address (optional)"}}, "required": ["keyword"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the bank name of the bank to send."}, "acceptable_arguments": null}
{"serial_num": 96, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Send some money to your brother."}, {"role": "assistant", "content": "Please tell me the bank name, account number, and money to be transferred."}, {"role": "user", "content": "Send 8,000 won."}, {"role": "assistant", "content": "Please tell me the bank name and account number of the account to be sent."}, {"role": "user", "content": "890-123-456"}], "input_tools": [{"type": "function", "function": {"name": "calculateBMR", "description": "Basal metabolic rate calculation", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}, "height": {"type": "number", "description": "Centimeter key"}, "age": {"type": "integer", "description": "age"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["weight", "height", "age", "gender"]}}}, {"type": "function", "function": {"name": "getCurrentKoreaTime", "description": "Currently, the time of Korea is returned to year-month-day: minor: second format.", "parameters": {}}}, {"type": "function", "function": {"name": "transferMoney", "description": "Send money to a specific account.", "parameters": {"type": "object", "properties": {"receiver_bank": {"type": "string", "description": "Bank"}, "receiver_account": {"type": "string", "description": "Account number to send"}, "amount": {"type": "number", "description": "Missing money (unit: krw))"}}, "required": ["receiver_bank", "receiver_account", "amount"]}}}, {"type": "function", "function": {"name": "create_user", "description": "Create a new user account.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "User's name"}, "email": {"type": "string", "description": "User's email address"}, "password": {"type": "string", "description": "User's password"}}, "required": ["name", "email", "password"]}}}, {"type": "function", "function": {"name": "search_email_content", "description": "Search for emails containing keywords specified by the user during the saved email.", "parameters": {"type": "object", "properties": {"keyword": {"type": "string", "description": "Keyword to search"}, "from_date": {"type": "string", "description": "Date to start searching (optional)"}, "to_date": {"type": "string", "description": "Date to finish the search (optional)"}, "sender": {"type": "string", "description": "Email caller address (optional)"}}, "required": ["keyword"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the bank name of the bank to send."}, "acceptable_arguments": null}
{"serial_num": 97, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Can I order? I'm trying to order Bulgogi pizza."}], "input_tools": [{"type": "function", "function": {"name": "convert_euro_to_koruna", "description": "Convert the Given EUR amount to Czech Coruna (CZK)", "parameters": {"type": "object", "properties": {"amount_euro": {"type": "number", "description": "EUR amount to convert"}, "exchange_rate_eur_to_czk": {"type": "number", "description": "Exchange rate from EUR to CZK"}}, "required": ["amount_euro", "exchange_rate_eur_to_czk"]}}}, {"type": "function", "function": {"name": "getCurrentTopSeries", "description": "We offer the current popular TV series rankings", "parameters": {"type": "object", "properties": {}, "required": []}}}, {"type": "function", "function": {"name": "OrderPizza", "description": "Order pizza.", "parameters": {"type": "object", "properties": {"PizzaType": {"type": "string", "description": "Pizza"}, "size": {"type": "string", "description": "Pizza size (extracted as it is, example: Small, L, Medium, etc.)"}, "quantity": {"type": "integer", "description": "Order quantity"}}, "required": ["PizzaType", "size", "quantity"]}}}, {"type": "function", "function": {"name": "calculateCaloricNeeds", "description": "A function that estimates the average daily calorie consumption", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}, "height": {"type": "number", "description": "Centimeter key"}, "age": {"type": "integer", "description": "age"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["weight", "height", "age", "gender"]}}}, {"type": "function", "function": {"name": "convert_pyeong_to_squaremeter", "description": "Convert it to \"평\"을 입력받아서, \"제곱미터\".", "parameters": {"type": "object", "properties": {"pyeong": {"type": "number", "description": "Pyeongsu to be transformed"}}, "required": ["pyeong"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell us the pizza size and order quantity."}, "acceptable_arguments": null}
{"serial_num": 98, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Can I order? I'm going to order pizza Large."}], "input_tools": [{"type": "function", "function": {"name": "convert_euro_to_koruna", "description": "Convert the Given EUR amount to Czech Coruna (CZK)", "parameters": {"type": "object", "properties": {"amount_euro": {"type": "number", "description": "EUR amount to convert"}, "exchange_rate_eur_to_czk": {"type": "number", "description": "Exchange rate from EUR to CZK"}}, "required": ["amount_euro", "exchange_rate_eur_to_czk"]}}}, {"type": "function", "function": {"name": "getCurrentTopSeries", "description": "We offer the current popular TV series rankings", "parameters": {"type": "object", "properties": {}, "required": []}}}, {"type": "function", "function": {"name": "OrderPizza", "description": "Order pizza.", "parameters": {"type": "object", "properties": {"PizzaType": {"type": "string", "description": "Pizza"}, "size": {"type": "string", "description": "Pizza size (extracted as it is, example: Small, L, Medium, etc.)"}, "quantity": {"type": "integer", "description": "Order quantity"}}, "required": ["PizzaType", "size", "quantity"]}}}, {"type": "function", "function": {"name": "calculateCaloricNeeds", "description": "A function that estimates the average daily calorie consumption", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}, "height": {"type": "number", "description": "Centimeter key"}, "age": {"type": "integer", "description": "age"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["weight", "height", "age", "gender"]}}}, {"type": "function", "function": {"name": "convert_pyeong_to_squaremeter", "description": "Convert it to \"평\"을 입력받아서, \"제곱미터\".", "parameters": {"type": "object", "properties": {"pyeong": {"type": "number", "description": "Pyeongsu to be transformed"}}, "required": ["pyeong"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell us the type and order quantity."}, "acceptable_arguments": null}
{"serial_num": 99, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Can I order? I'm going to order the first edition of pizza."}], "input_tools": [{"type": "function", "function": {"name": "convert_euro_to_koruna", "description": "Convert the Given EUR amount to Czech Coruna (CZK)", "parameters": {"type": "object", "properties": {"amount_euro": {"type": "number", "description": "EUR amount to convert"}, "exchange_rate_eur_to_czk": {"type": "number", "description": "Exchange rate from EUR to CZK"}}, "required": ["amount_euro", "exchange_rate_eur_to_czk"]}}}, {"type": "function", "function": {"name": "getCurrentTopSeries", "description": "We offer the current popular TV series rankings", "parameters": {"type": "object", "properties": {}, "required": []}}}, {"type": "function", "function": {"name": "OrderPizza", "description": "Order pizza.", "parameters": {"type": "object", "properties": {"PizzaType": {"type": "string", "description": "Pizza"}, "size": {"type": "string", "description": "Pizza size (extracted as it is, example: Small, L, Medium, etc.)"}, "quantity": {"type": "integer", "description": "Order quantity"}}, "required": ["PizzaType", "size", "quantity"]}}}, {"type": "function", "function": {"name": "calculateCaloricNeeds", "description": "A function that estimates the average daily calorie consumption", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}, "height": {"type": "number", "description": "Centimeter key"}, "age": {"type": "integer", "description": "age"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["weight", "height", "age", "gender"]}}}, {"type": "function", "function": {"name": "convert_pyeong_to_squaremeter", "description": "Convert it to \"평\"을 입력받아서, \"제곱미터\".", "parameters": {"type": "object", "properties": {"pyeong": {"type": "number", "description": "Pyeongsu to be transformed"}}, "required": ["pyeong"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the type of pizza and pizza size."}, "acceptable_arguments": null}
{"serial_num": 100, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Can I order? I'm trying to order pizza."}, {"role": "assistant", "content": "Please tell me the type of pizza, the size of the pizza, and the order quantity."}, {"role": "user", "content": "I want to order Bulgogi pizza."}], "input_tools": [{"type": "function", "function": {"name": "convert_euro_to_koruna", "description": "Convert the Given EUR amount to Czech Coruna (CZK)", "parameters": {"type": "object", "properties": {"amount_euro": {"type": "number", "description": "EUR amount to convert"}, "exchange_rate_eur_to_czk": {"type": "number", "description": "Exchange rate from EUR to CZK"}}, "required": ["amount_euro", "exchange_rate_eur_to_czk"]}}}, {"type": "function", "function": {"name": "getCurrentTopSeries", "description": "We offer the current popular TV series rankings", "parameters": {"type": "object", "properties": {}, "required": []}}}, {"type": "function", "function": {"name": "OrderPizza", "description": "Order pizza.", "parameters": {"type": "object", "properties": {"PizzaType": {"type": "string", "description": "Pizza"}, "size": {"type": "string", "description": "Pizza size (extracted as it is, example: Small, L, Medium, etc.)"}, "quantity": {"type": "integer", "description": "Order quantity"}}, "required": ["PizzaType", "size", "quantity"]}}}, {"type": "function", "function": {"name": "calculateCaloricNeeds", "description": "A function that estimates the average daily calorie consumption", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}, "height": {"type": "number", "description": "Centimeter key"}, "age": {"type": "integer", "description": "age"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["weight", "height", "age", "gender"]}}}, {"type": "function", "function": {"name": "convert_pyeong_to_squaremeter", "description": "Convert it to \"평\"을 입력받아서, \"제곱미터\".", "parameters": {"type": "object", "properties": {"pyeong": {"type": "number", "description": "Pyeongsu to be transformed"}}, "required": ["pyeong"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell us the pizza size and order quantity."}, "acceptable_arguments": null}
{"serial_num": 101, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Can I order? I'm trying to order pizza."}, {"role": "assistant", "content": "Please tell me the type of pizza, the size of the pizza, and the order quantity."}, {"role": "user", "content": "I want to order pizza Large."}], "input_tools": [{"type": "function", "function": {"name": "convert_euro_to_koruna", "description": "Convert the Given EUR amount to Czech Coruna (CZK)", "parameters": {"type": "object", "properties": {"amount_euro": {"type": "number", "description": "EUR amount to convert"}, "exchange_rate_eur_to_czk": {"type": "number", "description": "Exchange rate from EUR to CZK"}}, "required": ["amount_euro", "exchange_rate_eur_to_czk"]}}}, {"type": "function", "function": {"name": "getCurrentTopSeries", "description": "We offer the current popular TV series rankings", "parameters": {"type": "object", "properties": {}, "required": []}}}, {"type": "function", "function": {"name": "OrderPizza", "description": "Order pizza.", "parameters": {"type": "object", "properties": {"PizzaType": {"type": "string", "description": "Pizza"}, "size": {"type": "string", "description": "Pizza size (extracted as it is, example: Small, L, Medium, etc.)"}, "quantity": {"type": "integer", "description": "Order quantity"}}, "required": ["PizzaType", "size", "quantity"]}}}, {"type": "function", "function": {"name": "calculateCaloricNeeds", "description": "A function that estimates the average daily calorie consumption", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}, "height": {"type": "number", "description": "Centimeter key"}, "age": {"type": "integer", "description": "age"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["weight", "height", "age", "gender"]}}}, {"type": "function", "function": {"name": "convert_pyeong_to_squaremeter", "description": "Convert it to \"평\"을 입력받아서, \"제곱미터\".", "parameters": {"type": "object", "properties": {"pyeong": {"type": "number", "description": "Pyeongsu to be transformed"}}, "required": ["pyeong"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell us the type and order quantity."}, "acceptable_arguments": null}
{"serial_num": 102, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Can I order? I'm trying to order pizza."}, {"role": "assistant", "content": "Please tell me the type of pizza, the size of the pizza, and the order quantity."}, {"role": "user", "content": "I will order the first edition of pizza."}], "input_tools": [{"type": "function", "function": {"name": "convert_euro_to_koruna", "description": "Convert the Given EUR amount to Czech Coruna (CZK)", "parameters": {"type": "object", "properties": {"amount_euro": {"type": "number", "description": "EUR amount to convert"}, "exchange_rate_eur_to_czk": {"type": "number", "description": "Exchange rate from EUR to CZK"}}, "required": ["amount_euro", "exchange_rate_eur_to_czk"]}}}, {"type": "function", "function": {"name": "getCurrentTopSeries", "description": "We offer the current popular TV series rankings", "parameters": {"type": "object", "properties": {}, "required": []}}}, {"type": "function", "function": {"name": "OrderPizza", "description": "Order pizza.", "parameters": {"type": "object", "properties": {"PizzaType": {"type": "string", "description": "Pizza"}, "size": {"type": "string", "description": "Pizza size (extracted as it is, example: Small, L, Medium, etc.)"}, "quantity": {"type": "integer", "description": "Order quantity"}}, "required": ["PizzaType", "size", "quantity"]}}}, {"type": "function", "function": {"name": "calculateCaloricNeeds", "description": "A function that estimates the average daily calorie consumption", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}, "height": {"type": "number", "description": "Centimeter key"}, "age": {"type": "integer", "description": "age"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["weight", "height", "age", "gender"]}}}, {"type": "function", "function": {"name": "convert_pyeong_to_squaremeter", "description": "Convert it to \"평\"을 입력받아서, \"제곱미터\".", "parameters": {"type": "object", "properties": {"pyeong": {"type": "number", "description": "Pyeongsu to be transformed"}}, "required": ["pyeong"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the type of pizza and pizza size."}, "acceptable_arguments": null}
{"serial_num": 103, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Can I order? I'm going to order Bulgogi Pizza Large."}], "input_tools": [{"type": "function", "function": {"name": "convert_euro_to_koruna", "description": "Convert the Given EUR amount to Czech Coruna (CZK)", "parameters": {"type": "object", "properties": {"amount_euro": {"type": "number", "description": "EUR amount to convert"}, "exchange_rate_eur_to_czk": {"type": "number", "description": "Exchange rate from EUR to CZK"}}, "required": ["amount_euro", "exchange_rate_eur_to_czk"]}}}, {"type": "function", "function": {"name": "getCurrentTopSeries", "description": "We offer the current popular TV series rankings", "parameters": {"type": "object", "properties": {}, "required": []}}}, {"type": "function", "function": {"name": "OrderPizza", "description": "Order pizza.", "parameters": {"type": "object", "properties": {"PizzaType": {"type": "string", "description": "Pizza"}, "size": {"type": "string", "description": "Pizza size (extracted as it is, example: Small, L, Medium, etc.)"}, "quantity": {"type": "integer", "description": "Order quantity"}}, "required": ["PizzaType", "size", "quantity"]}}}, {"type": "function", "function": {"name": "calculateCaloricNeeds", "description": "A function that estimates the average daily calorie consumption", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}, "height": {"type": "number", "description": "Centimeter key"}, "age": {"type": "integer", "description": "age"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["weight", "height", "age", "gender"]}}}, {"type": "function", "function": {"name": "convert_pyeong_to_squaremeter", "description": "Convert it to \"평\"을 입력받아서, \"제곱미터\".", "parameters": {"type": "object", "properties": {"pyeong": {"type": "number", "description": "Pyeongsu to be transformed"}}, "required": ["pyeong"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the order quantity."}, "acceptable_arguments": null}
{"serial_num": 104, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Can I order? I want to order Large. It's a pizza."}], "input_tools": [{"type": "function", "function": {"name": "convert_euro_to_koruna", "description": "Convert the Given EUR amount to Czech Coruna (CZK)", "parameters": {"type": "object", "properties": {"amount_euro": {"type": "number", "description": "EUR amount to convert"}, "exchange_rate_eur_to_czk": {"type": "number", "description": "Exchange rate from EUR to CZK"}}, "required": ["amount_euro", "exchange_rate_eur_to_czk"]}}}, {"type": "function", "function": {"name": "getCurrentTopSeries", "description": "We offer the current popular TV series rankings", "parameters": {"type": "object", "properties": {}, "required": []}}}, {"type": "function", "function": {"name": "OrderPizza", "description": "Order pizza.", "parameters": {"type": "object", "properties": {"PizzaType": {"type": "string", "description": "Pizza"}, "size": {"type": "string", "description": "Pizza size (extracted as it is, example: Small, L, Medium, etc.)"}, "quantity": {"type": "integer", "description": "Order quantity"}}, "required": ["PizzaType", "size", "quantity"]}}}, {"type": "function", "function": {"name": "calculateCaloricNeeds", "description": "A function that estimates the average daily calorie consumption", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}, "height": {"type": "number", "description": "Centimeter key"}, "age": {"type": "integer", "description": "age"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["weight", "height", "age", "gender"]}}}, {"type": "function", "function": {"name": "convert_pyeong_to_squaremeter", "description": "Convert it to \"평\"을 입력받아서, \"제곱미터\".", "parameters": {"type": "object", "properties": {"pyeong": {"type": "number", "description": "Pyeongsu to be transformed"}}, "required": ["pyeong"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the order quantity."}, "acceptable_arguments": null}
{"serial_num": 105, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Can I order? I'm going to order the first edition of Bulgogi Pizza."}], "input_tools": [{"type": "function", "function": {"name": "convert_euro_to_koruna", "description": "Convert the Given EUR amount to Czech Coruna (CZK)", "parameters": {"type": "object", "properties": {"amount_euro": {"type": "number", "description": "EUR amount to convert"}, "exchange_rate_eur_to_czk": {"type": "number", "description": "Exchange rate from EUR to CZK"}}, "required": ["amount_euro", "exchange_rate_eur_to_czk"]}}}, {"type": "function", "function": {"name": "getCurrentTopSeries", "description": "We offer the current popular TV series rankings", "parameters": {"type": "object", "properties": {}, "required": []}}}, {"type": "function", "function": {"name": "OrderPizza", "description": "Order pizza.", "parameters": {"type": "object", "properties": {"PizzaType": {"type": "string", "description": "Pizza"}, "size": {"type": "string", "description": "Pizza size (extracted as it is, example: Small, L, Medium, etc.)"}, "quantity": {"type": "integer", "description": "Order quantity"}}, "required": ["PizzaType", "size", "quantity"]}}}, {"type": "function", "function": {"name": "calculateCaloricNeeds", "description": "A function that estimates the average daily calorie consumption", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}, "height": {"type": "number", "description": "Centimeter key"}, "age": {"type": "integer", "description": "age"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["weight", "height", "age", "gender"]}}}, {"type": "function", "function": {"name": "convert_pyeong_to_squaremeter", "description": "Convert it to \"평\"을 입력받아서, \"제곱미터\".", "parameters": {"type": "object", "properties": {"pyeong": {"type": "number", "description": "Pyeongsu to be transformed"}}, "required": ["pyeong"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the size of the pizza."}, "acceptable_arguments": null}
{"serial_num": 106, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Can I order? I'm going to order pizza 1 bulgogi pizza."}], "input_tools": [{"type": "function", "function": {"name": "convert_euro_to_koruna", "description": "Convert the Given EUR amount to Czech Coruna (CZK)", "parameters": {"type": "object", "properties": {"amount_euro": {"type": "number", "description": "EUR amount to convert"}, "exchange_rate_eur_to_czk": {"type": "number", "description": "Exchange rate from EUR to CZK"}}, "required": ["amount_euro", "exchange_rate_eur_to_czk"]}}}, {"type": "function", "function": {"name": "getCurrentTopSeries", "description": "We offer the current popular TV series rankings", "parameters": {"type": "object", "properties": {}, "required": []}}}, {"type": "function", "function": {"name": "OrderPizza", "description": "Order pizza.", "parameters": {"type": "object", "properties": {"PizzaType": {"type": "string", "description": "Pizza"}, "size": {"type": "string", "description": "Pizza size (extracted as it is, example: Small, L, Medium, etc.)"}, "quantity": {"type": "integer", "description": "Order quantity"}}, "required": ["PizzaType", "size", "quantity"]}}}, {"type": "function", "function": {"name": "calculateCaloricNeeds", "description": "A function that estimates the average daily calorie consumption", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}, "height": {"type": "number", "description": "Centimeter key"}, "age": {"type": "integer", "description": "age"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["weight", "height", "age", "gender"]}}}, {"type": "function", "function": {"name": "convert_pyeong_to_squaremeter", "description": "Convert it to \"평\"을 입력받아서, \"제곱미터\".", "parameters": {"type": "object", "properties": {"pyeong": {"type": "number", "description": "Pyeongsu to be transformed"}}, "required": ["pyeong"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the size of the pizza."}, "acceptable_arguments": null}
{"serial_num": 107, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Is it possible to order pizza first edition?"}], "input_tools": [{"type": "function", "function": {"name": "convert_euro_to_koruna", "description": "Convert the Given EUR amount to Czech Coruna (CZK)", "parameters": {"type": "object", "properties": {"amount_euro": {"type": "number", "description": "EUR amount to convert"}, "exchange_rate_eur_to_czk": {"type": "number", "description": "Exchange rate from EUR to CZK"}}, "required": ["amount_euro", "exchange_rate_eur_to_czk"]}}}, {"type": "function", "function": {"name": "getCurrentTopSeries", "description": "We offer the current popular TV series rankings", "parameters": {"type": "object", "properties": {}, "required": []}}}, {"type": "function", "function": {"name": "OrderPizza", "description": "Order pizza.", "parameters": {"type": "object", "properties": {"PizzaType": {"type": "string", "description": "Pizza"}, "size": {"type": "string", "description": "Pizza size (extracted as it is, example: Small, L, Medium, etc.)"}, "quantity": {"type": "integer", "description": "Order quantity"}}, "required": ["PizzaType", "size", "quantity"]}}}, {"type": "function", "function": {"name": "calculateCaloricNeeds", "description": "A function that estimates the average daily calorie consumption", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}, "height": {"type": "number", "description": "Centimeter key"}, "age": {"type": "integer", "description": "age"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["weight", "height", "age", "gender"]}}}, {"type": "function", "function": {"name": "convert_pyeong_to_squaremeter", "description": "Convert it to \"평\"을 입력받아서, \"제곱미터\".", "parameters": {"type": "object", "properties": {"pyeong": {"type": "number", "description": "Pyeongsu to be transformed"}}, "required": ["pyeong"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the type of pizza."}, "acceptable_arguments": null}
{"serial_num": 108, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Can I order with a pizza 1?"}], "input_tools": [{"type": "function", "function": {"name": "convert_euro_to_koruna", "description": "Convert the Given EUR amount to Czech Coruna (CZK)", "parameters": {"type": "object", "properties": {"amount_euro": {"type": "number", "description": "EUR amount to convert"}, "exchange_rate_eur_to_czk": {"type": "number", "description": "Exchange rate from EUR to CZK"}}, "required": ["amount_euro", "exchange_rate_eur_to_czk"]}}}, {"type": "function", "function": {"name": "getCurrentTopSeries", "description": "We offer the current popular TV series rankings", "parameters": {"type": "object", "properties": {}, "required": []}}}, {"type": "function", "function": {"name": "OrderPizza", "description": "Order pizza.", "parameters": {"type": "object", "properties": {"PizzaType": {"type": "string", "description": "Pizza"}, "size": {"type": "string", "description": "Pizza size (extracted as it is, example: Small, L, Medium, etc.)"}, "quantity": {"type": "integer", "description": "Order quantity"}}, "required": ["PizzaType", "size", "quantity"]}}}, {"type": "function", "function": {"name": "calculateCaloricNeeds", "description": "A function that estimates the average daily calorie consumption", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}, "height": {"type": "number", "description": "Centimeter key"}, "age": {"type": "integer", "description": "age"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["weight", "height", "age", "gender"]}}}, {"type": "function", "function": {"name": "convert_pyeong_to_squaremeter", "description": "Convert it to \"평\"을 입력받아서, \"제곱미터\".", "parameters": {"type": "object", "properties": {"pyeong": {"type": "number", "description": "Pyeongsu to be transformed"}}, "required": ["pyeong"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the type of pizza."}, "acceptable_arguments": null}
{"serial_num": 109, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Can I order? I'm trying to order pizza."}, {"role": "assistant", "content": "Please tell me the type of pizza, the size of the pizza, and the order quantity."}, {"role": "user", "content": "I'm going to order Bulgogi Pizza Large."}], "input_tools": [{"type": "function", "function": {"name": "convert_euro_to_koruna", "description": "Convert the Given EUR amount to Czech Coruna (CZK)", "parameters": {"type": "object", "properties": {"amount_euro": {"type": "number", "description": "EUR amount to convert"}, "exchange_rate_eur_to_czk": {"type": "number", "description": "Exchange rate from EUR to CZK"}}, "required": ["amount_euro", "exchange_rate_eur_to_czk"]}}}, {"type": "function", "function": {"name": "getCurrentTopSeries", "description": "We offer the current popular TV series rankings", "parameters": {"type": "object", "properties": {}, "required": []}}}, {"type": "function", "function": {"name": "OrderPizza", "description": "Order pizza.", "parameters": {"type": "object", "properties": {"PizzaType": {"type": "string", "description": "Pizza"}, "size": {"type": "string", "description": "Pizza size (extracted as it is, example: Small, L, Medium, etc.)"}, "quantity": {"type": "integer", "description": "Order quantity"}}, "required": ["PizzaType", "size", "quantity"]}}}, {"type": "function", "function": {"name": "calculateCaloricNeeds", "description": "A function that estimates the average daily calorie consumption", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}, "height": {"type": "number", "description": "Centimeter key"}, "age": {"type": "integer", "description": "age"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["weight", "height", "age", "gender"]}}}, {"type": "function", "function": {"name": "convert_pyeong_to_squaremeter", "description": "Convert it to \"평\"을 입력받아서, \"제곱미터\".", "parameters": {"type": "object", "properties": {"pyeong": {"type": "number", "description": "Pyeongsu to be transformed"}}, "required": ["pyeong"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the order quantity."}, "acceptable_arguments": null}
{"serial_num": 110, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Can I order? I'm trying to order pizza."}, {"role": "assistant", "content": "Please tell me the type of pizza, the size of the pizza, and the order quantity."}, {"role": "user", "content": "I want to order Large. It's a pizza."}], "input_tools": [{"type": "function", "function": {"name": "convert_euro_to_koruna", "description": "Convert the Given EUR amount to Czech Coruna (CZK)", "parameters": {"type": "object", "properties": {"amount_euro": {"type": "number", "description": "EUR amount to convert"}, "exchange_rate_eur_to_czk": {"type": "number", "description": "Exchange rate from EUR to CZK"}}, "required": ["amount_euro", "exchange_rate_eur_to_czk"]}}}, {"type": "function", "function": {"name": "getCurrentTopSeries", "description": "We offer the current popular TV series rankings", "parameters": {"type": "object", "properties": {}, "required": []}}}, {"type": "function", "function": {"name": "OrderPizza", "description": "Order pizza.", "parameters": {"type": "object", "properties": {"PizzaType": {"type": "string", "description": "Pizza"}, "size": {"type": "string", "description": "Pizza size (extracted as it is, example: Small, L, Medium, etc.)"}, "quantity": {"type": "integer", "description": "Order quantity"}}, "required": ["PizzaType", "size", "quantity"]}}}, {"type": "function", "function": {"name": "calculateCaloricNeeds", "description": "A function that estimates the average daily calorie consumption", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}, "height": {"type": "number", "description": "Centimeter key"}, "age": {"type": "integer", "description": "age"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["weight", "height", "age", "gender"]}}}, {"type": "function", "function": {"name": "convert_pyeong_to_squaremeter", "description": "Convert it to \"평\"을 입력받아서, \"제곱미터\".", "parameters": {"type": "object", "properties": {"pyeong": {"type": "number", "description": "Pyeongsu to be transformed"}}, "required": ["pyeong"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the order quantity."}, "acceptable_arguments": null}
{"serial_num": 111, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Can I order? I'm trying to order pizza."}, {"role": "assistant", "content": "Please tell me the type of pizza, the size of the pizza, and the order quantity."}, {"role": "user", "content": "Bulgogi Pizza 1."}], "input_tools": [{"type": "function", "function": {"name": "convert_euro_to_koruna", "description": "Convert the Given EUR amount to Czech Coruna (CZK)", "parameters": {"type": "object", "properties": {"amount_euro": {"type": "number", "description": "EUR amount to convert"}, "exchange_rate_eur_to_czk": {"type": "number", "description": "Exchange rate from EUR to CZK"}}, "required": ["amount_euro", "exchange_rate_eur_to_czk"]}}}, {"type": "function", "function": {"name": "getCurrentTopSeries", "description": "We offer the current popular TV series rankings", "parameters": {"type": "object", "properties": {}, "required": []}}}, {"type": "function", "function": {"name": "OrderPizza", "description": "Order pizza.", "parameters": {"type": "object", "properties": {"PizzaType": {"type": "string", "description": "Pizza"}, "size": {"type": "string", "description": "Pizza size (extracted as it is, example: Small, L, Medium, etc.)"}, "quantity": {"type": "integer", "description": "Order quantity"}}, "required": ["PizzaType", "size", "quantity"]}}}, {"type": "function", "function": {"name": "calculateCaloricNeeds", "description": "A function that estimates the average daily calorie consumption", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}, "height": {"type": "number", "description": "Centimeter key"}, "age": {"type": "integer", "description": "age"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["weight", "height", "age", "gender"]}}}, {"type": "function", "function": {"name": "convert_pyeong_to_squaremeter", "description": "Convert it to \"평\"을 입력받아서, \"제곱미터\".", "parameters": {"type": "object", "properties": {"pyeong": {"type": "number", "description": "Pyeongsu to be transformed"}}, "required": ["pyeong"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the size of the pizza."}, "acceptable_arguments": null}
{"serial_num": 112, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Can I order? I'm trying to order pizza."}, {"role": "assistant", "content": "Please tell me the type of pizza, the size of the pizza, and the order quantity."}, {"role": "user", "content": "Pizza 1 Bulgogi Pizza."}], "input_tools": [{"type": "function", "function": {"name": "convert_euro_to_koruna", "description": "Convert the Given EUR amount to Czech Coruna (CZK)", "parameters": {"type": "object", "properties": {"amount_euro": {"type": "number", "description": "EUR amount to convert"}, "exchange_rate_eur_to_czk": {"type": "number", "description": "Exchange rate from EUR to CZK"}}, "required": ["amount_euro", "exchange_rate_eur_to_czk"]}}}, {"type": "function", "function": {"name": "getCurrentTopSeries", "description": "We offer the current popular TV series rankings", "parameters": {"type": "object", "properties": {}, "required": []}}}, {"type": "function", "function": {"name": "OrderPizza", "description": "Order pizza.", "parameters": {"type": "object", "properties": {"PizzaType": {"type": "string", "description": "Pizza"}, "size": {"type": "string", "description": "Pizza size (extracted as it is, example: Small, L, Medium, etc.)"}, "quantity": {"type": "integer", "description": "Order quantity"}}, "required": ["PizzaType", "size", "quantity"]}}}, {"type": "function", "function": {"name": "calculateCaloricNeeds", "description": "A function that estimates the average daily calorie consumption", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}, "height": {"type": "number", "description": "Centimeter key"}, "age": {"type": "integer", "description": "age"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["weight", "height", "age", "gender"]}}}, {"type": "function", "function": {"name": "convert_pyeong_to_squaremeter", "description": "Convert it to \"평\"을 입력받아서, \"제곱미터\".", "parameters": {"type": "object", "properties": {"pyeong": {"type": "number", "description": "Pyeongsu to be transformed"}}, "required": ["pyeong"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the size of the pizza."}, "acceptable_arguments": null}
{"serial_num": 113, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Can I order? I'm trying to order pizza."}, {"role": "assistant", "content": "Please tell me the type of pizza, the size of the pizza, and the order quantity."}, {"role": "user", "content": "Large 1"}], "input_tools": [{"type": "function", "function": {"name": "convert_euro_to_koruna", "description": "Convert the Given EUR amount to Czech Coruna (CZK)", "parameters": {"type": "object", "properties": {"amount_euro": {"type": "number", "description": "EUR amount to convert"}, "exchange_rate_eur_to_czk": {"type": "number", "description": "Exchange rate from EUR to CZK"}}, "required": ["amount_euro", "exchange_rate_eur_to_czk"]}}}, {"type": "function", "function": {"name": "getCurrentTopSeries", "description": "We offer the current popular TV series rankings", "parameters": {"type": "object", "properties": {}, "required": []}}}, {"type": "function", "function": {"name": "OrderPizza", "description": "Order pizza.", "parameters": {"type": "object", "properties": {"PizzaType": {"type": "string", "description": "Pizza"}, "size": {"type": "string", "description": "Pizza size (extracted as it is, example: Small, L, Medium, etc.)"}, "quantity": {"type": "integer", "description": "Order quantity"}}, "required": ["PizzaType", "size", "quantity"]}}}, {"type": "function", "function": {"name": "calculateCaloricNeeds", "description": "A function that estimates the average daily calorie consumption", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}, "height": {"type": "number", "description": "Centimeter key"}, "age": {"type": "integer", "description": "age"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["weight", "height", "age", "gender"]}}}, {"type": "function", "function": {"name": "convert_pyeong_to_squaremeter", "description": "Convert it to \"평\"을 입력받아서, \"제곱미터\".", "parameters": {"type": "object", "properties": {"pyeong": {"type": "number", "description": "Pyeongsu to be transformed"}}, "required": ["pyeong"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the type of pizza."}, "acceptable_arguments": null}
{"serial_num": 114, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Can I order? I'm trying to order pizza."}, {"role": "assistant", "content": "Please tell me the type of pizza, the size of the pizza, and the order quantity."}, {"role": "user", "content": "Pizza 1 Large"}], "input_tools": [{"type": "function", "function": {"name": "convert_euro_to_koruna", "description": "Convert the Given EUR amount to Czech Coruna (CZK)", "parameters": {"type": "object", "properties": {"amount_euro": {"type": "number", "description": "EUR amount to convert"}, "exchange_rate_eur_to_czk": {"type": "number", "description": "Exchange rate from EUR to CZK"}}, "required": ["amount_euro", "exchange_rate_eur_to_czk"]}}}, {"type": "function", "function": {"name": "getCurrentTopSeries", "description": "We offer the current popular TV series rankings", "parameters": {"type": "object", "properties": {}, "required": []}}}, {"type": "function", "function": {"name": "OrderPizza", "description": "Order pizza.", "parameters": {"type": "object", "properties": {"PizzaType": {"type": "string", "description": "Pizza"}, "size": {"type": "string", "description": "Pizza size (extracted as it is, example: Small, L, Medium, etc.)"}, "quantity": {"type": "integer", "description": "Order quantity"}}, "required": ["PizzaType", "size", "quantity"]}}}, {"type": "function", "function": {"name": "calculateCaloricNeeds", "description": "A function that estimates the average daily calorie consumption", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}, "height": {"type": "number", "description": "Centimeter key"}, "age": {"type": "integer", "description": "age"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["weight", "height", "age", "gender"]}}}, {"type": "function", "function": {"name": "convert_pyeong_to_squaremeter", "description": "Convert it to \"평\"을 입력받아서, \"제곱미터\".", "parameters": {"type": "object", "properties": {"pyeong": {"type": "number", "description": "Pyeongsu to be transformed"}}, "required": ["pyeong"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the type of pizza."}, "acceptable_arguments": null}
{"serial_num": 115, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Can I order? I'm trying to order Bulgogi pizza."}, {"role": "assistant", "content": "Please tell us the pizza size and order quantity."}, {"role": "user", "content": "Large."}], "input_tools": [{"type": "function", "function": {"name": "convert_euro_to_koruna", "description": "Convert the Given EUR amount to Czech Coruna (CZK)", "parameters": {"type": "object", "properties": {"amount_euro": {"type": "number", "description": "EUR amount to convert"}, "exchange_rate_eur_to_czk": {"type": "number", "description": "Exchange rate from EUR to CZK"}}, "required": ["amount_euro", "exchange_rate_eur_to_czk"]}}}, {"type": "function", "function": {"name": "getCurrentTopSeries", "description": "We offer the current popular TV series rankings", "parameters": {"type": "object", "properties": {}, "required": []}}}, {"type": "function", "function": {"name": "OrderPizza", "description": "Order pizza.", "parameters": {"type": "object", "properties": {"PizzaType": {"type": "string", "description": "Pizza"}, "size": {"type": "string", "description": "Pizza size (extracted as it is, example: Small, L, Medium, etc.)"}, "quantity": {"type": "integer", "description": "Order quantity"}}, "required": ["PizzaType", "size", "quantity"]}}}, {"type": "function", "function": {"name": "calculateCaloricNeeds", "description": "A function that estimates the average daily calorie consumption", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}, "height": {"type": "number", "description": "Centimeter key"}, "age": {"type": "integer", "description": "age"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["weight", "height", "age", "gender"]}}}, {"type": "function", "function": {"name": "convert_pyeong_to_squaremeter", "description": "Convert it to \"평\"을 입력받아서, \"제곱미터\".", "parameters": {"type": "object", "properties": {"pyeong": {"type": "number", "description": "Pyeongsu to be transformed"}}, "required": ["pyeong"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the order quantity."}, "acceptable_arguments": null}
{"serial_num": 116, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Can I order? I'm going to order pizza Large."}, {"role": "assistant", "content": "Please tell us the type and order quantity."}, {"role": "user", "content": "Bulgogi pizza."}], "input_tools": [{"type": "function", "function": {"name": "convert_euro_to_koruna", "description": "Convert the Given EUR amount to Czech Coruna (CZK)", "parameters": {"type": "object", "properties": {"amount_euro": {"type": "number", "description": "EUR amount to convert"}, "exchange_rate_eur_to_czk": {"type": "number", "description": "Exchange rate from EUR to CZK"}}, "required": ["amount_euro", "exchange_rate_eur_to_czk"]}}}, {"type": "function", "function": {"name": "getCurrentTopSeries", "description": "We offer the current popular TV series rankings", "parameters": {"type": "object", "properties": {}, "required": []}}}, {"type": "function", "function": {"name": "OrderPizza", "description": "Order pizza.", "parameters": {"type": "object", "properties": {"PizzaType": {"type": "string", "description": "Pizza"}, "size": {"type": "string", "description": "Pizza size (extracted as it is, example: Small, L, Medium, etc.)"}, "quantity": {"type": "integer", "description": "Order quantity"}}, "required": ["PizzaType", "size", "quantity"]}}}, {"type": "function", "function": {"name": "calculateCaloricNeeds", "description": "A function that estimates the average daily calorie consumption", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}, "height": {"type": "number", "description": "Centimeter key"}, "age": {"type": "integer", "description": "age"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["weight", "height", "age", "gender"]}}}, {"type": "function", "function": {"name": "convert_pyeong_to_squaremeter", "description": "Convert it to \"평\"을 입력받아서, \"제곱미터\".", "parameters": {"type": "object", "properties": {"pyeong": {"type": "number", "description": "Pyeongsu to be transformed"}}, "required": ["pyeong"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the order quantity."}, "acceptable_arguments": null}
{"serial_num": 117, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Can I order? I'm trying to order Bulgogi pizza."}, {"role": "assistant", "content": "Please tell us the pizza size and order quantity."}, {"role": "user", "content": "1."}], "input_tools": [{"type": "function", "function": {"name": "convert_euro_to_koruna", "description": "Convert the Given EUR amount to Czech Coruna (CZK)", "parameters": {"type": "object", "properties": {"amount_euro": {"type": "number", "description": "EUR amount to convert"}, "exchange_rate_eur_to_czk": {"type": "number", "description": "Exchange rate from EUR to CZK"}}, "required": ["amount_euro", "exchange_rate_eur_to_czk"]}}}, {"type": "function", "function": {"name": "getCurrentTopSeries", "description": "We offer the current popular TV series rankings", "parameters": {"type": "object", "properties": {}, "required": []}}}, {"type": "function", "function": {"name": "OrderPizza", "description": "Order pizza.", "parameters": {"type": "object", "properties": {"PizzaType": {"type": "string", "description": "Pizza"}, "size": {"type": "string", "description": "Pizza size (extracted as it is, example: Small, L, Medium, etc.)"}, "quantity": {"type": "integer", "description": "Order quantity"}}, "required": ["PizzaType", "size", "quantity"]}}}, {"type": "function", "function": {"name": "calculateCaloricNeeds", "description": "A function that estimates the average daily calorie consumption", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}, "height": {"type": "number", "description": "Centimeter key"}, "age": {"type": "integer", "description": "age"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["weight", "height", "age", "gender"]}}}, {"type": "function", "function": {"name": "convert_pyeong_to_squaremeter", "description": "Convert it to \"평\"을 입력받아서, \"제곱미터\".", "parameters": {"type": "object", "properties": {"pyeong": {"type": "number", "description": "Pyeongsu to be transformed"}}, "required": ["pyeong"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the size of the pizza."}, "acceptable_arguments": null}
{"serial_num": 118, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Can I order? I'm going to order the first edition of pizza."}, {"role": "assistant", "content": "Please tell me the type of pizza and pizza size."}, {"role": "user", "content": "Bulgogi pizza."}], "input_tools": [{"type": "function", "function": {"name": "convert_euro_to_koruna", "description": "Convert the Given EUR amount to Czech Coruna (CZK)", "parameters": {"type": "object", "properties": {"amount_euro": {"type": "number", "description": "EUR amount to convert"}, "exchange_rate_eur_to_czk": {"type": "number", "description": "Exchange rate from EUR to CZK"}}, "required": ["amount_euro", "exchange_rate_eur_to_czk"]}}}, {"type": "function", "function": {"name": "getCurrentTopSeries", "description": "We offer the current popular TV series rankings", "parameters": {"type": "object", "properties": {}, "required": []}}}, {"type": "function", "function": {"name": "OrderPizza", "description": "Order pizza.", "parameters": {"type": "object", "properties": {"PizzaType": {"type": "string", "description": "Pizza"}, "size": {"type": "string", "description": "Pizza size (extracted as it is, example: Small, L, Medium, etc.)"}, "quantity": {"type": "integer", "description": "Order quantity"}}, "required": ["PizzaType", "size", "quantity"]}}}, {"type": "function", "function": {"name": "calculateCaloricNeeds", "description": "A function that estimates the average daily calorie consumption", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}, "height": {"type": "number", "description": "Centimeter key"}, "age": {"type": "integer", "description": "age"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["weight", "height", "age", "gender"]}}}, {"type": "function", "function": {"name": "convert_pyeong_to_squaremeter", "description": "Convert it to \"평\"을 입력받아서, \"제곱미터\".", "parameters": {"type": "object", "properties": {"pyeong": {"type": "number", "description": "Pyeongsu to be transformed"}}, "required": ["pyeong"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the size of the pizza."}, "acceptable_arguments": null}
{"serial_num": 119, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Can I order? I'm going to order pizza Large."}, {"role": "assistant", "content": "Please tell us the type and order quantity."}, {"role": "user", "content": "1."}], "input_tools": [{"type": "function", "function": {"name": "convert_euro_to_koruna", "description": "Convert the Given EUR amount to Czech Coruna (CZK)", "parameters": {"type": "object", "properties": {"amount_euro": {"type": "number", "description": "EUR amount to convert"}, "exchange_rate_eur_to_czk": {"type": "number", "description": "Exchange rate from EUR to CZK"}}, "required": ["amount_euro", "exchange_rate_eur_to_czk"]}}}, {"type": "function", "function": {"name": "getCurrentTopSeries", "description": "We offer the current popular TV series rankings", "parameters": {"type": "object", "properties": {}, "required": []}}}, {"type": "function", "function": {"name": "OrderPizza", "description": "Order pizza.", "parameters": {"type": "object", "properties": {"PizzaType": {"type": "string", "description": "Pizza"}, "size": {"type": "string", "description": "Pizza size (extracted as it is, example: Small, L, Medium, etc.)"}, "quantity": {"type": "integer", "description": "Order quantity"}}, "required": ["PizzaType", "size", "quantity"]}}}, {"type": "function", "function": {"name": "calculateCaloricNeeds", "description": "A function that estimates the average daily calorie consumption", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}, "height": {"type": "number", "description": "Centimeter key"}, "age": {"type": "integer", "description": "age"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["weight", "height", "age", "gender"]}}}, {"type": "function", "function": {"name": "convert_pyeong_to_squaremeter", "description": "Convert it to \"평\"을 입력받아서, \"제곱미터\".", "parameters": {"type": "object", "properties": {"pyeong": {"type": "number", "description": "Pyeongsu to be transformed"}}, "required": ["pyeong"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the type of pizza."}, "acceptable_arguments": null}
{"serial_num": 120, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Can I order? I'm going to order the first edition of pizza."}, {"role": "assistant", "content": "Please tell me the type of pizza and pizza size."}, {"role": "user", "content": "Large size."}], "input_tools": [{"type": "function", "function": {"name": "convert_euro_to_koruna", "description": "Convert the Given EUR amount to Czech Coruna (CZK)", "parameters": {"type": "object", "properties": {"amount_euro": {"type": "number", "description": "EUR amount to convert"}, "exchange_rate_eur_to_czk": {"type": "number", "description": "Exchange rate from EUR to CZK"}}, "required": ["amount_euro", "exchange_rate_eur_to_czk"]}}}, {"type": "function", "function": {"name": "getCurrentTopSeries", "description": "We offer the current popular TV series rankings", "parameters": {"type": "object", "properties": {}, "required": []}}}, {"type": "function", "function": {"name": "OrderPizza", "description": "Order pizza.", "parameters": {"type": "object", "properties": {"PizzaType": {"type": "string", "description": "Pizza"}, "size": {"type": "string", "description": "Pizza size (extracted as it is, example: Small, L, Medium, etc.)"}, "quantity": {"type": "integer", "description": "Order quantity"}}, "required": ["PizzaType", "size", "quantity"]}}}, {"type": "function", "function": {"name": "calculateCaloricNeeds", "description": "A function that estimates the average daily calorie consumption", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}, "height": {"type": "number", "description": "Centimeter key"}, "age": {"type": "integer", "description": "age"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["weight", "height", "age", "gender"]}}}, {"type": "function", "function": {"name": "convert_pyeong_to_squaremeter", "description": "Convert it to \"평\"을 입력받아서, \"제곱미터\".", "parameters": {"type": "object", "properties": {"pyeong": {"type": "number", "description": "Pyeongsu to be transformed"}}, "required": ["pyeong"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the type of pizza."}, "acceptable_arguments": null}
{"serial_num": 121, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Can I order? I'm trying to order pizza."}, {"role": "assistant", "content": "Please tell me the type of pizza, the size of the pizza, and the order quantity."}, {"role": "user", "content": "I want to order Bulgogi pizza."}, {"role": "assistant", "content": "Please tell us the pizza size and order quantity."}, {"role": "user", "content": "Large."}], "input_tools": [{"type": "function", "function": {"name": "convert_euro_to_koruna", "description": "Convert the Given EUR amount to Czech Coruna (CZK)", "parameters": {"type": "object", "properties": {"amount_euro": {"type": "number", "description": "EUR amount to convert"}, "exchange_rate_eur_to_czk": {"type": "number", "description": "Exchange rate from EUR to CZK"}}, "required": ["amount_euro", "exchange_rate_eur_to_czk"]}}}, {"type": "function", "function": {"name": "getCurrentTopSeries", "description": "We offer the current popular TV series rankings", "parameters": {"type": "object", "properties": {}, "required": []}}}, {"type": "function", "function": {"name": "OrderPizza", "description": "Order pizza.", "parameters": {"type": "object", "properties": {"PizzaType": {"type": "string", "description": "Pizza"}, "size": {"type": "string", "description": "Pizza size (extracted as it is, example: Small, L, Medium, etc.)"}, "quantity": {"type": "integer", "description": "Order quantity"}}, "required": ["PizzaType", "size", "quantity"]}}}, {"type": "function", "function": {"name": "calculateCaloricNeeds", "description": "A function that estimates the average daily calorie consumption", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}, "height": {"type": "number", "description": "Centimeter key"}, "age": {"type": "integer", "description": "age"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["weight", "height", "age", "gender"]}}}, {"type": "function", "function": {"name": "convert_pyeong_to_squaremeter", "description": "Convert it to \"평\"을 입력받아서, \"제곱미터\".", "parameters": {"type": "object", "properties": {"pyeong": {"type": "number", "description": "Pyeongsu to be transformed"}}, "required": ["pyeong"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the order quantity."}, "acceptable_arguments": null}
{"serial_num": 122, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Can I order? I'm trying to order pizza."}, {"role": "assistant", "content": "Please tell me the type of pizza, the size of the pizza, and the order quantity."}, {"role": "user", "content": "Large order."}, {"role": "assistant", "content": "Please tell us the type and order quantity."}, {"role": "user", "content": "Bulgogi pizza."}], "input_tools": [{"type": "function", "function": {"name": "convert_euro_to_koruna", "description": "Convert the Given EUR amount to Czech Coruna (CZK)", "parameters": {"type": "object", "properties": {"amount_euro": {"type": "number", "description": "EUR amount to convert"}, "exchange_rate_eur_to_czk": {"type": "number", "description": "Exchange rate from EUR to CZK"}}, "required": ["amount_euro", "exchange_rate_eur_to_czk"]}}}, {"type": "function", "function": {"name": "getCurrentTopSeries", "description": "We offer the current popular TV series rankings", "parameters": {"type": "object", "properties": {}, "required": []}}}, {"type": "function", "function": {"name": "OrderPizza", "description": "Order pizza.", "parameters": {"type": "object", "properties": {"PizzaType": {"type": "string", "description": "Pizza"}, "size": {"type": "string", "description": "Pizza size (extracted as it is, example: Small, L, Medium, etc.)"}, "quantity": {"type": "integer", "description": "Order quantity"}}, "required": ["PizzaType", "size", "quantity"]}}}, {"type": "function", "function": {"name": "calculateCaloricNeeds", "description": "A function that estimates the average daily calorie consumption", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}, "height": {"type": "number", "description": "Centimeter key"}, "age": {"type": "integer", "description": "age"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["weight", "height", "age", "gender"]}}}, {"type": "function", "function": {"name": "convert_pyeong_to_squaremeter", "description": "Convert it to \"평\"을 입력받아서, \"제곱미터\".", "parameters": {"type": "object", "properties": {"pyeong": {"type": "number", "description": "Pyeongsu to be transformed"}}, "required": ["pyeong"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the order quantity."}, "acceptable_arguments": null}
{"serial_num": 123, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Can I order? I'm trying to order pizza."}, {"role": "assistant", "content": "Please tell me the type of pizza, the size of the pizza, and the order quantity."}, {"role": "user", "content": "Bulgogi pizza order."}, {"role": "assistant", "content": "Please tell us the pizza size and order quantity."}, {"role": "user", "content": "1."}], "input_tools": [{"type": "function", "function": {"name": "convert_euro_to_koruna", "description": "Convert the Given EUR amount to Czech Coruna (CZK)", "parameters": {"type": "object", "properties": {"amount_euro": {"type": "number", "description": "EUR amount to convert"}, "exchange_rate_eur_to_czk": {"type": "number", "description": "Exchange rate from EUR to CZK"}}, "required": ["amount_euro", "exchange_rate_eur_to_czk"]}}}, {"type": "function", "function": {"name": "getCurrentTopSeries", "description": "We offer the current popular TV series rankings", "parameters": {"type": "object", "properties": {}, "required": []}}}, {"type": "function", "function": {"name": "OrderPizza", "description": "Order pizza.", "parameters": {"type": "object", "properties": {"PizzaType": {"type": "string", "description": "Pizza"}, "size": {"type": "string", "description": "Pizza size (extracted as it is, example: Small, L, Medium, etc.)"}, "quantity": {"type": "integer", "description": "Order quantity"}}, "required": ["PizzaType", "size", "quantity"]}}}, {"type": "function", "function": {"name": "calculateCaloricNeeds", "description": "A function that estimates the average daily calorie consumption", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}, "height": {"type": "number", "description": "Centimeter key"}, "age": {"type": "integer", "description": "age"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["weight", "height", "age", "gender"]}}}, {"type": "function", "function": {"name": "convert_pyeong_to_squaremeter", "description": "Convert it to \"평\"을 입력받아서, \"제곱미터\".", "parameters": {"type": "object", "properties": {"pyeong": {"type": "number", "description": "Pyeongsu to be transformed"}}, "required": ["pyeong"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the size of the pizza."}, "acceptable_arguments": null}
{"serial_num": 124, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Can I order? I'm trying to order pizza."}, {"role": "assistant", "content": "Please tell me the type of pizza, the size of the pizza, and the order quantity."}, {"role": "user", "content": "I'm going to order the first edition of pizza."}, {"role": "assistant", "content": "Please tell me the type of pizza and pizza size."}, {"role": "user", "content": "Bulgogi pizza."}], "input_tools": [{"type": "function", "function": {"name": "convert_euro_to_koruna", "description": "Convert the Given EUR amount to Czech Coruna (CZK)", "parameters": {"type": "object", "properties": {"amount_euro": {"type": "number", "description": "EUR amount to convert"}, "exchange_rate_eur_to_czk": {"type": "number", "description": "Exchange rate from EUR to CZK"}}, "required": ["amount_euro", "exchange_rate_eur_to_czk"]}}}, {"type": "function", "function": {"name": "getCurrentTopSeries", "description": "We offer the current popular TV series rankings", "parameters": {"type": "object", "properties": {}, "required": []}}}, {"type": "function", "function": {"name": "OrderPizza", "description": "Order pizza.", "parameters": {"type": "object", "properties": {"PizzaType": {"type": "string", "description": "Pizza"}, "size": {"type": "string", "description": "Pizza size (extracted as it is, example: Small, L, Medium, etc.)"}, "quantity": {"type": "integer", "description": "Order quantity"}}, "required": ["PizzaType", "size", "quantity"]}}}, {"type": "function", "function": {"name": "calculateCaloricNeeds", "description": "A function that estimates the average daily calorie consumption", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}, "height": {"type": "number", "description": "Centimeter key"}, "age": {"type": "integer", "description": "age"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["weight", "height", "age", "gender"]}}}, {"type": "function", "function": {"name": "convert_pyeong_to_squaremeter", "description": "Convert it to \"평\"을 입력받아서, \"제곱미터\".", "parameters": {"type": "object", "properties": {"pyeong": {"type": "number", "description": "Pyeongsu to be transformed"}}, "required": ["pyeong"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the size of the pizza."}, "acceptable_arguments": null}
{"serial_num": 125, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Can I order? I'm trying to order pizza."}, {"role": "assistant", "content": "Please tell me the type of pizza, the size of the pizza, and the order quantity."}, {"role": "user", "content": "I'm going to order pizza Large."}, {"role": "assistant", "content": "Please tell us the type and order quantity."}, {"role": "user", "content": "1."}], "input_tools": [{"type": "function", "function": {"name": "convert_euro_to_koruna", "description": "Convert the Given EUR amount to Czech Coruna (CZK)", "parameters": {"type": "object", "properties": {"amount_euro": {"type": "number", "description": "EUR amount to convert"}, "exchange_rate_eur_to_czk": {"type": "number", "description": "Exchange rate from EUR to CZK"}}, "required": ["amount_euro", "exchange_rate_eur_to_czk"]}}}, {"type": "function", "function": {"name": "getCurrentTopSeries", "description": "We offer the current popular TV series rankings", "parameters": {"type": "object", "properties": {}, "required": []}}}, {"type": "function", "function": {"name": "OrderPizza", "description": "Order pizza.", "parameters": {"type": "object", "properties": {"PizzaType": {"type": "string", "description": "Pizza"}, "size": {"type": "string", "description": "Pizza size (extracted as it is, example: Small, L, Medium, etc.)"}, "quantity": {"type": "integer", "description": "Order quantity"}}, "required": ["PizzaType", "size", "quantity"]}}}, {"type": "function", "function": {"name": "calculateCaloricNeeds", "description": "A function that estimates the average daily calorie consumption", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}, "height": {"type": "number", "description": "Centimeter key"}, "age": {"type": "integer", "description": "age"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["weight", "height", "age", "gender"]}}}, {"type": "function", "function": {"name": "convert_pyeong_to_squaremeter", "description": "Convert it to \"평\"을 입력받아서, \"제곱미터\".", "parameters": {"type": "object", "properties": {"pyeong": {"type": "number", "description": "Pyeongsu to be transformed"}}, "required": ["pyeong"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the type of pizza."}, "acceptable_arguments": null}
{"serial_num": 126, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Can I order? I'm trying to order pizza."}, {"role": "assistant", "content": "Please tell me the type of pizza, the size of the pizza, and the order quantity."}, {"role": "user", "content": "I'm going to order the first edition."}, {"role": "assistant", "content": "Please tell me the type of pizza and pizza size."}, {"role": "user", "content": "Large size."}], "input_tools": [{"type": "function", "function": {"name": "convert_euro_to_koruna", "description": "Convert the Given EUR amount to Czech Coruna (CZK)", "parameters": {"type": "object", "properties": {"amount_euro": {"type": "number", "description": "EUR amount to convert"}, "exchange_rate_eur_to_czk": {"type": "number", "description": "Exchange rate from EUR to CZK"}}, "required": ["amount_euro", "exchange_rate_eur_to_czk"]}}}, {"type": "function", "function": {"name": "getCurrentTopSeries", "description": "We offer the current popular TV series rankings", "parameters": {"type": "object", "properties": {}, "required": []}}}, {"type": "function", "function": {"name": "OrderPizza", "description": "Order pizza.", "parameters": {"type": "object", "properties": {"PizzaType": {"type": "string", "description": "Pizza"}, "size": {"type": "string", "description": "Pizza size (extracted as it is, example: Small, L, Medium, etc.)"}, "quantity": {"type": "integer", "description": "Order quantity"}}, "required": ["PizzaType", "size", "quantity"]}}}, {"type": "function", "function": {"name": "calculateCaloricNeeds", "description": "A function that estimates the average daily calorie consumption", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}, "height": {"type": "number", "description": "Centimeter key"}, "age": {"type": "integer", "description": "age"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["weight", "height", "age", "gender"]}}}, {"type": "function", "function": {"name": "convert_pyeong_to_squaremeter", "description": "Convert it to \"평\"을 입력받아서, \"제곱미터\".", "parameters": {"type": "object", "properties": {"pyeong": {"type": "number", "description": "Pyeongsu to be transformed"}}, "required": ["pyeong"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the type of pizza."}, "acceptable_arguments": null}
{"serial_num": 127, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Find some flight information from Haneda Airport."}], "input_tools": [{"type": "function", "function": {"name": "convert_to_lowercase", "description": "Converted string to lowercase", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "String to be converted into lowercase"}}, "required": ["text"]}}}, {"type": "function", "function": {"name": "reserve_restaurant", "description": "Reservation of the restaurant with the information provided by the user. Example) Please make a reservation at 6 pm tonight", "parameters": {"type": "object", "properties": {"store": {"type": "string", "description": "Restaurant name"}, "reservationDate": {"type": "string", "description": "Reservation date (YYYY-MM-DD)"}, "reservationTime": {"type": "string", "description": "Reservation time (hh: mm)"}, "numberOfPeople": {"type": "integer", "description": "Number of reservations"}}, "required": ["store", "reservationDate", "reservationTime", "numberOfPeople"]}}}, {"type": "function", "function": {"name": "search_flight", "description": "Search for a flight from a specific airport and arriving at a specific airport.", "parameters": {"type": "object", "properties": {"departure_airport": {"type": "string", "description": "Departure airport name (extracted as user expression. Example: Los Angeles International Airport, Gimhae Airport, etc.)"}, "arrival_airport": {"type": "string", "description": "Arrival airport name (extracting as it is, Example: Los Angeles International Airport, Gimhae Airport, etc.)"}, "departure_date": {"type": "string", "description": "Departure Date (YYYY-MM-DD)"}}, "required": ["departure_airport", "arrival_airport", "departure_date"]}}}, {"type": "function", "function": {"name": "convert_euro_to_koruna", "description": "Convert the Given EUR amount to Czech Coruna (CZK)", "parameters": {"type": "object", "properties": {"amount_euro": {"type": "number", "description": "EUR amount to convert"}, "exchange_rate_eur_to_czk": {"type": "number", "description": "Exchange rate from EUR to CZK"}}, "required": ["amount_euro", "exchange_rate_eur_to_czk"]}}}, {"type": "function", "function": {"name": "generate_random_password", "description": "Create any password with certain conditions", "parameters": {"type": "object", "properties": {"length": {"type": "integer", "description": "Password length"}, "include_uppercase": {"type": "boolean", "description": "Including alphabet uppercase letters"}, "include_lowercase": {"type": "boolean", "description": "Including alphabet lowercase"}, "include_numbers": {"type": "boolean", "description": "Whether the number includes"}}, "required": ["length", "include_uppercase", "include_lowercase", "include_numbers"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell us the name of the arrival airport and the departure date."}, "acceptable_arguments": null}
{"serial_num": 128, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Find some flight information arriving at Incheon International Airport."}], "input_tools": [{"type": "function", "function": {"name": "convert_to_lowercase", "description": "Converted string to lowercase", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "String to be converted into lowercase"}}, "required": ["text"]}}}, {"type": "function", "function": {"name": "reserve_restaurant", "description": "Reservation of the restaurant with the information provided by the user. Example) Please make a reservation at 6 pm tonight", "parameters": {"type": "object", "properties": {"store": {"type": "string", "description": "Restaurant name"}, "reservationDate": {"type": "string", "description": "Reservation date (YYYY-MM-DD)"}, "reservationTime": {"type": "string", "description": "Reservation time (hh: mm)"}, "numberOfPeople": {"type": "integer", "description": "Number of reservations"}}, "required": ["store", "reservationDate", "reservationTime", "numberOfPeople"]}}}, {"type": "function", "function": {"name": "search_flight", "description": "Search for a flight from a specific airport and arriving at a specific airport.", "parameters": {"type": "object", "properties": {"departure_airport": {"type": "string", "description": "Departure airport name (extracted as user expression. Example: Los Angeles International Airport, Gimhae Airport, etc.)"}, "arrival_airport": {"type": "string", "description": "Arrival airport name (extracting as it is, Example: Los Angeles International Airport, Gimhae Airport, etc.)"}, "departure_date": {"type": "string", "description": "Departure Date (YYYY-MM-DD)"}}, "required": ["departure_airport", "arrival_airport", "departure_date"]}}}, {"type": "function", "function": {"name": "convert_euro_to_koruna", "description": "Convert the Given EUR amount to Czech Coruna (CZK)", "parameters": {"type": "object", "properties": {"amount_euro": {"type": "number", "description": "EUR amount to convert"}, "exchange_rate_eur_to_czk": {"type": "number", "description": "Exchange rate from EUR to CZK"}}, "required": ["amount_euro", "exchange_rate_eur_to_czk"]}}}, {"type": "function", "function": {"name": "generate_random_password", "description": "Create any password with certain conditions", "parameters": {"type": "object", "properties": {"length": {"type": "integer", "description": "Password length"}, "include_uppercase": {"type": "boolean", "description": "Including alphabet uppercase letters"}, "include_lowercase": {"type": "boolean", "description": "Including alphabet lowercase"}, "include_numbers": {"type": "boolean", "description": "Whether the number includes"}}, "required": ["length", "include_uppercase", "include_lowercase", "include_numbers"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell us the name of the departure airport and the date of departure."}, "acceptable_arguments": null}
{"serial_num": 129, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Find some flight information on September 29, 24."}], "input_tools": [{"type": "function", "function": {"name": "convert_to_lowercase", "description": "Converted string to lowercase", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "String to be converted into lowercase"}}, "required": ["text"]}}}, {"type": "function", "function": {"name": "reserve_restaurant", "description": "Reservation of the restaurant with the information provided by the user. Example) Please make a reservation at 6 pm tonight", "parameters": {"type": "object", "properties": {"store": {"type": "string", "description": "Restaurant name"}, "reservationDate": {"type": "string", "description": "Reservation date (YYYY-MM-DD)"}, "reservationTime": {"type": "string", "description": "Reservation time (hh: mm)"}, "numberOfPeople": {"type": "integer", "description": "Number of reservations"}}, "required": ["store", "reservationDate", "reservationTime", "numberOfPeople"]}}}, {"type": "function", "function": {"name": "search_flight", "description": "Search for a flight from a specific airport and arriving at a specific airport.", "parameters": {"type": "object", "properties": {"departure_airport": {"type": "string", "description": "Departure airport name (extracted as user expression. Example: Los Angeles International Airport, Gimhae Airport, etc.)"}, "arrival_airport": {"type": "string", "description": "Arrival airport name (extracting as it is, Example: Los Angeles International Airport, Gimhae Airport, etc.)"}, "departure_date": {"type": "string", "description": "Departure Date (YYYY-MM-DD)"}}, "required": ["departure_airport", "arrival_airport", "departure_date"]}}}, {"type": "function", "function": {"name": "convert_euro_to_koruna", "description": "Convert the Given EUR amount to Czech Coruna (CZK)", "parameters": {"type": "object", "properties": {"amount_euro": {"type": "number", "description": "EUR amount to convert"}, "exchange_rate_eur_to_czk": {"type": "number", "description": "Exchange rate from EUR to CZK"}}, "required": ["amount_euro", "exchange_rate_eur_to_czk"]}}}, {"type": "function", "function": {"name": "generate_random_password", "description": "Create any password with certain conditions", "parameters": {"type": "object", "properties": {"length": {"type": "integer", "description": "Password length"}, "include_uppercase": {"type": "boolean", "description": "Including alphabet uppercase letters"}, "include_lowercase": {"type": "boolean", "description": "Including alphabet lowercase"}, "include_numbers": {"type": "boolean", "description": "Whether the number includes"}}, "required": ["length", "include_uppercase", "include_lowercase", "include_numbers"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell us the departure airport name and arrival airport name."}, "acceptable_arguments": null}
{"serial_num": 130, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Find some flight information."}, {"role": "assistant", "content": "Please tell us the departure airport name, arrival airport name, and departure date."}, {"role": "user", "content": "Airlines from Haneda Airport."}], "input_tools": [{"type": "function", "function": {"name": "convert_to_lowercase", "description": "Converted string to lowercase", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "String to be converted into lowercase"}}, "required": ["text"]}}}, {"type": "function", "function": {"name": "reserve_restaurant", "description": "Reservation of the restaurant with the information provided by the user. Example) Please make a reservation at 6 pm tonight", "parameters": {"type": "object", "properties": {"store": {"type": "string", "description": "Restaurant name"}, "reservationDate": {"type": "string", "description": "Reservation date (YYYY-MM-DD)"}, "reservationTime": {"type": "string", "description": "Reservation time (hh: mm)"}, "numberOfPeople": {"type": "integer", "description": "Number of reservations"}}, "required": ["store", "reservationDate", "reservationTime", "numberOfPeople"]}}}, {"type": "function", "function": {"name": "search_flight", "description": "Search for a flight from a specific airport and arriving at a specific airport.", "parameters": {"type": "object", "properties": {"departure_airport": {"type": "string", "description": "Departure airport name (extracted as user expression. Example: Los Angeles International Airport, Gimhae Airport, etc.)"}, "arrival_airport": {"type": "string", "description": "Arrival airport name (extracting as it is, Example: Los Angeles International Airport, Gimhae Airport, etc.)"}, "departure_date": {"type": "string", "description": "Departure Date (YYYY-MM-DD)"}}, "required": ["departure_airport", "arrival_airport", "departure_date"]}}}, {"type": "function", "function": {"name": "convert_euro_to_koruna", "description": "Convert the Given EUR amount to Czech Coruna (CZK)", "parameters": {"type": "object", "properties": {"amount_euro": {"type": "number", "description": "EUR amount to convert"}, "exchange_rate_eur_to_czk": {"type": "number", "description": "Exchange rate from EUR to CZK"}}, "required": ["amount_euro", "exchange_rate_eur_to_czk"]}}}, {"type": "function", "function": {"name": "generate_random_password", "description": "Create any password with certain conditions", "parameters": {"type": "object", "properties": {"length": {"type": "integer", "description": "Password length"}, "include_uppercase": {"type": "boolean", "description": "Including alphabet uppercase letters"}, "include_lowercase": {"type": "boolean", "description": "Including alphabet lowercase"}, "include_numbers": {"type": "boolean", "description": "Whether the number includes"}}, "required": ["length", "include_uppercase", "include_lowercase", "include_numbers"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell us the name of the arrival airport and the departure date."}, "acceptable_arguments": null}
{"serial_num": 131, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Find some flight information."}, {"role": "assistant", "content": "Please tell us the departure airport name, arrival airport name, and departure date."}, {"role": "user", "content": "Airlines arriving at Incheon International Airport."}], "input_tools": [{"type": "function", "function": {"name": "convert_to_lowercase", "description": "Converted string to lowercase", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "String to be converted into lowercase"}}, "required": ["text"]}}}, {"type": "function", "function": {"name": "reserve_restaurant", "description": "Reservation of the restaurant with the information provided by the user. Example) Please make a reservation at 6 pm tonight", "parameters": {"type": "object", "properties": {"store": {"type": "string", "description": "Restaurant name"}, "reservationDate": {"type": "string", "description": "Reservation date (YYYY-MM-DD)"}, "reservationTime": {"type": "string", "description": "Reservation time (hh: mm)"}, "numberOfPeople": {"type": "integer", "description": "Number of reservations"}}, "required": ["store", "reservationDate", "reservationTime", "numberOfPeople"]}}}, {"type": "function", "function": {"name": "search_flight", "description": "Search for a flight from a specific airport and arriving at a specific airport.", "parameters": {"type": "object", "properties": {"departure_airport": {"type": "string", "description": "Departure airport name (extracted as user expression. Example: Los Angeles International Airport, Gimhae Airport, etc.)"}, "arrival_airport": {"type": "string", "description": "Arrival airport name (extracting as it is, Example: Los Angeles International Airport, Gimhae Airport, etc.)"}, "departure_date": {"type": "string", "description": "Departure Date (YYYY-MM-DD)"}}, "required": ["departure_airport", "arrival_airport", "departure_date"]}}}, {"type": "function", "function": {"name": "convert_euro_to_koruna", "description": "Convert the Given EUR amount to Czech Coruna (CZK)", "parameters": {"type": "object", "properties": {"amount_euro": {"type": "number", "description": "EUR amount to convert"}, "exchange_rate_eur_to_czk": {"type": "number", "description": "Exchange rate from EUR to CZK"}}, "required": ["amount_euro", "exchange_rate_eur_to_czk"]}}}, {"type": "function", "function": {"name": "generate_random_password", "description": "Create any password with certain conditions", "parameters": {"type": "object", "properties": {"length": {"type": "integer", "description": "Password length"}, "include_uppercase": {"type": "boolean", "description": "Including alphabet uppercase letters"}, "include_lowercase": {"type": "boolean", "description": "Including alphabet lowercase"}, "include_numbers": {"type": "boolean", "description": "Whether the number includes"}}, "required": ["length", "include_uppercase", "include_lowercase", "include_numbers"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell us the name of the departure airport and the date of departure."}, "acceptable_arguments": null}
{"serial_num": 132, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Find some flight information."}, {"role": "assistant", "content": "Please tell us the departure airport name, arrival airport name, and departure date."}, {"role": "user", "content": "September 29, 24 flights."}], "input_tools": [{"type": "function", "function": {"name": "convert_to_lowercase", "description": "Converted string to lowercase", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "String to be converted into lowercase"}}, "required": ["text"]}}}, {"type": "function", "function": {"name": "reserve_restaurant", "description": "Reservation of the restaurant with the information provided by the user. Example) Please make a reservation at 6 pm tonight", "parameters": {"type": "object", "properties": {"store": {"type": "string", "description": "Restaurant name"}, "reservationDate": {"type": "string", "description": "Reservation date (YYYY-MM-DD)"}, "reservationTime": {"type": "string", "description": "Reservation time (hh: mm)"}, "numberOfPeople": {"type": "integer", "description": "Number of reservations"}}, "required": ["store", "reservationDate", "reservationTime", "numberOfPeople"]}}}, {"type": "function", "function": {"name": "search_flight", "description": "Search for a flight from a specific airport and arriving at a specific airport.", "parameters": {"type": "object", "properties": {"departure_airport": {"type": "string", "description": "Departure airport name (extracted as user expression. Example: Los Angeles International Airport, Gimhae Airport, etc.)"}, "arrival_airport": {"type": "string", "description": "Arrival airport name (extracting as it is, Example: Los Angeles International Airport, Gimhae Airport, etc.)"}, "departure_date": {"type": "string", "description": "Departure Date (YYYY-MM-DD)"}}, "required": ["departure_airport", "arrival_airport", "departure_date"]}}}, {"type": "function", "function": {"name": "convert_euro_to_koruna", "description": "Convert the Given EUR amount to Czech Coruna (CZK)", "parameters": {"type": "object", "properties": {"amount_euro": {"type": "number", "description": "EUR amount to convert"}, "exchange_rate_eur_to_czk": {"type": "number", "description": "Exchange rate from EUR to CZK"}}, "required": ["amount_euro", "exchange_rate_eur_to_czk"]}}}, {"type": "function", "function": {"name": "generate_random_password", "description": "Create any password with certain conditions", "parameters": {"type": "object", "properties": {"length": {"type": "integer", "description": "Password length"}, "include_uppercase": {"type": "boolean", "description": "Including alphabet uppercase letters"}, "include_lowercase": {"type": "boolean", "description": "Including alphabet lowercase"}, "include_numbers": {"type": "boolean", "description": "Whether the number includes"}}, "required": ["length", "include_uppercase", "include_lowercase", "include_numbers"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell us the departure airport name and arrival airport name."}, "acceptable_arguments": null}
{"serial_num": 133, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Find some information from Haneda Airport to Incheon International Airport."}], "input_tools": [{"type": "function", "function": {"name": "convert_to_lowercase", "description": "Converted string to lowercase", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "String to be converted into lowercase"}}, "required": ["text"]}}}, {"type": "function", "function": {"name": "reserve_restaurant", "description": "Reservation of the restaurant with the information provided by the user. Example) Please make a reservation at 6 pm tonight", "parameters": {"type": "object", "properties": {"store": {"type": "string", "description": "Restaurant name"}, "reservationDate": {"type": "string", "description": "Reservation date (YYYY-MM-DD)"}, "reservationTime": {"type": "string", "description": "Reservation time (hh: mm)"}, "numberOfPeople": {"type": "integer", "description": "Number of reservations"}}, "required": ["store", "reservationDate", "reservationTime", "numberOfPeople"]}}}, {"type": "function", "function": {"name": "search_flight", "description": "Search for a flight from a specific airport and arriving at a specific airport.", "parameters": {"type": "object", "properties": {"departure_airport": {"type": "string", "description": "Departure airport name (extracted as user expression. Example: Los Angeles International Airport, Gimhae Airport, etc.)"}, "arrival_airport": {"type": "string", "description": "Arrival airport name (extracting as it is, Example: Los Angeles International Airport, Gimhae Airport, etc.)"}, "departure_date": {"type": "string", "description": "Departure Date (YYYY-MM-DD)"}}, "required": ["departure_airport", "arrival_airport", "departure_date"]}}}, {"type": "function", "function": {"name": "convert_euro_to_koruna", "description": "Convert the Given EUR amount to Czech Coruna (CZK)", "parameters": {"type": "object", "properties": {"amount_euro": {"type": "number", "description": "EUR amount to convert"}, "exchange_rate_eur_to_czk": {"type": "number", "description": "Exchange rate from EUR to CZK"}}, "required": ["amount_euro", "exchange_rate_eur_to_czk"]}}}, {"type": "function", "function": {"name": "generate_random_password", "description": "Create any password with certain conditions", "parameters": {"type": "object", "properties": {"length": {"type": "integer", "description": "Password length"}, "include_uppercase": {"type": "boolean", "description": "Including alphabet uppercase letters"}, "include_lowercase": {"type": "boolean", "description": "Including alphabet lowercase"}, "include_numbers": {"type": "boolean", "description": "Whether the number includes"}}, "required": ["length", "include_uppercase", "include_lowercase", "include_numbers"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the departure date."}, "acceptable_arguments": null}
{"serial_num": 134, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Find some information from Incheon International Airport. Departure airport is Haneda Airport."}], "input_tools": [{"type": "function", "function": {"name": "convert_to_lowercase", "description": "Converted string to lowercase", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "String to be converted into lowercase"}}, "required": ["text"]}}}, {"type": "function", "function": {"name": "reserve_restaurant", "description": "Reservation of the restaurant with the information provided by the user. Example) Please make a reservation at 6 pm tonight", "parameters": {"type": "object", "properties": {"store": {"type": "string", "description": "Restaurant name"}, "reservationDate": {"type": "string", "description": "Reservation date (YYYY-MM-DD)"}, "reservationTime": {"type": "string", "description": "Reservation time (hh: mm)"}, "numberOfPeople": {"type": "integer", "description": "Number of reservations"}}, "required": ["store", "reservationDate", "reservationTime", "numberOfPeople"]}}}, {"type": "function", "function": {"name": "search_flight", "description": "Search for a flight from a specific airport and arriving at a specific airport.", "parameters": {"type": "object", "properties": {"departure_airport": {"type": "string", "description": "Departure airport name (extracted as user expression. Example: Los Angeles International Airport, Gimhae Airport, etc.)"}, "arrival_airport": {"type": "string", "description": "Arrival airport name (extracting as it is, Example: Los Angeles International Airport, Gimhae Airport, etc.)"}, "departure_date": {"type": "string", "description": "Departure Date (YYYY-MM-DD)"}}, "required": ["departure_airport", "arrival_airport", "departure_date"]}}}, {"type": "function", "function": {"name": "convert_euro_to_koruna", "description": "Convert the Given EUR amount to Czech Coruna (CZK)", "parameters": {"type": "object", "properties": {"amount_euro": {"type": "number", "description": "EUR amount to convert"}, "exchange_rate_eur_to_czk": {"type": "number", "description": "Exchange rate from EUR to CZK"}}, "required": ["amount_euro", "exchange_rate_eur_to_czk"]}}}, {"type": "function", "function": {"name": "generate_random_password", "description": "Create any password with certain conditions", "parameters": {"type": "object", "properties": {"length": {"type": "integer", "description": "Password length"}, "include_uppercase": {"type": "boolean", "description": "Including alphabet uppercase letters"}, "include_lowercase": {"type": "boolean", "description": "Including alphabet lowercase"}, "include_numbers": {"type": "boolean", "description": "Whether the number includes"}}, "required": ["length", "include_uppercase", "include_lowercase", "include_numbers"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the departure date."}, "acceptable_arguments": null}
{"serial_num": 135, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Find some flight information from Haneda Airport on September 29, 24."}], "input_tools": [{"type": "function", "function": {"name": "convert_to_lowercase", "description": "Converted string to lowercase", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "String to be converted into lowercase"}}, "required": ["text"]}}}, {"type": "function", "function": {"name": "reserve_restaurant", "description": "Reservation of the restaurant with the information provided by the user. Example) Please make a reservation at 6 pm tonight", "parameters": {"type": "object", "properties": {"store": {"type": "string", "description": "Restaurant name"}, "reservationDate": {"type": "string", "description": "Reservation date (YYYY-MM-DD)"}, "reservationTime": {"type": "string", "description": "Reservation time (hh: mm)"}, "numberOfPeople": {"type": "integer", "description": "Number of reservations"}}, "required": ["store", "reservationDate", "reservationTime", "numberOfPeople"]}}}, {"type": "function", "function": {"name": "search_flight", "description": "Search for a flight from a specific airport and arriving at a specific airport.", "parameters": {"type": "object", "properties": {"departure_airport": {"type": "string", "description": "Departure airport name (extracted as user expression. Example: Los Angeles International Airport, Gimhae Airport, etc.)"}, "arrival_airport": {"type": "string", "description": "Arrival airport name (extracting as it is, Example: Los Angeles International Airport, Gimhae Airport, etc.)"}, "departure_date": {"type": "string", "description": "Departure Date (YYYY-MM-DD)"}}, "required": ["departure_airport", "arrival_airport", "departure_date"]}}}, {"type": "function", "function": {"name": "convert_euro_to_koruna", "description": "Convert the Given EUR amount to Czech Coruna (CZK)", "parameters": {"type": "object", "properties": {"amount_euro": {"type": "number", "description": "EUR amount to convert"}, "exchange_rate_eur_to_czk": {"type": "number", "description": "Exchange rate from EUR to CZK"}}, "required": ["amount_euro", "exchange_rate_eur_to_czk"]}}}, {"type": "function", "function": {"name": "generate_random_password", "description": "Create any password with certain conditions", "parameters": {"type": "object", "properties": {"length": {"type": "integer", "description": "Password length"}, "include_uppercase": {"type": "boolean", "description": "Including alphabet uppercase letters"}, "include_lowercase": {"type": "boolean", "description": "Including alphabet lowercase"}, "include_numbers": {"type": "boolean", "description": "Whether the number includes"}}, "required": ["length", "include_uppercase", "include_lowercase", "include_numbers"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the name of the arrival airport."}, "acceptable_arguments": null}
{"serial_num": 136, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Find some flight information from Haneda Airport on September 29, 24."}], "input_tools": [{"type": "function", "function": {"name": "convert_to_lowercase", "description": "Converted string to lowercase", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "String to be converted into lowercase"}}, "required": ["text"]}}}, {"type": "function", "function": {"name": "reserve_restaurant", "description": "Reservation of the restaurant with the information provided by the user. Example) Please make a reservation at 6 pm tonight", "parameters": {"type": "object", "properties": {"store": {"type": "string", "description": "Restaurant name"}, "reservationDate": {"type": "string", "description": "Reservation date (YYYY-MM-DD)"}, "reservationTime": {"type": "string", "description": "Reservation time (hh: mm)"}, "numberOfPeople": {"type": "integer", "description": "Number of reservations"}}, "required": ["store", "reservationDate", "reservationTime", "numberOfPeople"]}}}, {"type": "function", "function": {"name": "search_flight", "description": "Search for a flight from a specific airport and arriving at a specific airport.", "parameters": {"type": "object", "properties": {"departure_airport": {"type": "string", "description": "Departure airport name (extracted as user expression. Example: Los Angeles International Airport, Gimhae Airport, etc.)"}, "arrival_airport": {"type": "string", "description": "Arrival airport name (extracting as it is, Example: Los Angeles International Airport, Gimhae Airport, etc.)"}, "departure_date": {"type": "string", "description": "Departure Date (YYYY-MM-DD)"}}, "required": ["departure_airport", "arrival_airport", "departure_date"]}}}, {"type": "function", "function": {"name": "convert_euro_to_koruna", "description": "Convert the Given EUR amount to Czech Coruna (CZK)", "parameters": {"type": "object", "properties": {"amount_euro": {"type": "number", "description": "EUR amount to convert"}, "exchange_rate_eur_to_czk": {"type": "number", "description": "Exchange rate from EUR to CZK"}}, "required": ["amount_euro", "exchange_rate_eur_to_czk"]}}}, {"type": "function", "function": {"name": "generate_random_password", "description": "Create any password with certain conditions", "parameters": {"type": "object", "properties": {"length": {"type": "integer", "description": "Password length"}, "include_uppercase": {"type": "boolean", "description": "Including alphabet uppercase letters"}, "include_lowercase": {"type": "boolean", "description": "Including alphabet lowercase"}, "include_numbers": {"type": "boolean", "description": "Whether the number includes"}}, "required": ["length", "include_uppercase", "include_lowercase", "include_numbers"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the name of the arrival airport."}, "acceptable_arguments": null}
{"serial_num": 137, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Find some flight information arriving at Incheon International Airport. On September 29, 24, on a plane."}], "input_tools": [{"type": "function", "function": {"name": "convert_to_lowercase", "description": "Converted string to lowercase", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "String to be converted into lowercase"}}, "required": ["text"]}}}, {"type": "function", "function": {"name": "reserve_restaurant", "description": "Reservation of the restaurant with the information provided by the user. Example) Please make a reservation at 6 pm tonight", "parameters": {"type": "object", "properties": {"store": {"type": "string", "description": "Restaurant name"}, "reservationDate": {"type": "string", "description": "Reservation date (YYYY-MM-DD)"}, "reservationTime": {"type": "string", "description": "Reservation time (hh: mm)"}, "numberOfPeople": {"type": "integer", "description": "Number of reservations"}}, "required": ["store", "reservationDate", "reservationTime", "numberOfPeople"]}}}, {"type": "function", "function": {"name": "search_flight", "description": "Search for a flight from a specific airport and arriving at a specific airport.", "parameters": {"type": "object", "properties": {"departure_airport": {"type": "string", "description": "Departure airport name (extracted as user expression. Example: Los Angeles International Airport, Gimhae Airport, etc.)"}, "arrival_airport": {"type": "string", "description": "Arrival airport name (extracting as it is, Example: Los Angeles International Airport, Gimhae Airport, etc.)"}, "departure_date": {"type": "string", "description": "Departure Date (YYYY-MM-DD)"}}, "required": ["departure_airport", "arrival_airport", "departure_date"]}}}, {"type": "function", "function": {"name": "convert_euro_to_koruna", "description": "Convert the Given EUR amount to Czech Coruna (CZK)", "parameters": {"type": "object", "properties": {"amount_euro": {"type": "number", "description": "EUR amount to convert"}, "exchange_rate_eur_to_czk": {"type": "number", "description": "Exchange rate from EUR to CZK"}}, "required": ["amount_euro", "exchange_rate_eur_to_czk"]}}}, {"type": "function", "function": {"name": "generate_random_password", "description": "Create any password with certain conditions", "parameters": {"type": "object", "properties": {"length": {"type": "integer", "description": "Password length"}, "include_uppercase": {"type": "boolean", "description": "Including alphabet uppercase letters"}, "include_lowercase": {"type": "boolean", "description": "Including alphabet lowercase"}, "include_numbers": {"type": "boolean", "description": "Whether the number includes"}}, "required": ["length", "include_uppercase", "include_lowercase", "include_numbers"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell us the name of the departure airport."}, "acceptable_arguments": null}
{"serial_num": 138, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Start on September 29, 24, and find some flight information from Incheon International Airport."}], "input_tools": [{"type": "function", "function": {"name": "convert_to_lowercase", "description": "Converted string to lowercase", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "String to be converted into lowercase"}}, "required": ["text"]}}}, {"type": "function", "function": {"name": "reserve_restaurant", "description": "Reservation of the restaurant with the information provided by the user. Example) Please make a reservation at 6 pm tonight", "parameters": {"type": "object", "properties": {"store": {"type": "string", "description": "Restaurant name"}, "reservationDate": {"type": "string", "description": "Reservation date (YYYY-MM-DD)"}, "reservationTime": {"type": "string", "description": "Reservation time (hh: mm)"}, "numberOfPeople": {"type": "integer", "description": "Number of reservations"}}, "required": ["store", "reservationDate", "reservationTime", "numberOfPeople"]}}}, {"type": "function", "function": {"name": "search_flight", "description": "Search for a flight from a specific airport and arriving at a specific airport.", "parameters": {"type": "object", "properties": {"departure_airport": {"type": "string", "description": "Departure airport name (extracted as user expression. Example: Los Angeles International Airport, Gimhae Airport, etc.)"}, "arrival_airport": {"type": "string", "description": "Arrival airport name (extracting as it is, Example: Los Angeles International Airport, Gimhae Airport, etc.)"}, "departure_date": {"type": "string", "description": "Departure Date (YYYY-MM-DD)"}}, "required": ["departure_airport", "arrival_airport", "departure_date"]}}}, {"type": "function", "function": {"name": "convert_euro_to_koruna", "description": "Convert the Given EUR amount to Czech Coruna (CZK)", "parameters": {"type": "object", "properties": {"amount_euro": {"type": "number", "description": "EUR amount to convert"}, "exchange_rate_eur_to_czk": {"type": "number", "description": "Exchange rate from EUR to CZK"}}, "required": ["amount_euro", "exchange_rate_eur_to_czk"]}}}, {"type": "function", "function": {"name": "generate_random_password", "description": "Create any password with certain conditions", "parameters": {"type": "object", "properties": {"length": {"type": "integer", "description": "Password length"}, "include_uppercase": {"type": "boolean", "description": "Including alphabet uppercase letters"}, "include_lowercase": {"type": "boolean", "description": "Including alphabet lowercase"}, "include_numbers": {"type": "boolean", "description": "Whether the number includes"}}, "required": ["length", "include_uppercase", "include_lowercase", "include_numbers"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell us the name of the departure airport."}, "acceptable_arguments": null}
{"serial_num": 139, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Find some flight information."}, {"role": "assistant", "content": "Please tell us the departure airport name, arrival airport name, and departure date."}, {"role": "user", "content": "Airlines from Haneda Airport to Incheon International Airport."}], "input_tools": [{"type": "function", "function": {"name": "convert_to_lowercase", "description": "Converted string to lowercase", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "String to be converted into lowercase"}}, "required": ["text"]}}}, {"type": "function", "function": {"name": "reserve_restaurant", "description": "Reservation of the restaurant with the information provided by the user. Example) Please make a reservation at 6 pm tonight", "parameters": {"type": "object", "properties": {"store": {"type": "string", "description": "Restaurant name"}, "reservationDate": {"type": "string", "description": "Reservation date (YYYY-MM-DD)"}, "reservationTime": {"type": "string", "description": "Reservation time (hh: mm)"}, "numberOfPeople": {"type": "integer", "description": "Number of reservations"}}, "required": ["store", "reservationDate", "reservationTime", "numberOfPeople"]}}}, {"type": "function", "function": {"name": "search_flight", "description": "Search for a flight from a specific airport and arriving at a specific airport.", "parameters": {"type": "object", "properties": {"departure_airport": {"type": "string", "description": "Departure airport name (extracted as user expression. Example: Los Angeles International Airport, Gimhae Airport, etc.)"}, "arrival_airport": {"type": "string", "description": "Arrival airport name (extracting as it is, Example: Los Angeles International Airport, Gimhae Airport, etc.)"}, "departure_date": {"type": "string", "description": "Departure Date (YYYY-MM-DD)"}}, "required": ["departure_airport", "arrival_airport", "departure_date"]}}}, {"type": "function", "function": {"name": "convert_euro_to_koruna", "description": "Convert the Given EUR amount to Czech Coruna (CZK)", "parameters": {"type": "object", "properties": {"amount_euro": {"type": "number", "description": "EUR amount to convert"}, "exchange_rate_eur_to_czk": {"type": "number", "description": "Exchange rate from EUR to CZK"}}, "required": ["amount_euro", "exchange_rate_eur_to_czk"]}}}, {"type": "function", "function": {"name": "generate_random_password", "description": "Create any password with certain conditions", "parameters": {"type": "object", "properties": {"length": {"type": "integer", "description": "Password length"}, "include_uppercase": {"type": "boolean", "description": "Including alphabet uppercase letters"}, "include_lowercase": {"type": "boolean", "description": "Including alphabet lowercase"}, "include_numbers": {"type": "boolean", "description": "Whether the number includes"}}, "required": ["length", "include_uppercase", "include_lowercase", "include_numbers"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the departure date."}, "acceptable_arguments": null}
{"serial_num": 140, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Find some flight information."}, {"role": "assistant", "content": "Please tell us the departure airport name, arrival airport name, and departure date."}, {"role": "user", "content": "Airlines to Incheon International Airport. Departure airport is Haneda Airport."}], "input_tools": [{"type": "function", "function": {"name": "convert_to_lowercase", "description": "Converted string to lowercase", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "String to be converted into lowercase"}}, "required": ["text"]}}}, {"type": "function", "function": {"name": "reserve_restaurant", "description": "Reservation of the restaurant with the information provided by the user. Example) Please make a reservation at 6 pm tonight", "parameters": {"type": "object", "properties": {"store": {"type": "string", "description": "Restaurant name"}, "reservationDate": {"type": "string", "description": "Reservation date (YYYY-MM-DD)"}, "reservationTime": {"type": "string", "description": "Reservation time (hh: mm)"}, "numberOfPeople": {"type": "integer", "description": "Number of reservations"}}, "required": ["store", "reservationDate", "reservationTime", "numberOfPeople"]}}}, {"type": "function", "function": {"name": "search_flight", "description": "Search for a flight from a specific airport and arriving at a specific airport.", "parameters": {"type": "object", "properties": {"departure_airport": {"type": "string", "description": "Departure airport name (extracted as user expression. Example: Los Angeles International Airport, Gimhae Airport, etc.)"}, "arrival_airport": {"type": "string", "description": "Arrival airport name (extracting as it is, Example: Los Angeles International Airport, Gimhae Airport, etc.)"}, "departure_date": {"type": "string", "description": "Departure Date (YYYY-MM-DD)"}}, "required": ["departure_airport", "arrival_airport", "departure_date"]}}}, {"type": "function", "function": {"name": "convert_euro_to_koruna", "description": "Convert the Given EUR amount to Czech Coruna (CZK)", "parameters": {"type": "object", "properties": {"amount_euro": {"type": "number", "description": "EUR amount to convert"}, "exchange_rate_eur_to_czk": {"type": "number", "description": "Exchange rate from EUR to CZK"}}, "required": ["amount_euro", "exchange_rate_eur_to_czk"]}}}, {"type": "function", "function": {"name": "generate_random_password", "description": "Create any password with certain conditions", "parameters": {"type": "object", "properties": {"length": {"type": "integer", "description": "Password length"}, "include_uppercase": {"type": "boolean", "description": "Including alphabet uppercase letters"}, "include_lowercase": {"type": "boolean", "description": "Including alphabet lowercase"}, "include_numbers": {"type": "boolean", "description": "Whether the number includes"}}, "required": ["length", "include_uppercase", "include_lowercase", "include_numbers"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the departure date."}, "acceptable_arguments": null}
{"serial_num": 141, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Find some flight information."}, {"role": "assistant", "content": "Please tell us the departure airport name, arrival airport name, and departure date."}, {"role": "user", "content": "Airline information departing from Haneda Airport on September 29, 24."}], "input_tools": [{"type": "function", "function": {"name": "convert_to_lowercase", "description": "Converted string to lowercase", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "String to be converted into lowercase"}}, "required": ["text"]}}}, {"type": "function", "function": {"name": "reserve_restaurant", "description": "Reservation of the restaurant with the information provided by the user. Example) Please make a reservation at 6 pm tonight", "parameters": {"type": "object", "properties": {"store": {"type": "string", "description": "Restaurant name"}, "reservationDate": {"type": "string", "description": "Reservation date (YYYY-MM-DD)"}, "reservationTime": {"type": "string", "description": "Reservation time (hh: mm)"}, "numberOfPeople": {"type": "integer", "description": "Number of reservations"}}, "required": ["store", "reservationDate", "reservationTime", "numberOfPeople"]}}}, {"type": "function", "function": {"name": "search_flight", "description": "Search for a flight from a specific airport and arriving at a specific airport.", "parameters": {"type": "object", "properties": {"departure_airport": {"type": "string", "description": "Departure airport name (extracted as user expression. Example: Los Angeles International Airport, Gimhae Airport, etc.)"}, "arrival_airport": {"type": "string", "description": "Arrival airport name (extracting as it is, Example: Los Angeles International Airport, Gimhae Airport, etc.)"}, "departure_date": {"type": "string", "description": "Departure Date (YYYY-MM-DD)"}}, "required": ["departure_airport", "arrival_airport", "departure_date"]}}}, {"type": "function", "function": {"name": "convert_euro_to_koruna", "description": "Convert the Given EUR amount to Czech Coruna (CZK)", "parameters": {"type": "object", "properties": {"amount_euro": {"type": "number", "description": "EUR amount to convert"}, "exchange_rate_eur_to_czk": {"type": "number", "description": "Exchange rate from EUR to CZK"}}, "required": ["amount_euro", "exchange_rate_eur_to_czk"]}}}, {"type": "function", "function": {"name": "generate_random_password", "description": "Create any password with certain conditions", "parameters": {"type": "object", "properties": {"length": {"type": "integer", "description": "Password length"}, "include_uppercase": {"type": "boolean", "description": "Including alphabet uppercase letters"}, "include_lowercase": {"type": "boolean", "description": "Including alphabet lowercase"}, "include_numbers": {"type": "boolean", "description": "Whether the number includes"}}, "required": ["length", "include_uppercase", "include_lowercase", "include_numbers"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the name of the arrival airport."}, "acceptable_arguments": null}
{"serial_num": 142, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Find some flight information."}, {"role": "assistant", "content": "Please tell us the departure airport name, arrival airport name, and departure date."}, {"role": "user", "content": "Airlines departing from Haneda Airport on September 29, 24."}], "input_tools": [{"type": "function", "function": {"name": "convert_to_lowercase", "description": "Converted string to lowercase", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "String to be converted into lowercase"}}, "required": ["text"]}}}, {"type": "function", "function": {"name": "reserve_restaurant", "description": "Reservation of the restaurant with the information provided by the user. Example) Please make a reservation at 6 pm tonight", "parameters": {"type": "object", "properties": {"store": {"type": "string", "description": "Restaurant name"}, "reservationDate": {"type": "string", "description": "Reservation date (YYYY-MM-DD)"}, "reservationTime": {"type": "string", "description": "Reservation time (hh: mm)"}, "numberOfPeople": {"type": "integer", "description": "Number of reservations"}}, "required": ["store", "reservationDate", "reservationTime", "numberOfPeople"]}}}, {"type": "function", "function": {"name": "search_flight", "description": "Search for a flight from a specific airport and arriving at a specific airport.", "parameters": {"type": "object", "properties": {"departure_airport": {"type": "string", "description": "Departure airport name (extracted as user expression. Example: Los Angeles International Airport, Gimhae Airport, etc.)"}, "arrival_airport": {"type": "string", "description": "Arrival airport name (extracting as it is, Example: Los Angeles International Airport, Gimhae Airport, etc.)"}, "departure_date": {"type": "string", "description": "Departure Date (YYYY-MM-DD)"}}, "required": ["departure_airport", "arrival_airport", "departure_date"]}}}, {"type": "function", "function": {"name": "convert_euro_to_koruna", "description": "Convert the Given EUR amount to Czech Coruna (CZK)", "parameters": {"type": "object", "properties": {"amount_euro": {"type": "number", "description": "EUR amount to convert"}, "exchange_rate_eur_to_czk": {"type": "number", "description": "Exchange rate from EUR to CZK"}}, "required": ["amount_euro", "exchange_rate_eur_to_czk"]}}}, {"type": "function", "function": {"name": "generate_random_password", "description": "Create any password with certain conditions", "parameters": {"type": "object", "properties": {"length": {"type": "integer", "description": "Password length"}, "include_uppercase": {"type": "boolean", "description": "Including alphabet uppercase letters"}, "include_lowercase": {"type": "boolean", "description": "Including alphabet lowercase"}, "include_numbers": {"type": "boolean", "description": "Whether the number includes"}}, "required": ["length", "include_uppercase", "include_lowercase", "include_numbers"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the name of the arrival airport."}, "acceptable_arguments": null}
{"serial_num": 143, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Find some flight information."}, {"role": "assistant", "content": "Please tell us the departure airport name, arrival airport name, and departure date."}, {"role": "user", "content": "Airlines arriving at Incheon International Airport. On September 29, 24, on a plane."}], "input_tools": [{"type": "function", "function": {"name": "convert_to_lowercase", "description": "Converted string to lowercase", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "String to be converted into lowercase"}}, "required": ["text"]}}}, {"type": "function", "function": {"name": "reserve_restaurant", "description": "Reservation of the restaurant with the information provided by the user. Example) Please make a reservation at 6 pm tonight", "parameters": {"type": "object", "properties": {"store": {"type": "string", "description": "Restaurant name"}, "reservationDate": {"type": "string", "description": "Reservation date (YYYY-MM-DD)"}, "reservationTime": {"type": "string", "description": "Reservation time (hh: mm)"}, "numberOfPeople": {"type": "integer", "description": "Number of reservations"}}, "required": ["store", "reservationDate", "reservationTime", "numberOfPeople"]}}}, {"type": "function", "function": {"name": "search_flight", "description": "Search for a flight from a specific airport and arriving at a specific airport.", "parameters": {"type": "object", "properties": {"departure_airport": {"type": "string", "description": "Departure airport name (extracted as user expression. Example: Los Angeles International Airport, Gimhae Airport, etc.)"}, "arrival_airport": {"type": "string", "description": "Arrival airport name (extracting as it is, Example: Los Angeles International Airport, Gimhae Airport, etc.)"}, "departure_date": {"type": "string", "description": "Departure Date (YYYY-MM-DD)"}}, "required": ["departure_airport", "arrival_airport", "departure_date"]}}}, {"type": "function", "function": {"name": "convert_euro_to_koruna", "description": "Convert the Given EUR amount to Czech Coruna (CZK)", "parameters": {"type": "object", "properties": {"amount_euro": {"type": "number", "description": "EUR amount to convert"}, "exchange_rate_eur_to_czk": {"type": "number", "description": "Exchange rate from EUR to CZK"}}, "required": ["amount_euro", "exchange_rate_eur_to_czk"]}}}, {"type": "function", "function": {"name": "generate_random_password", "description": "Create any password with certain conditions", "parameters": {"type": "object", "properties": {"length": {"type": "integer", "description": "Password length"}, "include_uppercase": {"type": "boolean", "description": "Including alphabet uppercase letters"}, "include_lowercase": {"type": "boolean", "description": "Including alphabet lowercase"}, "include_numbers": {"type": "boolean", "description": "Whether the number includes"}}, "required": ["length", "include_uppercase", "include_lowercase", "include_numbers"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell us the name of the departure airport."}, "acceptable_arguments": null}
{"serial_num": 144, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Find some flight information."}, {"role": "assistant", "content": "Please tell us the departure airport name, arrival airport name, and departure date."}, {"role": "user", "content": "Airline departs on September 29, 24, and arrives in Incheon International Airport."}], "input_tools": [{"type": "function", "function": {"name": "convert_to_lowercase", "description": "Converted string to lowercase", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "String to be converted into lowercase"}}, "required": ["text"]}}}, {"type": "function", "function": {"name": "reserve_restaurant", "description": "Reservation of the restaurant with the information provided by the user. Example) Please make a reservation at 6 pm tonight", "parameters": {"type": "object", "properties": {"store": {"type": "string", "description": "Restaurant name"}, "reservationDate": {"type": "string", "description": "Reservation date (YYYY-MM-DD)"}, "reservationTime": {"type": "string", "description": "Reservation time (hh: mm)"}, "numberOfPeople": {"type": "integer", "description": "Number of reservations"}}, "required": ["store", "reservationDate", "reservationTime", "numberOfPeople"]}}}, {"type": "function", "function": {"name": "search_flight", "description": "Search for a flight from a specific airport and arriving at a specific airport.", "parameters": {"type": "object", "properties": {"departure_airport": {"type": "string", "description": "Departure airport name (extracted as user expression. Example: Los Angeles International Airport, Gimhae Airport, etc.)"}, "arrival_airport": {"type": "string", "description": "Arrival airport name (extracting as it is, Example: Los Angeles International Airport, Gimhae Airport, etc.)"}, "departure_date": {"type": "string", "description": "Departure Date (YYYY-MM-DD)"}}, "required": ["departure_airport", "arrival_airport", "departure_date"]}}}, {"type": "function", "function": {"name": "convert_euro_to_koruna", "description": "Convert the Given EUR amount to Czech Coruna (CZK)", "parameters": {"type": "object", "properties": {"amount_euro": {"type": "number", "description": "EUR amount to convert"}, "exchange_rate_eur_to_czk": {"type": "number", "description": "Exchange rate from EUR to CZK"}}, "required": ["amount_euro", "exchange_rate_eur_to_czk"]}}}, {"type": "function", "function": {"name": "generate_random_password", "description": "Create any password with certain conditions", "parameters": {"type": "object", "properties": {"length": {"type": "integer", "description": "Password length"}, "include_uppercase": {"type": "boolean", "description": "Including alphabet uppercase letters"}, "include_lowercase": {"type": "boolean", "description": "Including alphabet lowercase"}, "include_numbers": {"type": "boolean", "description": "Whether the number includes"}}, "required": ["length", "include_uppercase", "include_lowercase", "include_numbers"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell us the name of the departure airport."}, "acceptable_arguments": null}
{"serial_num": 145, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Find some flight information from Haneda Airport."}, {"role": "assistant", "content": "Please tell us the name of the arrival airport and the departure date."}, {"role": "user", "content": "Incheon International Airport arrives"}], "input_tools": [{"type": "function", "function": {"name": "convert_to_lowercase", "description": "Converted string to lowercase", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "String to be converted into lowercase"}}, "required": ["text"]}}}, {"type": "function", "function": {"name": "reserve_restaurant", "description": "Reservation of the restaurant with the information provided by the user. Example) Please make a reservation at 6 pm tonight", "parameters": {"type": "object", "properties": {"store": {"type": "string", "description": "Restaurant name"}, "reservationDate": {"type": "string", "description": "Reservation date (YYYY-MM-DD)"}, "reservationTime": {"type": "string", "description": "Reservation time (hh: mm)"}, "numberOfPeople": {"type": "integer", "description": "Number of reservations"}}, "required": ["store", "reservationDate", "reservationTime", "numberOfPeople"]}}}, {"type": "function", "function": {"name": "search_flight", "description": "Search for a flight from a specific airport and arriving at a specific airport.", "parameters": {"type": "object", "properties": {"departure_airport": {"type": "string", "description": "Departure airport name (extracted as user expression. Example: Los Angeles International Airport, Gimhae Airport, etc.)"}, "arrival_airport": {"type": "string", "description": "Arrival airport name (extracting as it is, Example: Los Angeles International Airport, Gimhae Airport, etc.)"}, "departure_date": {"type": "string", "description": "Departure Date (YYYY-MM-DD)"}}, "required": ["departure_airport", "arrival_airport", "departure_date"]}}}, {"type": "function", "function": {"name": "convert_euro_to_koruna", "description": "Convert the Given EUR amount to Czech Coruna (CZK)", "parameters": {"type": "object", "properties": {"amount_euro": {"type": "number", "description": "EUR amount to convert"}, "exchange_rate_eur_to_czk": {"type": "number", "description": "Exchange rate from EUR to CZK"}}, "required": ["amount_euro", "exchange_rate_eur_to_czk"]}}}, {"type": "function", "function": {"name": "generate_random_password", "description": "Create any password with certain conditions", "parameters": {"type": "object", "properties": {"length": {"type": "integer", "description": "Password length"}, "include_uppercase": {"type": "boolean", "description": "Including alphabet uppercase letters"}, "include_lowercase": {"type": "boolean", "description": "Including alphabet lowercase"}, "include_numbers": {"type": "boolean", "description": "Whether the number includes"}}, "required": ["length", "include_uppercase", "include_lowercase", "include_numbers"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the departure date."}, "acceptable_arguments": null}
{"serial_num": 146, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Find some flight information arriving at Incheon International Airport."}, {"role": "assistant", "content": "Please tell us the departure airport name and departure date."}, {"role": "user", "content": "Depart from Haneda Airport."}], "input_tools": [{"type": "function", "function": {"name": "convert_to_lowercase", "description": "Converted string to lowercase", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "String to be converted into lowercase"}}, "required": ["text"]}}}, {"type": "function", "function": {"name": "reserve_restaurant", "description": "Reservation of the restaurant with the information provided by the user. Example) Please make a reservation at 6 pm tonight", "parameters": {"type": "object", "properties": {"store": {"type": "string", "description": "Restaurant name"}, "reservationDate": {"type": "string", "description": "Reservation date (YYYY-MM-DD)"}, "reservationTime": {"type": "string", "description": "Reservation time (hh: mm)"}, "numberOfPeople": {"type": "integer", "description": "Number of reservations"}}, "required": ["store", "reservationDate", "reservationTime", "numberOfPeople"]}}}, {"type": "function", "function": {"name": "search_flight", "description": "Search for a flight from a specific airport and arriving at a specific airport.", "parameters": {"type": "object", "properties": {"departure_airport": {"type": "string", "description": "Departure airport name (extracted as user expression. Example: Los Angeles International Airport, Gimhae Airport, etc.)"}, "arrival_airport": {"type": "string", "description": "Arrival airport name (extracting as it is, Example: Los Angeles International Airport, Gimhae Airport, etc.)"}, "departure_date": {"type": "string", "description": "Departure Date (YYYY-MM-DD)"}}, "required": ["departure_airport", "arrival_airport", "departure_date"]}}}, {"type": "function", "function": {"name": "convert_euro_to_koruna", "description": "Convert the Given EUR amount to Czech Coruna (CZK)", "parameters": {"type": "object", "properties": {"amount_euro": {"type": "number", "description": "EUR amount to convert"}, "exchange_rate_eur_to_czk": {"type": "number", "description": "Exchange rate from EUR to CZK"}}, "required": ["amount_euro", "exchange_rate_eur_to_czk"]}}}, {"type": "function", "function": {"name": "generate_random_password", "description": "Create any password with certain conditions", "parameters": {"type": "object", "properties": {"length": {"type": "integer", "description": "Password length"}, "include_uppercase": {"type": "boolean", "description": "Including alphabet uppercase letters"}, "include_lowercase": {"type": "boolean", "description": "Including alphabet lowercase"}, "include_numbers": {"type": "boolean", "description": "Whether the number includes"}}, "required": ["length", "include_uppercase", "include_lowercase", "include_numbers"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the departure date."}, "acceptable_arguments": null}
{"serial_num": 147, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Find some flight information from Haneda Airport."}, {"role": "assistant", "content": "Please tell us the name of the arrival airport and the departure date."}, {"role": "user", "content": "September 29, 24"}], "input_tools": [{"type": "function", "function": {"name": "convert_to_lowercase", "description": "Converted string to lowercase", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "String to be converted into lowercase"}}, "required": ["text"]}}}, {"type": "function", "function": {"name": "reserve_restaurant", "description": "Reservation of the restaurant with the information provided by the user. Example) Please make a reservation at 6 pm tonight", "parameters": {"type": "object", "properties": {"store": {"type": "string", "description": "Restaurant name"}, "reservationDate": {"type": "string", "description": "Reservation date (YYYY-MM-DD)"}, "reservationTime": {"type": "string", "description": "Reservation time (hh: mm)"}, "numberOfPeople": {"type": "integer", "description": "Number of reservations"}}, "required": ["store", "reservationDate", "reservationTime", "numberOfPeople"]}}}, {"type": "function", "function": {"name": "search_flight", "description": "Search for a flight from a specific airport and arriving at a specific airport.", "parameters": {"type": "object", "properties": {"departure_airport": {"type": "string", "description": "Departure airport name (extracted as user expression. Example: Los Angeles International Airport, Gimhae Airport, etc.)"}, "arrival_airport": {"type": "string", "description": "Arrival airport name (extracting as it is, Example: Los Angeles International Airport, Gimhae Airport, etc.)"}, "departure_date": {"type": "string", "description": "Departure Date (YYYY-MM-DD)"}}, "required": ["departure_airport", "arrival_airport", "departure_date"]}}}, {"type": "function", "function": {"name": "convert_euro_to_koruna", "description": "Convert the Given EUR amount to Czech Coruna (CZK)", "parameters": {"type": "object", "properties": {"amount_euro": {"type": "number", "description": "EUR amount to convert"}, "exchange_rate_eur_to_czk": {"type": "number", "description": "Exchange rate from EUR to CZK"}}, "required": ["amount_euro", "exchange_rate_eur_to_czk"]}}}, {"type": "function", "function": {"name": "generate_random_password", "description": "Create any password with certain conditions", "parameters": {"type": "object", "properties": {"length": {"type": "integer", "description": "Password length"}, "include_uppercase": {"type": "boolean", "description": "Including alphabet uppercase letters"}, "include_lowercase": {"type": "boolean", "description": "Including alphabet lowercase"}, "include_numbers": {"type": "boolean", "description": "Whether the number includes"}}, "required": ["length", "include_uppercase", "include_lowercase", "include_numbers"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the name of the arrival airport."}, "acceptable_arguments": null}
{"serial_num": 148, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Find some plane information on September 29, 24"}, {"role": "assistant", "content": "Please tell us the departure airport name and arrival airport name."}, {"role": "user", "content": "Haneda Airport Departure"}], "input_tools": [{"type": "function", "function": {"name": "convert_to_lowercase", "description": "Converted string to lowercase", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "String to be converted into lowercase"}}, "required": ["text"]}}}, {"type": "function", "function": {"name": "reserve_restaurant", "description": "Reservation of the restaurant with the information provided by the user. Example) Please make a reservation at 6 pm tonight", "parameters": {"type": "object", "properties": {"store": {"type": "string", "description": "Restaurant name"}, "reservationDate": {"type": "string", "description": "Reservation date (YYYY-MM-DD)"}, "reservationTime": {"type": "string", "description": "Reservation time (hh: mm)"}, "numberOfPeople": {"type": "integer", "description": "Number of reservations"}}, "required": ["store", "reservationDate", "reservationTime", "numberOfPeople"]}}}, {"type": "function", "function": {"name": "search_flight", "description": "Search for a flight from a specific airport and arriving at a specific airport.", "parameters": {"type": "object", "properties": {"departure_airport": {"type": "string", "description": "Departure airport name (extracted as user expression. Example: Los Angeles International Airport, Gimhae Airport, etc.)"}, "arrival_airport": {"type": "string", "description": "Arrival airport name (extracting as it is, Example: Los Angeles International Airport, Gimhae Airport, etc.)"}, "departure_date": {"type": "string", "description": "Departure Date (YYYY-MM-DD)"}}, "required": ["departure_airport", "arrival_airport", "departure_date"]}}}, {"type": "function", "function": {"name": "convert_euro_to_koruna", "description": "Convert the Given EUR amount to Czech Coruna (CZK)", "parameters": {"type": "object", "properties": {"amount_euro": {"type": "number", "description": "EUR amount to convert"}, "exchange_rate_eur_to_czk": {"type": "number", "description": "Exchange rate from EUR to CZK"}}, "required": ["amount_euro", "exchange_rate_eur_to_czk"]}}}, {"type": "function", "function": {"name": "generate_random_password", "description": "Create any password with certain conditions", "parameters": {"type": "object", "properties": {"length": {"type": "integer", "description": "Password length"}, "include_uppercase": {"type": "boolean", "description": "Including alphabet uppercase letters"}, "include_lowercase": {"type": "boolean", "description": "Including alphabet lowercase"}, "include_numbers": {"type": "boolean", "description": "Whether the number includes"}}, "required": ["length", "include_uppercase", "include_lowercase", "include_numbers"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the name of the arrival airport."}, "acceptable_arguments": null}
{"serial_num": 149, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Find some flight information arriving at Incheon International Airport."}, {"role": "assistant", "content": "Please tell us the name of the departure airport and the date of departure."}, {"role": "user", "content": "September 29, 24"}], "input_tools": [{"type": "function", "function": {"name": "convert_to_lowercase", "description": "Converted string to lowercase", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "String to be converted into lowercase"}}, "required": ["text"]}}}, {"type": "function", "function": {"name": "reserve_restaurant", "description": "Reservation of the restaurant with the information provided by the user. Example) Please make a reservation at 6 pm tonight", "parameters": {"type": "object", "properties": {"store": {"type": "string", "description": "Restaurant name"}, "reservationDate": {"type": "string", "description": "Reservation date (YYYY-MM-DD)"}, "reservationTime": {"type": "string", "description": "Reservation time (hh: mm)"}, "numberOfPeople": {"type": "integer", "description": "Number of reservations"}}, "required": ["store", "reservationDate", "reservationTime", "numberOfPeople"]}}}, {"type": "function", "function": {"name": "search_flight", "description": "Search for a flight from a specific airport and arriving at a specific airport.", "parameters": {"type": "object", "properties": {"departure_airport": {"type": "string", "description": "Departure airport name (extracted as user expression. Example: Los Angeles International Airport, Gimhae Airport, etc.)"}, "arrival_airport": {"type": "string", "description": "Arrival airport name (extracting as it is, Example: Los Angeles International Airport, Gimhae Airport, etc.)"}, "departure_date": {"type": "string", "description": "Departure Date (YYYY-MM-DD)"}}, "required": ["departure_airport", "arrival_airport", "departure_date"]}}}, {"type": "function", "function": {"name": "convert_euro_to_koruna", "description": "Convert the Given EUR amount to Czech Coruna (CZK)", "parameters": {"type": "object", "properties": {"amount_euro": {"type": "number", "description": "EUR amount to convert"}, "exchange_rate_eur_to_czk": {"type": "number", "description": "Exchange rate from EUR to CZK"}}, "required": ["amount_euro", "exchange_rate_eur_to_czk"]}}}, {"type": "function", "function": {"name": "generate_random_password", "description": "Create any password with certain conditions", "parameters": {"type": "object", "properties": {"length": {"type": "integer", "description": "Password length"}, "include_uppercase": {"type": "boolean", "description": "Including alphabet uppercase letters"}, "include_lowercase": {"type": "boolean", "description": "Including alphabet lowercase"}, "include_numbers": {"type": "boolean", "description": "Whether the number includes"}}, "required": ["length", "include_uppercase", "include_lowercase", "include_numbers"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell us the name of the departure airport."}, "acceptable_arguments": null}
{"serial_num": 150, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Find some plane information on September 29, 24"}, {"role": "assistant", "content": "Please tell us the departure airport name and arrival airport name."}, {"role": "user", "content": "Airplane"}], "input_tools": [{"type": "function", "function": {"name": "convert_to_lowercase", "description": "Converted string to lowercase", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "String to be converted into lowercase"}}, "required": ["text"]}}}, {"type": "function", "function": {"name": "reserve_restaurant", "description": "Reservation of the restaurant with the information provided by the user. Example) Please make a reservation at 6 pm tonight", "parameters": {"type": "object", "properties": {"store": {"type": "string", "description": "Restaurant name"}, "reservationDate": {"type": "string", "description": "Reservation date (YYYY-MM-DD)"}, "reservationTime": {"type": "string", "description": "Reservation time (hh: mm)"}, "numberOfPeople": {"type": "integer", "description": "Number of reservations"}}, "required": ["store", "reservationDate", "reservationTime", "numberOfPeople"]}}}, {"type": "function", "function": {"name": "search_flight", "description": "Search for a flight from a specific airport and arriving at a specific airport.", "parameters": {"type": "object", "properties": {"departure_airport": {"type": "string", "description": "Departure airport name (extracted as user expression. Example: Los Angeles International Airport, Gimhae Airport, etc.)"}, "arrival_airport": {"type": "string", "description": "Arrival airport name (extracting as it is, Example: Los Angeles International Airport, Gimhae Airport, etc.)"}, "departure_date": {"type": "string", "description": "Departure Date (YYYY-MM-DD)"}}, "required": ["departure_airport", "arrival_airport", "departure_date"]}}}, {"type": "function", "function": {"name": "convert_euro_to_koruna", "description": "Convert the Given EUR amount to Czech Coruna (CZK)", "parameters": {"type": "object", "properties": {"amount_euro": {"type": "number", "description": "EUR amount to convert"}, "exchange_rate_eur_to_czk": {"type": "number", "description": "Exchange rate from EUR to CZK"}}, "required": ["amount_euro", "exchange_rate_eur_to_czk"]}}}, {"type": "function", "function": {"name": "generate_random_password", "description": "Create any password with certain conditions", "parameters": {"type": "object", "properties": {"length": {"type": "integer", "description": "Password length"}, "include_uppercase": {"type": "boolean", "description": "Including alphabet uppercase letters"}, "include_lowercase": {"type": "boolean", "description": "Including alphabet lowercase"}, "include_numbers": {"type": "boolean", "description": "Whether the number includes"}}, "required": ["length", "include_uppercase", "include_lowercase", "include_numbers"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell us the name of the departure airport."}, "acceptable_arguments": null}
{"serial_num": 151, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Find some flight information."}, {"role": "assistant", "content": "Please tell us the departure airport name, arrival airport name, and departure date."}, {"role": "user", "content": "Airline from Haneda Airport"}, {"role": "assistant", "content": "Please tell us the name of the arrival airport and the departure date."}, {"role": "user", "content": "Incheon International Airport arrives"}], "input_tools": [{"type": "function", "function": {"name": "convert_to_lowercase", "description": "Converted string to lowercase", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "String to be converted into lowercase"}}, "required": ["text"]}}}, {"type": "function", "function": {"name": "reserve_restaurant", "description": "Reservation of the restaurant with the information provided by the user. Example) Please make a reservation at 6 pm tonight", "parameters": {"type": "object", "properties": {"store": {"type": "string", "description": "Restaurant name"}, "reservationDate": {"type": "string", "description": "Reservation date (YYYY-MM-DD)"}, "reservationTime": {"type": "string", "description": "Reservation time (hh: mm)"}, "numberOfPeople": {"type": "integer", "description": "Number of reservations"}}, "required": ["store", "reservationDate", "reservationTime", "numberOfPeople"]}}}, {"type": "function", "function": {"name": "search_flight", "description": "Search for a flight from a specific airport and arriving at a specific airport.", "parameters": {"type": "object", "properties": {"departure_airport": {"type": "string", "description": "Departure airport name (extracted as user expression. Example: Los Angeles International Airport, Gimhae Airport, etc.)"}, "arrival_airport": {"type": "string", "description": "Arrival airport name (extracting as it is, Example: Los Angeles International Airport, Gimhae Airport, etc.)"}, "departure_date": {"type": "string", "description": "Departure Date (YYYY-MM-DD)"}}, "required": ["departure_airport", "arrival_airport", "departure_date"]}}}, {"type": "function", "function": {"name": "convert_euro_to_koruna", "description": "Convert the Given EUR amount to Czech Coruna (CZK)", "parameters": {"type": "object", "properties": {"amount_euro": {"type": "number", "description": "EUR amount to convert"}, "exchange_rate_eur_to_czk": {"type": "number", "description": "Exchange rate from EUR to CZK"}}, "required": ["amount_euro", "exchange_rate_eur_to_czk"]}}}, {"type": "function", "function": {"name": "generate_random_password", "description": "Create any password with certain conditions", "parameters": {"type": "object", "properties": {"length": {"type": "integer", "description": "Password length"}, "include_uppercase": {"type": "boolean", "description": "Including alphabet uppercase letters"}, "include_lowercase": {"type": "boolean", "description": "Including alphabet lowercase"}, "include_numbers": {"type": "boolean", "description": "Whether the number includes"}}, "required": ["length", "include_uppercase", "include_lowercase", "include_numbers"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the departure date."}, "acceptable_arguments": null}
{"serial_num": 152, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Find some flight information."}, {"role": "assistant", "content": "Please tell us the departure airport name, arrival airport name, and departure date."}, {"role": "user", "content": "Airlines arriving at Incheon International Airport."}, {"role": "assistant", "content": "Please tell us the departure airport name and departure date."}, {"role": "user", "content": "Depart from Haneda Airport."}], "input_tools": [{"type": "function", "function": {"name": "convert_to_lowercase", "description": "Converted string to lowercase", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "String to be converted into lowercase"}}, "required": ["text"]}}}, {"type": "function", "function": {"name": "reserve_restaurant", "description": "Reservation of the restaurant with the information provided by the user. Example) Please make a reservation at 6 pm tonight", "parameters": {"type": "object", "properties": {"store": {"type": "string", "description": "Restaurant name"}, "reservationDate": {"type": "string", "description": "Reservation date (YYYY-MM-DD)"}, "reservationTime": {"type": "string", "description": "Reservation time (hh: mm)"}, "numberOfPeople": {"type": "integer", "description": "Number of reservations"}}, "required": ["store", "reservationDate", "reservationTime", "numberOfPeople"]}}}, {"type": "function", "function": {"name": "search_flight", "description": "Search for a flight from a specific airport and arriving at a specific airport.", "parameters": {"type": "object", "properties": {"departure_airport": {"type": "string", "description": "Departure airport name (extracted as user expression. Example: Los Angeles International Airport, Gimhae Airport, etc.)"}, "arrival_airport": {"type": "string", "description": "Arrival airport name (extracting as it is, Example: Los Angeles International Airport, Gimhae Airport, etc.)"}, "departure_date": {"type": "string", "description": "Departure Date (YYYY-MM-DD)"}}, "required": ["departure_airport", "arrival_airport", "departure_date"]}}}, {"type": "function", "function": {"name": "convert_euro_to_koruna", "description": "Convert the Given EUR amount to Czech Coruna (CZK)", "parameters": {"type": "object", "properties": {"amount_euro": {"type": "number", "description": "EUR amount to convert"}, "exchange_rate_eur_to_czk": {"type": "number", "description": "Exchange rate from EUR to CZK"}}, "required": ["amount_euro", "exchange_rate_eur_to_czk"]}}}, {"type": "function", "function": {"name": "generate_random_password", "description": "Create any password with certain conditions", "parameters": {"type": "object", "properties": {"length": {"type": "integer", "description": "Password length"}, "include_uppercase": {"type": "boolean", "description": "Including alphabet uppercase letters"}, "include_lowercase": {"type": "boolean", "description": "Including alphabet lowercase"}, "include_numbers": {"type": "boolean", "description": "Whether the number includes"}}, "required": ["length", "include_uppercase", "include_lowercase", "include_numbers"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the departure date."}, "acceptable_arguments": null}
{"serial_num": 153, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Find some flight information."}, {"role": "assistant", "content": "Please tell us the departure airport name, arrival airport name, and departure date."}, {"role": "user", "content": "Airlines from Haneda Airport."}, {"role": "assistant", "content": "Please tell us the name of the arrival airport and the departure date."}, {"role": "user", "content": "September 29, 24"}], "input_tools": [{"type": "function", "function": {"name": "convert_to_lowercase", "description": "Converted string to lowercase", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "String to be converted into lowercase"}}, "required": ["text"]}}}, {"type": "function", "function": {"name": "reserve_restaurant", "description": "Reservation of the restaurant with the information provided by the user. Example) Please make a reservation at 6 pm tonight", "parameters": {"type": "object", "properties": {"store": {"type": "string", "description": "Restaurant name"}, "reservationDate": {"type": "string", "description": "Reservation date (YYYY-MM-DD)"}, "reservationTime": {"type": "string", "description": "Reservation time (hh: mm)"}, "numberOfPeople": {"type": "integer", "description": "Number of reservations"}}, "required": ["store", "reservationDate", "reservationTime", "numberOfPeople"]}}}, {"type": "function", "function": {"name": "search_flight", "description": "Search for a flight from a specific airport and arriving at a specific airport.", "parameters": {"type": "object", "properties": {"departure_airport": {"type": "string", "description": "Departure airport name (extracted as user expression. Example: Los Angeles International Airport, Gimhae Airport, etc.)"}, "arrival_airport": {"type": "string", "description": "Arrival airport name (extracting as it is, Example: Los Angeles International Airport, Gimhae Airport, etc.)"}, "departure_date": {"type": "string", "description": "Departure Date (YYYY-MM-DD)"}}, "required": ["departure_airport", "arrival_airport", "departure_date"]}}}, {"type": "function", "function": {"name": "convert_euro_to_koruna", "description": "Convert the Given EUR amount to Czech Coruna (CZK)", "parameters": {"type": "object", "properties": {"amount_euro": {"type": "number", "description": "EUR amount to convert"}, "exchange_rate_eur_to_czk": {"type": "number", "description": "Exchange rate from EUR to CZK"}}, "required": ["amount_euro", "exchange_rate_eur_to_czk"]}}}, {"type": "function", "function": {"name": "generate_random_password", "description": "Create any password with certain conditions", "parameters": {"type": "object", "properties": {"length": {"type": "integer", "description": "Password length"}, "include_uppercase": {"type": "boolean", "description": "Including alphabet uppercase letters"}, "include_lowercase": {"type": "boolean", "description": "Including alphabet lowercase"}, "include_numbers": {"type": "boolean", "description": "Whether the number includes"}}, "required": ["length", "include_uppercase", "include_lowercase", "include_numbers"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the name of the arrival airport."}, "acceptable_arguments": null}
{"serial_num": 154, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Find some flight information."}, {"role": "assistant", "content": "Please tell us the departure airport name, arrival airport name, and departure date."}, {"role": "user", "content": "Find me on September 29, 24"}, {"role": "assistant", "content": "Please tell us the departure airport name and arrival airport name."}, {"role": "user", "content": "Haneda Airport Departure"}], "input_tools": [{"type": "function", "function": {"name": "convert_to_lowercase", "description": "Converted string to lowercase", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "String to be converted into lowercase"}}, "required": ["text"]}}}, {"type": "function", "function": {"name": "reserve_restaurant", "description": "Reservation of the restaurant with the information provided by the user. Example) Please make a reservation at 6 pm tonight", "parameters": {"type": "object", "properties": {"store": {"type": "string", "description": "Restaurant name"}, "reservationDate": {"type": "string", "description": "Reservation date (YYYY-MM-DD)"}, "reservationTime": {"type": "string", "description": "Reservation time (hh: mm)"}, "numberOfPeople": {"type": "integer", "description": "Number of reservations"}}, "required": ["store", "reservationDate", "reservationTime", "numberOfPeople"]}}}, {"type": "function", "function": {"name": "search_flight", "description": "Search for a flight from a specific airport and arriving at a specific airport.", "parameters": {"type": "object", "properties": {"departure_airport": {"type": "string", "description": "Departure airport name (extracted as user expression. Example: Los Angeles International Airport, Gimhae Airport, etc.)"}, "arrival_airport": {"type": "string", "description": "Arrival airport name (extracting as it is, Example: Los Angeles International Airport, Gimhae Airport, etc.)"}, "departure_date": {"type": "string", "description": "Departure Date (YYYY-MM-DD)"}}, "required": ["departure_airport", "arrival_airport", "departure_date"]}}}, {"type": "function", "function": {"name": "convert_euro_to_koruna", "description": "Convert the Given EUR amount to Czech Coruna (CZK)", "parameters": {"type": "object", "properties": {"amount_euro": {"type": "number", "description": "EUR amount to convert"}, "exchange_rate_eur_to_czk": {"type": "number", "description": "Exchange rate from EUR to CZK"}}, "required": ["amount_euro", "exchange_rate_eur_to_czk"]}}}, {"type": "function", "function": {"name": "generate_random_password", "description": "Create any password with certain conditions", "parameters": {"type": "object", "properties": {"length": {"type": "integer", "description": "Password length"}, "include_uppercase": {"type": "boolean", "description": "Including alphabet uppercase letters"}, "include_lowercase": {"type": "boolean", "description": "Including alphabet lowercase"}, "include_numbers": {"type": "boolean", "description": "Whether the number includes"}}, "required": ["length", "include_uppercase", "include_lowercase", "include_numbers"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the name of the arrival airport."}, "acceptable_arguments": null}
{"serial_num": 155, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Find some flight information."}, {"role": "assistant", "content": "Please tell us the departure airport name, arrival airport name, and departure date."}, {"role": "user", "content": "Airlines arriving at Incheon International Airport"}, {"role": "assistant", "content": "Please tell us the name of the departure airport and the date of departure."}, {"role": "user", "content": "September 29, 24"}], "input_tools": [{"type": "function", "function": {"name": "convert_to_lowercase", "description": "Converted string to lowercase", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "String to be converted into lowercase"}}, "required": ["text"]}}}, {"type": "function", "function": {"name": "reserve_restaurant", "description": "Reservation of the restaurant with the information provided by the user. Example) Please make a reservation at 6 pm tonight", "parameters": {"type": "object", "properties": {"store": {"type": "string", "description": "Restaurant name"}, "reservationDate": {"type": "string", "description": "Reservation date (YYYY-MM-DD)"}, "reservationTime": {"type": "string", "description": "Reservation time (hh: mm)"}, "numberOfPeople": {"type": "integer", "description": "Number of reservations"}}, "required": ["store", "reservationDate", "reservationTime", "numberOfPeople"]}}}, {"type": "function", "function": {"name": "search_flight", "description": "Search for a flight from a specific airport and arriving at a specific airport.", "parameters": {"type": "object", "properties": {"departure_airport": {"type": "string", "description": "Departure airport name (extracted as user expression. Example: Los Angeles International Airport, Gimhae Airport, etc.)"}, "arrival_airport": {"type": "string", "description": "Arrival airport name (extracting as it is, Example: Los Angeles International Airport, Gimhae Airport, etc.)"}, "departure_date": {"type": "string", "description": "Departure Date (YYYY-MM-DD)"}}, "required": ["departure_airport", "arrival_airport", "departure_date"]}}}, {"type": "function", "function": {"name": "convert_euro_to_koruna", "description": "Convert the Given EUR amount to Czech Coruna (CZK)", "parameters": {"type": "object", "properties": {"amount_euro": {"type": "number", "description": "EUR amount to convert"}, "exchange_rate_eur_to_czk": {"type": "number", "description": "Exchange rate from EUR to CZK"}}, "required": ["amount_euro", "exchange_rate_eur_to_czk"]}}}, {"type": "function", "function": {"name": "generate_random_password", "description": "Create any password with certain conditions", "parameters": {"type": "object", "properties": {"length": {"type": "integer", "description": "Password length"}, "include_uppercase": {"type": "boolean", "description": "Including alphabet uppercase letters"}, "include_lowercase": {"type": "boolean", "description": "Including alphabet lowercase"}, "include_numbers": {"type": "boolean", "description": "Whether the number includes"}}, "required": ["length", "include_uppercase", "include_lowercase", "include_numbers"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell us the name of the departure airport."}, "acceptable_arguments": null}
{"serial_num": 156, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Find some flight information."}, {"role": "assistant", "content": "Please tell us the departure airport name, arrival airport name, and departure date."}, {"role": "user", "content": "Find a plane on September 29, 24"}, {"role": "assistant", "content": "Please tell us the departure airport name and arrival airport name."}, {"role": "user", "content": "Airplane"}], "input_tools": [{"type": "function", "function": {"name": "convert_to_lowercase", "description": "Converted string to lowercase", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "String to be converted into lowercase"}}, "required": ["text"]}}}, {"type": "function", "function": {"name": "reserve_restaurant", "description": "Reservation of the restaurant with the information provided by the user. Example) Please make a reservation at 6 pm tonight", "parameters": {"type": "object", "properties": {"store": {"type": "string", "description": "Restaurant name"}, "reservationDate": {"type": "string", "description": "Reservation date (YYYY-MM-DD)"}, "reservationTime": {"type": "string", "description": "Reservation time (hh: mm)"}, "numberOfPeople": {"type": "integer", "description": "Number of reservations"}}, "required": ["store", "reservationDate", "reservationTime", "numberOfPeople"]}}}, {"type": "function", "function": {"name": "search_flight", "description": "Search for a flight from a specific airport and arriving at a specific airport.", "parameters": {"type": "object", "properties": {"departure_airport": {"type": "string", "description": "Departure airport name (extracted as user expression. Example: Los Angeles International Airport, Gimhae Airport, etc.)"}, "arrival_airport": {"type": "string", "description": "Arrival airport name (extracting as it is, Example: Los Angeles International Airport, Gimhae Airport, etc.)"}, "departure_date": {"type": "string", "description": "Departure Date (YYYY-MM-DD)"}}, "required": ["departure_airport", "arrival_airport", "departure_date"]}}}, {"type": "function", "function": {"name": "convert_euro_to_koruna", "description": "Convert the Given EUR amount to Czech Coruna (CZK)", "parameters": {"type": "object", "properties": {"amount_euro": {"type": "number", "description": "EUR amount to convert"}, "exchange_rate_eur_to_czk": {"type": "number", "description": "Exchange rate from EUR to CZK"}}, "required": ["amount_euro", "exchange_rate_eur_to_czk"]}}}, {"type": "function", "function": {"name": "generate_random_password", "description": "Create any password with certain conditions", "parameters": {"type": "object", "properties": {"length": {"type": "integer", "description": "Password length"}, "include_uppercase": {"type": "boolean", "description": "Including alphabet uppercase letters"}, "include_lowercase": {"type": "boolean", "description": "Including alphabet lowercase"}, "include_numbers": {"type": "boolean", "description": "Whether the number includes"}}, "required": ["length", "include_uppercase", "include_lowercase", "include_numbers"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell us the name of the departure airport."}, "acceptable_arguments": null}
{"serial_num": 157, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Can you find and compare the services that can clean housing in Seogwipo, Jeju Island?"}], "input_tools": [{"type": "function", "function": {"name": "check_traffic_status", "description": "Inquire the current traffic situation on a particular path.", "parameters": {"type": "object", "properties": {"start_location": {"type": "string", "description": "Departure"}, "end_location": {"type": "string", "description": "Arrival point"}}, "required": ["start_location", "end_location"]}}}, {"type": "function", "function": {"name": "CheckTaxRefund", "description": "Search for the user's tax refund.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "The name of the tax paymenter"}, "birth": {"type": "string", "description": "Date of birth of tax payers (YYYY-MM-DD)"}, "phone_number": {"type": "string", "description": "Contact of tax payers"}}, "required": ["name", "birth", "phone_number"]}}}, {"type": "function", "function": {"name": "compareCleaningServices", "description": "Compare the service of the cleaning company and provide information.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Location or area where cleaning services are needed"}, "requested_date": {"type": "string", "format": "date", "description": "Service date (extract user as it is. Example: next Monday, January 1, 2022, etc.)"}, "size": {"type": "string", "description": "Pyeongsu or area of ​​the house (flat, square meter)"}}, "required": ["location", "requested_date", "size"]}}}, {"type": "function", "function": {"name": "convert_pyeong_to_squaremeter", "description": "Convert it to \"평\"을 입력받아서, \"제곱미터\".", "parameters": {"type": "object", "properties": {"pyeong": {"type": "number", "description": "Pyeongsu to be transformed"}}, "required": ["pyeong"]}}}, {"type": "function", "function": {"name": "generate_syntax_tree_from_text", "description": "Create a syntax tree for a given text", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Text to create a syntax tree"}}, "required": ["text"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell us the dates that need the service and the flat or area of ​​the house."}, "acceptable_arguments": null}
{"serial_num": 158, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Can you find and compare the services that can be cleaned next Tuesday?"}], "input_tools": [{"type": "function", "function": {"name": "check_traffic_status", "description": "Inquire the current traffic situation on a particular path.", "parameters": {"type": "object", "properties": {"start_location": {"type": "string", "description": "Departure"}, "end_location": {"type": "string", "description": "Arrival point"}}, "required": ["start_location", "end_location"]}}}, {"type": "function", "function": {"name": "CheckTaxRefund", "description": "Search for the user's tax refund.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "The name of the tax paymenter"}, "birth": {"type": "string", "description": "Date of birth of tax payers (YYYY-MM-DD)"}, "phone_number": {"type": "string", "description": "Contact of tax payers"}}, "required": ["name", "birth", "phone_number"]}}}, {"type": "function", "function": {"name": "compareCleaningServices", "description": "Compare the service of the cleaning company and provide information.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Location or area where cleaning services are needed"}, "requested_date": {"type": "string", "format": "date", "description": "Service date (extract user as it is. Example: next Monday, January 1, 2022, etc.)"}, "size": {"type": "string", "description": "Pyeongsu or area of ​​the house (flat, square meter)"}}, "required": ["location", "requested_date", "size"]}}}, {"type": "function", "function": {"name": "convert_pyeong_to_squaremeter", "description": "Convert it to \"평\"을 입력받아서, \"제곱미터\".", "parameters": {"type": "object", "properties": {"pyeong": {"type": "number", "description": "Pyeongsu to be transformed"}}, "required": ["pyeong"]}}}, {"type": "function", "function": {"name": "generate_syntax_tree_from_text", "description": "Create a syntax tree for a given text", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Text to create a syntax tree"}}, "required": ["text"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me where the service is needed and the flat water or area of ​​the house."}, "acceptable_arguments": null}
{"serial_num": 159, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Can you find and compare the service that can clean the 60 pyeong housing?"}], "input_tools": [{"type": "function", "function": {"name": "check_traffic_status", "description": "Inquire the current traffic situation on a particular path.", "parameters": {"type": "object", "properties": {"start_location": {"type": "string", "description": "Departure"}, "end_location": {"type": "string", "description": "Arrival point"}}, "required": ["start_location", "end_location"]}}}, {"type": "function", "function": {"name": "CheckTaxRefund", "description": "Search for the user's tax refund.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "The name of the tax paymenter"}, "birth": {"type": "string", "description": "Date of birth of tax payers (YYYY-MM-DD)"}, "phone_number": {"type": "string", "description": "Contact of tax payers"}}, "required": ["name", "birth", "phone_number"]}}}, {"type": "function", "function": {"name": "compareCleaningServices", "description": "Compare the service of the cleaning company and provide information.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Location or area where cleaning services are needed"}, "requested_date": {"type": "string", "format": "date", "description": "Service date (extract user as it is. Example: next Monday, January 1, 2022, etc.)"}, "size": {"type": "string", "description": "Pyeongsu or area of ​​the house (flat, square meter)"}}, "required": ["location", "requested_date", "size"]}}}, {"type": "function", "function": {"name": "convert_pyeong_to_squaremeter", "description": "Convert it to \"평\"을 입력받아서, \"제곱미터\".", "parameters": {"type": "object", "properties": {"pyeong": {"type": "number", "description": "Pyeongsu to be transformed"}}, "required": ["pyeong"]}}}, {"type": "function", "function": {"name": "generate_syntax_tree_from_text", "description": "Create a syntax tree for a given text", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Text to create a syntax tree"}}, "required": ["text"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the location and date you need."}, "acceptable_arguments": null}
{"serial_num": 160, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Can you find and compare the services that can be cleaned?"}, {"role": "assistant", "content": "Please tell us the location and date you need the service, the flat water or area of ​​the house."}, {"role": "user", "content": "In Seogwipo, Jeju Island"}], "input_tools": [{"type": "function", "function": {"name": "check_traffic_status", "description": "Inquire the current traffic situation on a particular path.", "parameters": {"type": "object", "properties": {"start_location": {"type": "string", "description": "Departure"}, "end_location": {"type": "string", "description": "Arrival point"}}, "required": ["start_location", "end_location"]}}}, {"type": "function", "function": {"name": "CheckTaxRefund", "description": "Search for the user's tax refund.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "The name of the tax paymenter"}, "birth": {"type": "string", "description": "Date of birth of tax payers (YYYY-MM-DD)"}, "phone_number": {"type": "string", "description": "Contact of tax payers"}}, "required": ["name", "birth", "phone_number"]}}}, {"type": "function", "function": {"name": "compareCleaningServices", "description": "Compare the service of the cleaning company and provide information.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Location or area where cleaning services are needed"}, "requested_date": {"type": "string", "format": "date", "description": "Service date (extract user as it is. Example: next Monday, January 1, 2022, etc.)"}, "size": {"type": "string", "description": "Pyeongsu or area of ​​the house (flat, square meter)"}}, "required": ["location", "requested_date", "size"]}}}, {"type": "function", "function": {"name": "convert_pyeong_to_squaremeter", "description": "Convert it to \"평\"을 입력받아서, \"제곱미터\".", "parameters": {"type": "object", "properties": {"pyeong": {"type": "number", "description": "Pyeongsu to be transformed"}}, "required": ["pyeong"]}}}, {"type": "function", "function": {"name": "generate_syntax_tree_from_text", "description": "Create a syntax tree for a given text", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Text to create a syntax tree"}}, "required": ["text"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell us the dates that need the service and the flat or area of ​​the house."}, "acceptable_arguments": null}
{"serial_num": 161, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Can you find and compare the services that can be cleaned?"}, {"role": "assistant", "content": "Please tell us the location and date you need the service, the flat water or area of ​​the house."}, {"role": "user", "content": "Next Tuesday"}], "input_tools": [{"type": "function", "function": {"name": "check_traffic_status", "description": "Inquire the current traffic situation on a particular path.", "parameters": {"type": "object", "properties": {"start_location": {"type": "string", "description": "Departure"}, "end_location": {"type": "string", "description": "Arrival point"}}, "required": ["start_location", "end_location"]}}}, {"type": "function", "function": {"name": "CheckTaxRefund", "description": "Search for the user's tax refund.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "The name of the tax paymenter"}, "birth": {"type": "string", "description": "Date of birth of tax payers (YYYY-MM-DD)"}, "phone_number": {"type": "string", "description": "Contact of tax payers"}}, "required": ["name", "birth", "phone_number"]}}}, {"type": "function", "function": {"name": "compareCleaningServices", "description": "Compare the service of the cleaning company and provide information.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Location or area where cleaning services are needed"}, "requested_date": {"type": "string", "format": "date", "description": "Service date (extract user as it is. Example: next Monday, January 1, 2022, etc.)"}, "size": {"type": "string", "description": "Pyeongsu or area of ​​the house (flat, square meter)"}}, "required": ["location", "requested_date", "size"]}}}, {"type": "function", "function": {"name": "convert_pyeong_to_squaremeter", "description": "Convert it to \"평\"을 입력받아서, \"제곱미터\".", "parameters": {"type": "object", "properties": {"pyeong": {"type": "number", "description": "Pyeongsu to be transformed"}}, "required": ["pyeong"]}}}, {"type": "function", "function": {"name": "generate_syntax_tree_from_text", "description": "Create a syntax tree for a given text", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Text to create a syntax tree"}}, "required": ["text"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me where the service is needed and the flat water or area of ​​the house."}, "acceptable_arguments": null}
{"serial_num": 162, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Can you find and compare the services that can be cleaned?"}, {"role": "assistant", "content": "Please tell us the location and date you need the service, the flat water or area of ​​the house."}, {"role": "user", "content": "60 pyeong housing"}], "input_tools": [{"type": "function", "function": {"name": "check_traffic_status", "description": "Inquire the current traffic situation on a particular path.", "parameters": {"type": "object", "properties": {"start_location": {"type": "string", "description": "Departure"}, "end_location": {"type": "string", "description": "Arrival point"}}, "required": ["start_location", "end_location"]}}}, {"type": "function", "function": {"name": "CheckTaxRefund", "description": "Search for the user's tax refund.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "The name of the tax paymenter"}, "birth": {"type": "string", "description": "Date of birth of tax payers (YYYY-MM-DD)"}, "phone_number": {"type": "string", "description": "Contact of tax payers"}}, "required": ["name", "birth", "phone_number"]}}}, {"type": "function", "function": {"name": "compareCleaningServices", "description": "Compare the service of the cleaning company and provide information.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Location or area where cleaning services are needed"}, "requested_date": {"type": "string", "format": "date", "description": "Service date (extract user as it is. Example: next Monday, January 1, 2022, etc.)"}, "size": {"type": "string", "description": "Pyeongsu or area of ​​the house (flat, square meter)"}}, "required": ["location", "requested_date", "size"]}}}, {"type": "function", "function": {"name": "convert_pyeong_to_squaremeter", "description": "Convert it to \"평\"을 입력받아서, \"제곱미터\".", "parameters": {"type": "object", "properties": {"pyeong": {"type": "number", "description": "Pyeongsu to be transformed"}}, "required": ["pyeong"]}}}, {"type": "function", "function": {"name": "generate_syntax_tree_from_text", "description": "Create a syntax tree for a given text", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Text to create a syntax tree"}}, "required": ["text"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the location and date you need."}, "acceptable_arguments": null}
{"serial_num": 163, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Can you find and compare the services that can clean housing on Tuesday next Tuesday in Seogwipo, Jeju Island?"}], "input_tools": [{"type": "function", "function": {"name": "check_traffic_status", "description": "Inquire the current traffic situation on a particular path.", "parameters": {"type": "object", "properties": {"start_location": {"type": "string", "description": "Departure"}, "end_location": {"type": "string", "description": "Arrival point"}}, "required": ["start_location", "end_location"]}}}, {"type": "function", "function": {"name": "CheckTaxRefund", "description": "Search for the user's tax refund.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "The name of the tax paymenter"}, "birth": {"type": "string", "description": "Date of birth of tax payers (YYYY-MM-DD)"}, "phone_number": {"type": "string", "description": "Contact of tax payers"}}, "required": ["name", "birth", "phone_number"]}}}, {"type": "function", "function": {"name": "compareCleaningServices", "description": "Compare the service of the cleaning company and provide information.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Location or area where cleaning services are needed"}, "requested_date": {"type": "string", "format": "date", "description": "Service date (extract user as it is. Example: next Monday, January 1, 2022, etc.)"}, "size": {"type": "string", "description": "Pyeongsu or area of ​​the house (flat, square meter)"}}, "required": ["location", "requested_date", "size"]}}}, {"type": "function", "function": {"name": "convert_pyeong_to_squaremeter", "description": "Convert it to \"평\"을 입력받아서, \"제곱미터\".", "parameters": {"type": "object", "properties": {"pyeong": {"type": "number", "description": "Pyeongsu to be transformed"}}, "required": ["pyeong"]}}}, {"type": "function", "function": {"name": "generate_syntax_tree_from_text", "description": "Create a syntax tree for a given text", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Text to create a syntax tree"}}, "required": ["text"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the flat or area of ​​the house."}, "acceptable_arguments": null}
{"serial_num": 164, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Can you find and compare the services that can clean housing in Seogwipo, Jeju Island next Tuesday?"}], "input_tools": [{"type": "function", "function": {"name": "check_traffic_status", "description": "Inquire the current traffic situation on a particular path.", "parameters": {"type": "object", "properties": {"start_location": {"type": "string", "description": "Departure"}, "end_location": {"type": "string", "description": "Arrival point"}}, "required": ["start_location", "end_location"]}}}, {"type": "function", "function": {"name": "CheckTaxRefund", "description": "Search for the user's tax refund.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "The name of the tax paymenter"}, "birth": {"type": "string", "description": "Date of birth of tax payers (YYYY-MM-DD)"}, "phone_number": {"type": "string", "description": "Contact of tax payers"}}, "required": ["name", "birth", "phone_number"]}}}, {"type": "function", "function": {"name": "compareCleaningServices", "description": "Compare the service of the cleaning company and provide information.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Location or area where cleaning services are needed"}, "requested_date": {"type": "string", "format": "date", "description": "Service date (extract user as it is. Example: next Monday, January 1, 2022, etc.)"}, "size": {"type": "string", "description": "Pyeongsu or area of ​​the house (flat, square meter)"}}, "required": ["location", "requested_date", "size"]}}}, {"type": "function", "function": {"name": "convert_pyeong_to_squaremeter", "description": "Convert it to \"평\"을 입력받아서, \"제곱미터\".", "parameters": {"type": "object", "properties": {"pyeong": {"type": "number", "description": "Pyeongsu to be transformed"}}, "required": ["pyeong"]}}}, {"type": "function", "function": {"name": "generate_syntax_tree_from_text", "description": "Create a syntax tree for a given text", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Text to create a syntax tree"}}, "required": ["text"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the flat or area of ​​the house."}, "acceptable_arguments": null}
{"serial_num": 165, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Can you find and compare the service that can clean 60 pyeong in Seogwipo, Jeju Island?"}], "input_tools": [{"type": "function", "function": {"name": "check_traffic_status", "description": "Inquire the current traffic situation on a particular path.", "parameters": {"type": "object", "properties": {"start_location": {"type": "string", "description": "Departure"}, "end_location": {"type": "string", "description": "Arrival point"}}, "required": ["start_location", "end_location"]}}}, {"type": "function", "function": {"name": "CheckTaxRefund", "description": "Search for the user's tax refund.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "The name of the tax paymenter"}, "birth": {"type": "string", "description": "Date of birth of tax payers (YYYY-MM-DD)"}, "phone_number": {"type": "string", "description": "Contact of tax payers"}}, "required": ["name", "birth", "phone_number"]}}}, {"type": "function", "function": {"name": "compareCleaningServices", "description": "Compare the service of the cleaning company and provide information.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Location or area where cleaning services are needed"}, "requested_date": {"type": "string", "format": "date", "description": "Service date (extract user as it is. Example: next Monday, January 1, 2022, etc.)"}, "size": {"type": "string", "description": "Pyeongsu or area of ​​the house (flat, square meter)"}}, "required": ["location", "requested_date", "size"]}}}, {"type": "function", "function": {"name": "convert_pyeong_to_squaremeter", "description": "Convert it to \"평\"을 입력받아서, \"제곱미터\".", "parameters": {"type": "object", "properties": {"pyeong": {"type": "number", "description": "Pyeongsu to be transformed"}}, "required": ["pyeong"]}}}, {"type": "function", "function": {"name": "generate_syntax_tree_from_text", "description": "Create a syntax tree for a given text", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Text to create a syntax tree"}}, "required": ["text"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the date that requires the service."}, "acceptable_arguments": null}
{"serial_num": 166, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Can you find and compare the service that can clean the 60 pyeong housing? The location is Seogwipo, Jeju Island."}], "input_tools": [{"type": "function", "function": {"name": "check_traffic_status", "description": "Inquire the current traffic situation on a particular path.", "parameters": {"type": "object", "properties": {"start_location": {"type": "string", "description": "Departure"}, "end_location": {"type": "string", "description": "Arrival point"}}, "required": ["start_location", "end_location"]}}}, {"type": "function", "function": {"name": "CheckTaxRefund", "description": "Search for the user's tax refund.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "The name of the tax paymenter"}, "birth": {"type": "string", "description": "Date of birth of tax payers (YYYY-MM-DD)"}, "phone_number": {"type": "string", "description": "Contact of tax payers"}}, "required": ["name", "birth", "phone_number"]}}}, {"type": "function", "function": {"name": "compareCleaningServices", "description": "Compare the service of the cleaning company and provide information.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Location or area where cleaning services are needed"}, "requested_date": {"type": "string", "format": "date", "description": "Service date (extract user as it is. Example: next Monday, January 1, 2022, etc.)"}, "size": {"type": "string", "description": "Pyeongsu or area of ​​the house (flat, square meter)"}}, "required": ["location", "requested_date", "size"]}}}, {"type": "function", "function": {"name": "convert_pyeong_to_squaremeter", "description": "Convert it to \"평\"을 입력받아서, \"제곱미터\".", "parameters": {"type": "object", "properties": {"pyeong": {"type": "number", "description": "Pyeongsu to be transformed"}}, "required": ["pyeong"]}}}, {"type": "function", "function": {"name": "generate_syntax_tree_from_text", "description": "Create a syntax tree for a given text", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Text to create a syntax tree"}}, "required": ["text"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the date that requires the service."}, "acceptable_arguments": null}
{"serial_num": 167, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Can you find and compare the service that can clean the 60 pyeong house next Tuesday?"}], "input_tools": [{"type": "function", "function": {"name": "check_traffic_status", "description": "Inquire the current traffic situation on a particular path.", "parameters": {"type": "object", "properties": {"start_location": {"type": "string", "description": "Departure"}, "end_location": {"type": "string", "description": "Arrival point"}}, "required": ["start_location", "end_location"]}}}, {"type": "function", "function": {"name": "CheckTaxRefund", "description": "Search for the user's tax refund.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "The name of the tax paymenter"}, "birth": {"type": "string", "description": "Date of birth of tax payers (YYYY-MM-DD)"}, "phone_number": {"type": "string", "description": "Contact of tax payers"}}, "required": ["name", "birth", "phone_number"]}}}, {"type": "function", "function": {"name": "compareCleaningServices", "description": "Compare the service of the cleaning company and provide information.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Location or area where cleaning services are needed"}, "requested_date": {"type": "string", "format": "date", "description": "Service date (extract user as it is. Example: next Monday, January 1, 2022, etc.)"}, "size": {"type": "string", "description": "Pyeongsu or area of ​​the house (flat, square meter)"}}, "required": ["location", "requested_date", "size"]}}}, {"type": "function", "function": {"name": "convert_pyeong_to_squaremeter", "description": "Convert it to \"평\"을 입력받아서, \"제곱미터\".", "parameters": {"type": "object", "properties": {"pyeong": {"type": "number", "description": "Pyeongsu to be transformed"}}, "required": ["pyeong"]}}}, {"type": "function", "function": {"name": "generate_syntax_tree_from_text", "description": "Create a syntax tree for a given text", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Text to create a syntax tree"}}, "required": ["text"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me where the service is needed."}, "acceptable_arguments": null}
{"serial_num": 168, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Can you find and compare the service that can clean the 60 pyeong housing? Next Tuesday."}], "input_tools": [{"type": "function", "function": {"name": "check_traffic_status", "description": "Inquire the current traffic situation on a particular path.", "parameters": {"type": "object", "properties": {"start_location": {"type": "string", "description": "Departure"}, "end_location": {"type": "string", "description": "Arrival point"}}, "required": ["start_location", "end_location"]}}}, {"type": "function", "function": {"name": "CheckTaxRefund", "description": "Search for the user's tax refund.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "The name of the tax paymenter"}, "birth": {"type": "string", "description": "Date of birth of tax payers (YYYY-MM-DD)"}, "phone_number": {"type": "string", "description": "Contact of tax payers"}}, "required": ["name", "birth", "phone_number"]}}}, {"type": "function", "function": {"name": "compareCleaningServices", "description": "Compare the service of the cleaning company and provide information.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Location or area where cleaning services are needed"}, "requested_date": {"type": "string", "format": "date", "description": "Service date (extract user as it is. Example: next Monday, January 1, 2022, etc.)"}, "size": {"type": "string", "description": "Pyeongsu or area of ​​the house (flat, square meter)"}}, "required": ["location", "requested_date", "size"]}}}, {"type": "function", "function": {"name": "convert_pyeong_to_squaremeter", "description": "Convert it to \"평\"을 입력받아서, \"제곱미터\".", "parameters": {"type": "object", "properties": {"pyeong": {"type": "number", "description": "Pyeongsu to be transformed"}}, "required": ["pyeong"]}}}, {"type": "function", "function": {"name": "generate_syntax_tree_from_text", "description": "Create a syntax tree for a given text", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Text to create a syntax tree"}}, "required": ["text"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me where the service is needed."}, "acceptable_arguments": null}
{"serial_num": 169, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Can you find and compare the services that can be cleaned?"}, {"role": "assistant", "content": "Please tell us the location and date you need the service, the flat water or area of ​​the house."}, {"role": "user", "content": "In Seogwipo, Jeju Island next Tuesday"}], "input_tools": [{"type": "function", "function": {"name": "check_traffic_status", "description": "Inquire the current traffic situation on a particular path.", "parameters": {"type": "object", "properties": {"start_location": {"type": "string", "description": "Departure"}, "end_location": {"type": "string", "description": "Arrival point"}}, "required": ["start_location", "end_location"]}}}, {"type": "function", "function": {"name": "CheckTaxRefund", "description": "Search for the user's tax refund.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "The name of the tax paymenter"}, "birth": {"type": "string", "description": "Date of birth of tax payers (YYYY-MM-DD)"}, "phone_number": {"type": "string", "description": "Contact of tax payers"}}, "required": ["name", "birth", "phone_number"]}}}, {"type": "function", "function": {"name": "compareCleaningServices", "description": "Compare the service of the cleaning company and provide information.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Location or area where cleaning services are needed"}, "requested_date": {"type": "string", "format": "date", "description": "Service date (extract user as it is. Example: next Monday, January 1, 2022, etc.)"}, "size": {"type": "string", "description": "Pyeongsu or area of ​​the house (flat, square meter)"}}, "required": ["location", "requested_date", "size"]}}}, {"type": "function", "function": {"name": "convert_pyeong_to_squaremeter", "description": "Convert it to \"평\"을 입력받아서, \"제곱미터\".", "parameters": {"type": "object", "properties": {"pyeong": {"type": "number", "description": "Pyeongsu to be transformed"}}, "required": ["pyeong"]}}}, {"type": "function", "function": {"name": "generate_syntax_tree_from_text", "description": "Create a syntax tree for a given text", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Text to create a syntax tree"}}, "required": ["text"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the flat or area of ​​the house."}, "acceptable_arguments": null}
{"serial_num": 170, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Can you find and compare the services that can be cleaned?"}, {"role": "assistant", "content": "Please tell us the location and date you need the service, the flat water or area of ​​the house."}, {"role": "user", "content": "Next Tuesday, in Seogwipo, Jeju Island"}], "input_tools": [{"type": "function", "function": {"name": "check_traffic_status", "description": "Inquire the current traffic situation on a particular path.", "parameters": {"type": "object", "properties": {"start_location": {"type": "string", "description": "Departure"}, "end_location": {"type": "string", "description": "Arrival point"}}, "required": ["start_location", "end_location"]}}}, {"type": "function", "function": {"name": "CheckTaxRefund", "description": "Search for the user's tax refund.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "The name of the tax paymenter"}, "birth": {"type": "string", "description": "Date of birth of tax payers (YYYY-MM-DD)"}, "phone_number": {"type": "string", "description": "Contact of tax payers"}}, "required": ["name", "birth", "phone_number"]}}}, {"type": "function", "function": {"name": "compareCleaningServices", "description": "Compare the service of the cleaning company and provide information.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Location or area where cleaning services are needed"}, "requested_date": {"type": "string", "format": "date", "description": "Service date (extract user as it is. Example: next Monday, January 1, 2022, etc.)"}, "size": {"type": "string", "description": "Pyeongsu or area of ​​the house (flat, square meter)"}}, "required": ["location", "requested_date", "size"]}}}, {"type": "function", "function": {"name": "convert_pyeong_to_squaremeter", "description": "Convert it to \"평\"을 입력받아서, \"제곱미터\".", "parameters": {"type": "object", "properties": {"pyeong": {"type": "number", "description": "Pyeongsu to be transformed"}}, "required": ["pyeong"]}}}, {"type": "function", "function": {"name": "generate_syntax_tree_from_text", "description": "Create a syntax tree for a given text", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Text to create a syntax tree"}}, "required": ["text"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the flat or area of ​​the house."}, "acceptable_arguments": null}
{"serial_num": 171, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Can you find and compare the services that can be cleaned?"}, {"role": "assistant", "content": "Please tell us the location and date you need the service, the flat water or area of ​​the house."}, {"role": "user", "content": "It is a 60 pyeong house in Seogwipo, Jeju Island."}], "input_tools": [{"type": "function", "function": {"name": "check_traffic_status", "description": "Inquire the current traffic situation on a particular path.", "parameters": {"type": "object", "properties": {"start_location": {"type": "string", "description": "Departure"}, "end_location": {"type": "string", "description": "Arrival point"}}, "required": ["start_location", "end_location"]}}}, {"type": "function", "function": {"name": "CheckTaxRefund", "description": "Search for the user's tax refund.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "The name of the tax paymenter"}, "birth": {"type": "string", "description": "Date of birth of tax payers (YYYY-MM-DD)"}, "phone_number": {"type": "string", "description": "Contact of tax payers"}}, "required": ["name", "birth", "phone_number"]}}}, {"type": "function", "function": {"name": "compareCleaningServices", "description": "Compare the service of the cleaning company and provide information.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Location or area where cleaning services are needed"}, "requested_date": {"type": "string", "format": "date", "description": "Service date (extract user as it is. Example: next Monday, January 1, 2022, etc.)"}, "size": {"type": "string", "description": "Pyeongsu or area of ​​the house (flat, square meter)"}}, "required": ["location", "requested_date", "size"]}}}, {"type": "function", "function": {"name": "convert_pyeong_to_squaremeter", "description": "Convert it to \"평\"을 입력받아서, \"제곱미터\".", "parameters": {"type": "object", "properties": {"pyeong": {"type": "number", "description": "Pyeongsu to be transformed"}}, "required": ["pyeong"]}}}, {"type": "function", "function": {"name": "generate_syntax_tree_from_text", "description": "Create a syntax tree for a given text", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Text to create a syntax tree"}}, "required": ["text"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the date that requires the service."}, "acceptable_arguments": null}
{"serial_num": 172, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Can you find and compare the services that can be cleaned?"}, {"role": "assistant", "content": "Please tell us the location and date you need the service, the flat water or area of ​​the house."}, {"role": "user", "content": "The location at 60 pyeong is Seogwipoya, Jeju Island."}], "input_tools": [{"type": "function", "function": {"name": "check_traffic_status", "description": "Inquire the current traffic situation on a particular path.", "parameters": {"type": "object", "properties": {"start_location": {"type": "string", "description": "Departure"}, "end_location": {"type": "string", "description": "Arrival point"}}, "required": ["start_location", "end_location"]}}}, {"type": "function", "function": {"name": "CheckTaxRefund", "description": "Search for the user's tax refund.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "The name of the tax paymenter"}, "birth": {"type": "string", "description": "Date of birth of tax payers (YYYY-MM-DD)"}, "phone_number": {"type": "string", "description": "Contact of tax payers"}}, "required": ["name", "birth", "phone_number"]}}}, {"type": "function", "function": {"name": "compareCleaningServices", "description": "Compare the service of the cleaning company and provide information.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Location or area where cleaning services are needed"}, "requested_date": {"type": "string", "format": "date", "description": "Service date (extract user as it is. Example: next Monday, January 1, 2022, etc.)"}, "size": {"type": "string", "description": "Pyeongsu or area of ​​the house (flat, square meter)"}}, "required": ["location", "requested_date", "size"]}}}, {"type": "function", "function": {"name": "convert_pyeong_to_squaremeter", "description": "Convert it to \"평\"을 입력받아서, \"제곱미터\".", "parameters": {"type": "object", "properties": {"pyeong": {"type": "number", "description": "Pyeongsu to be transformed"}}, "required": ["pyeong"]}}}, {"type": "function", "function": {"name": "generate_syntax_tree_from_text", "description": "Create a syntax tree for a given text", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Text to create a syntax tree"}}, "required": ["text"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the date that requires the service."}, "acceptable_arguments": null}
{"serial_num": 173, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Can you find and compare the services that can be cleaned?"}, {"role": "assistant", "content": "Please tell us the location and date you need the service, the flat water or area of ​​the house."}, {"role": "user", "content": "Compare 60 pyeong housing cleaning service next Tuesday"}], "input_tools": [{"type": "function", "function": {"name": "check_traffic_status", "description": "Inquire the current traffic situation on a particular path.", "parameters": {"type": "object", "properties": {"start_location": {"type": "string", "description": "Departure"}, "end_location": {"type": "string", "description": "Arrival point"}}, "required": ["start_location", "end_location"]}}}, {"type": "function", "function": {"name": "CheckTaxRefund", "description": "Search for the user's tax refund.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "The name of the tax paymenter"}, "birth": {"type": "string", "description": "Date of birth of tax payers (YYYY-MM-DD)"}, "phone_number": {"type": "string", "description": "Contact of tax payers"}}, "required": ["name", "birth", "phone_number"]}}}, {"type": "function", "function": {"name": "compareCleaningServices", "description": "Compare the service of the cleaning company and provide information.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Location or area where cleaning services are needed"}, "requested_date": {"type": "string", "format": "date", "description": "Service date (extract user as it is. Example: next Monday, January 1, 2022, etc.)"}, "size": {"type": "string", "description": "Pyeongsu or area of ​​the house (flat, square meter)"}}, "required": ["location", "requested_date", "size"]}}}, {"type": "function", "function": {"name": "convert_pyeong_to_squaremeter", "description": "Convert it to \"평\"을 입력받아서, \"제곱미터\".", "parameters": {"type": "object", "properties": {"pyeong": {"type": "number", "description": "Pyeongsu to be transformed"}}, "required": ["pyeong"]}}}, {"type": "function", "function": {"name": "generate_syntax_tree_from_text", "description": "Create a syntax tree for a given text", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Text to create a syntax tree"}}, "required": ["text"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me where the service is needed."}, "acceptable_arguments": null}
{"serial_num": 174, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Can you find and compare the services that can be cleaned?"}, {"role": "assistant", "content": "Please tell us the location and date you need the service, the flat water or area of ​​the house."}, {"role": "user", "content": "60 pyeong houses and next Tuesday."}], "input_tools": [{"type": "function", "function": {"name": "check_traffic_status", "description": "Inquire the current traffic situation on a particular path.", "parameters": {"type": "object", "properties": {"start_location": {"type": "string", "description": "Departure"}, "end_location": {"type": "string", "description": "Arrival point"}}, "required": ["start_location", "end_location"]}}}, {"type": "function", "function": {"name": "CheckTaxRefund", "description": "Search for the user's tax refund.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "The name of the tax paymenter"}, "birth": {"type": "string", "description": "Date of birth of tax payers (YYYY-MM-DD)"}, "phone_number": {"type": "string", "description": "Contact of tax payers"}}, "required": ["name", "birth", "phone_number"]}}}, {"type": "function", "function": {"name": "compareCleaningServices", "description": "Compare the service of the cleaning company and provide information.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Location or area where cleaning services are needed"}, "requested_date": {"type": "string", "format": "date", "description": "Service date (extract user as it is. Example: next Monday, January 1, 2022, etc.)"}, "size": {"type": "string", "description": "Pyeongsu or area of ​​the house (flat, square meter)"}}, "required": ["location", "requested_date", "size"]}}}, {"type": "function", "function": {"name": "convert_pyeong_to_squaremeter", "description": "Convert it to \"평\"을 입력받아서, \"제곱미터\".", "parameters": {"type": "object", "properties": {"pyeong": {"type": "number", "description": "Pyeongsu to be transformed"}}, "required": ["pyeong"]}}}, {"type": "function", "function": {"name": "generate_syntax_tree_from_text", "description": "Create a syntax tree for a given text", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Text to create a syntax tree"}}, "required": ["text"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me where the service is needed."}, "acceptable_arguments": null}
{"serial_num": 175, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Can you find and compare the services that can clean housing in Seogwipo, Jeju Island?"}, {"role": "assistant", "content": "Please tell us the dates that need the service and the flat or area of ​​the house."}, {"role": "user", "content": "I need it next Tuesday."}], "input_tools": [{"type": "function", "function": {"name": "check_traffic_status", "description": "Inquire the current traffic situation on a particular path.", "parameters": {"type": "object", "properties": {"start_location": {"type": "string", "description": "Departure"}, "end_location": {"type": "string", "description": "Arrival point"}}, "required": ["start_location", "end_location"]}}}, {"type": "function", "function": {"name": "CheckTaxRefund", "description": "Search for the user's tax refund.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "The name of the tax paymenter"}, "birth": {"type": "string", "description": "Date of birth of tax payers (YYYY-MM-DD)"}, "phone_number": {"type": "string", "description": "Contact of tax payers"}}, "required": ["name", "birth", "phone_number"]}}}, {"type": "function", "function": {"name": "compareCleaningServices", "description": "Compare the service of the cleaning company and provide information.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Location or area where cleaning services are needed"}, "requested_date": {"type": "string", "format": "date", "description": "Service date (extract user as it is. Example: next Monday, January 1, 2022, etc.)"}, "size": {"type": "string", "description": "Pyeongsu or area of ​​the house (flat, square meter)"}}, "required": ["location", "requested_date", "size"]}}}, {"type": "function", "function": {"name": "convert_pyeong_to_squaremeter", "description": "Convert it to \"평\"을 입력받아서, \"제곱미터\".", "parameters": {"type": "object", "properties": {"pyeong": {"type": "number", "description": "Pyeongsu to be transformed"}}, "required": ["pyeong"]}}}, {"type": "function", "function": {"name": "generate_syntax_tree_from_text", "description": "Create a syntax tree for a given text", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Text to create a syntax tree"}}, "required": ["text"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the flat water or area of ​​the house."}, "acceptable_arguments": null}
{"serial_num": 176, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Can you find and compare the services that can be cleaned next Tuesday?"}, {"role": "assistant", "content": "Please tell me where the service is needed and the flat water or area of ​​the house."}, {"role": "user", "content": "Seogwipoa, Jeju Island."}], "input_tools": [{"type": "function", "function": {"name": "check_traffic_status", "description": "Inquire the current traffic situation on a particular path.", "parameters": {"type": "object", "properties": {"start_location": {"type": "string", "description": "Departure"}, "end_location": {"type": "string", "description": "Arrival point"}}, "required": ["start_location", "end_location"]}}}, {"type": "function", "function": {"name": "CheckTaxRefund", "description": "Search for the user's tax refund.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "The name of the tax paymenter"}, "birth": {"type": "string", "description": "Date of birth of tax payers (YYYY-MM-DD)"}, "phone_number": {"type": "string", "description": "Contact of tax payers"}}, "required": ["name", "birth", "phone_number"]}}}, {"type": "function", "function": {"name": "compareCleaningServices", "description": "Compare the service of the cleaning company and provide information.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Location or area where cleaning services are needed"}, "requested_date": {"type": "string", "format": "date", "description": "Service date (extract user as it is. Example: next Monday, January 1, 2022, etc.)"}, "size": {"type": "string", "description": "Pyeongsu or area of ​​the house (flat, square meter)"}}, "required": ["location", "requested_date", "size"]}}}, {"type": "function", "function": {"name": "convert_pyeong_to_squaremeter", "description": "Convert it to \"평\"을 입력받아서, \"제곱미터\".", "parameters": {"type": "object", "properties": {"pyeong": {"type": "number", "description": "Pyeongsu to be transformed"}}, "required": ["pyeong"]}}}, {"type": "function", "function": {"name": "generate_syntax_tree_from_text", "description": "Create a syntax tree for a given text", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Text to create a syntax tree"}}, "required": ["text"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the flat water or area of ​​the house."}, "acceptable_arguments": null}
{"serial_num": 177, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Can you find and compare the services that can clean housing in Seogwipo, Jeju Island?"}, {"role": "assistant", "content": "Please tell us the dates that need the service and the flat or area of ​​the house."}, {"role": "user", "content": "It's a 60 pyeong house."}], "input_tools": [{"type": "function", "function": {"name": "check_traffic_status", "description": "Inquire the current traffic situation on a particular path.", "parameters": {"type": "object", "properties": {"start_location": {"type": "string", "description": "Departure"}, "end_location": {"type": "string", "description": "Arrival point"}}, "required": ["start_location", "end_location"]}}}, {"type": "function", "function": {"name": "CheckTaxRefund", "description": "Search for the user's tax refund.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "The name of the tax paymenter"}, "birth": {"type": "string", "description": "Date of birth of tax payers (YYYY-MM-DD)"}, "phone_number": {"type": "string", "description": "Contact of tax payers"}}, "required": ["name", "birth", "phone_number"]}}}, {"type": "function", "function": {"name": "compareCleaningServices", "description": "Compare the service of the cleaning company and provide information.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Location or area where cleaning services are needed"}, "requested_date": {"type": "string", "format": "date", "description": "Service date (extract user as it is. Example: next Monday, January 1, 2022, etc.)"}, "size": {"type": "string", "description": "Pyeongsu or area of ​​the house (flat, square meter)"}}, "required": ["location", "requested_date", "size"]}}}, {"type": "function", "function": {"name": "convert_pyeong_to_squaremeter", "description": "Convert it to \"평\"을 입력받아서, \"제곱미터\".", "parameters": {"type": "object", "properties": {"pyeong": {"type": "number", "description": "Pyeongsu to be transformed"}}, "required": ["pyeong"]}}}, {"type": "function", "function": {"name": "generate_syntax_tree_from_text", "description": "Create a syntax tree for a given text", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Text to create a syntax tree"}}, "required": ["text"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the date that requires the service."}, "acceptable_arguments": null}
{"serial_num": 178, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Can you find and compare the service that can clean the 60 pyeong housing?"}, {"role": "assistant", "content": "Please tell me the location and date you need."}, {"role": "user", "content": "Seogwipoa, Jeju Island."}], "input_tools": [{"type": "function", "function": {"name": "check_traffic_status", "description": "Inquire the current traffic situation on a particular path.", "parameters": {"type": "object", "properties": {"start_location": {"type": "string", "description": "Departure"}, "end_location": {"type": "string", "description": "Arrival point"}}, "required": ["start_location", "end_location"]}}}, {"type": "function", "function": {"name": "CheckTaxRefund", "description": "Search for the user's tax refund.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "The name of the tax paymenter"}, "birth": {"type": "string", "description": "Date of birth of tax payers (YYYY-MM-DD)"}, "phone_number": {"type": "string", "description": "Contact of tax payers"}}, "required": ["name", "birth", "phone_number"]}}}, {"type": "function", "function": {"name": "compareCleaningServices", "description": "Compare the service of the cleaning company and provide information.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Location or area where cleaning services are needed"}, "requested_date": {"type": "string", "format": "date", "description": "Service date (extract user as it is. Example: next Monday, January 1, 2022, etc.)"}, "size": {"type": "string", "description": "Pyeongsu or area of ​​the house (flat, square meter)"}}, "required": ["location", "requested_date", "size"]}}}, {"type": "function", "function": {"name": "convert_pyeong_to_squaremeter", "description": "Convert it to \"평\"을 입력받아서, \"제곱미터\".", "parameters": {"type": "object", "properties": {"pyeong": {"type": "number", "description": "Pyeongsu to be transformed"}}, "required": ["pyeong"]}}}, {"type": "function", "function": {"name": "generate_syntax_tree_from_text", "description": "Create a syntax tree for a given text", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Text to create a syntax tree"}}, "required": ["text"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the date that requires the service."}, "acceptable_arguments": null}
{"serial_num": 179, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Can you find and compare the services that can be cleaned next Tuesday?"}, {"role": "assistant", "content": "Please tell me where the service is needed and the flat water or area of ​​the house."}, {"role": "user", "content": "It's 60 pyeong."}], "input_tools": [{"type": "function", "function": {"name": "check_traffic_status", "description": "Inquire the current traffic situation on a particular path.", "parameters": {"type": "object", "properties": {"start_location": {"type": "string", "description": "Departure"}, "end_location": {"type": "string", "description": "Arrival point"}}, "required": ["start_location", "end_location"]}}}, {"type": "function", "function": {"name": "CheckTaxRefund", "description": "Search for the user's tax refund.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "The name of the tax paymenter"}, "birth": {"type": "string", "description": "Date of birth of tax payers (YYYY-MM-DD)"}, "phone_number": {"type": "string", "description": "Contact of tax payers"}}, "required": ["name", "birth", "phone_number"]}}}, {"type": "function", "function": {"name": "compareCleaningServices", "description": "Compare the service of the cleaning company and provide information.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Location or area where cleaning services are needed"}, "requested_date": {"type": "string", "format": "date", "description": "Service date (extract user as it is. Example: next Monday, January 1, 2022, etc.)"}, "size": {"type": "string", "description": "Pyeongsu or area of ​​the house (flat, square meter)"}}, "required": ["location", "requested_date", "size"]}}}, {"type": "function", "function": {"name": "convert_pyeong_to_squaremeter", "description": "Convert it to \"평\"을 입력받아서, \"제곱미터\".", "parameters": {"type": "object", "properties": {"pyeong": {"type": "number", "description": "Pyeongsu to be transformed"}}, "required": ["pyeong"]}}}, {"type": "function", "function": {"name": "generate_syntax_tree_from_text", "description": "Create a syntax tree for a given text", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Text to create a syntax tree"}}, "required": ["text"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me where the service is needed."}, "acceptable_arguments": null}
{"serial_num": 180, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Can you find and compare the service that can clean the 60 pyeong housing?"}, {"role": "assistant", "content": "Please tell me the location and date you need."}, {"role": "user", "content": "Next Tuesday."}], "input_tools": [{"type": "function", "function": {"name": "check_traffic_status", "description": "Inquire the current traffic situation on a particular path.", "parameters": {"type": "object", "properties": {"start_location": {"type": "string", "description": "Departure"}, "end_location": {"type": "string", "description": "Arrival point"}}, "required": ["start_location", "end_location"]}}}, {"type": "function", "function": {"name": "CheckTaxRefund", "description": "Search for the user's tax refund.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "The name of the tax paymenter"}, "birth": {"type": "string", "description": "Date of birth of tax payers (YYYY-MM-DD)"}, "phone_number": {"type": "string", "description": "Contact of tax payers"}}, "required": ["name", "birth", "phone_number"]}}}, {"type": "function", "function": {"name": "compareCleaningServices", "description": "Compare the service of the cleaning company and provide information.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Location or area where cleaning services are needed"}, "requested_date": {"type": "string", "format": "date", "description": "Service date (extract user as it is. Example: next Monday, January 1, 2022, etc.)"}, "size": {"type": "string", "description": "Pyeongsu or area of ​​the house (flat, square meter)"}}, "required": ["location", "requested_date", "size"]}}}, {"type": "function", "function": {"name": "convert_pyeong_to_squaremeter", "description": "Convert it to \"평\"을 입력받아서, \"제곱미터\".", "parameters": {"type": "object", "properties": {"pyeong": {"type": "number", "description": "Pyeongsu to be transformed"}}, "required": ["pyeong"]}}}, {"type": "function", "function": {"name": "generate_syntax_tree_from_text", "description": "Create a syntax tree for a given text", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Text to create a syntax tree"}}, "required": ["text"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me where the service is needed."}, "acceptable_arguments": null}
{"serial_num": 181, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Can you find and compare the services that can be cleaned?"}, {"role": "assistant", "content": "Please tell us the location and date you need the service, the flat water or area of ​​the house."}, {"role": "user", "content": "Seogwipo, Jeju Island"}, {"role": "assistant", "content": "Please tell us the dates that need the service and the flat or area of ​​the house."}, {"role": "user", "content": "I need it next Tuesday."}], "input_tools": [{"type": "function", "function": {"name": "check_traffic_status", "description": "Inquire the current traffic situation on a particular path.", "parameters": {"type": "object", "properties": {"start_location": {"type": "string", "description": "Departure"}, "end_location": {"type": "string", "description": "Arrival point"}}, "required": ["start_location", "end_location"]}}}, {"type": "function", "function": {"name": "CheckTaxRefund", "description": "Search for the user's tax refund.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "The name of the tax paymenter"}, "birth": {"type": "string", "description": "Date of birth of tax payers (YYYY-MM-DD)"}, "phone_number": {"type": "string", "description": "Contact of tax payers"}}, "required": ["name", "birth", "phone_number"]}}}, {"type": "function", "function": {"name": "compareCleaningServices", "description": "Compare the service of the cleaning company and provide information.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Location or area where cleaning services are needed"}, "requested_date": {"type": "string", "format": "date", "description": "Service date (extract user as it is. Example: next Monday, January 1, 2022, etc.)"}, "size": {"type": "string", "description": "Pyeongsu or area of ​​the house (flat, square meter)"}}, "required": ["location", "requested_date", "size"]}}}, {"type": "function", "function": {"name": "convert_pyeong_to_squaremeter", "description": "Convert it to \"평\"을 입력받아서, \"제곱미터\".", "parameters": {"type": "object", "properties": {"pyeong": {"type": "number", "description": "Pyeongsu to be transformed"}}, "required": ["pyeong"]}}}, {"type": "function", "function": {"name": "generate_syntax_tree_from_text", "description": "Create a syntax tree for a given text", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Text to create a syntax tree"}}, "required": ["text"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the flat water or area of ​​the house."}, "acceptable_arguments": null}
{"serial_num": 182, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Can you find and compare the services that can be cleaned?"}, {"role": "assistant", "content": "Please tell us the location and date you need the service, the flat water or area of ​​the house."}, {"role": "user", "content": "Next Tuesday"}, {"role": "assistant", "content": "Please tell me where the service is needed and the flat water or area of ​​the house."}, {"role": "user", "content": "Seogwipoa, Jeju Island."}], "input_tools": [{"type": "function", "function": {"name": "check_traffic_status", "description": "Inquire the current traffic situation on a particular path.", "parameters": {"type": "object", "properties": {"start_location": {"type": "string", "description": "Departure"}, "end_location": {"type": "string", "description": "Arrival point"}}, "required": ["start_location", "end_location"]}}}, {"type": "function", "function": {"name": "CheckTaxRefund", "description": "Search for the user's tax refund.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "The name of the tax paymenter"}, "birth": {"type": "string", "description": "Date of birth of tax payers (YYYY-MM-DD)"}, "phone_number": {"type": "string", "description": "Contact of tax payers"}}, "required": ["name", "birth", "phone_number"]}}}, {"type": "function", "function": {"name": "compareCleaningServices", "description": "Compare the service of the cleaning company and provide information.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Location or area where cleaning services are needed"}, "requested_date": {"type": "string", "format": "date", "description": "Service date (extract user as it is. Example: next Monday, January 1, 2022, etc.)"}, "size": {"type": "string", "description": "Pyeongsu or area of ​​the house (flat, square meter)"}}, "required": ["location", "requested_date", "size"]}}}, {"type": "function", "function": {"name": "convert_pyeong_to_squaremeter", "description": "Convert it to \"평\"을 입력받아서, \"제곱미터\".", "parameters": {"type": "object", "properties": {"pyeong": {"type": "number", "description": "Pyeongsu to be transformed"}}, "required": ["pyeong"]}}}, {"type": "function", "function": {"name": "generate_syntax_tree_from_text", "description": "Create a syntax tree for a given text", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Text to create a syntax tree"}}, "required": ["text"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the flat water or area of ​​the house."}, "acceptable_arguments": null}
{"serial_num": 183, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Can you find and compare the services that can be cleaned?"}, {"role": "assistant", "content": "Please tell us the location and date you need the service, the flat water or area of ​​the house."}, {"role": "user", "content": "Seogwipo, Jeju Island"}, {"role": "assistant", "content": "Please tell us the dates that need the service and the flat or area of ​​the house."}, {"role": "user", "content": "It's a 60 pyeong house."}], "input_tools": [{"type": "function", "function": {"name": "check_traffic_status", "description": "Inquire the current traffic situation on a particular path.", "parameters": {"type": "object", "properties": {"start_location": {"type": "string", "description": "Departure"}, "end_location": {"type": "string", "description": "Arrival point"}}, "required": ["start_location", "end_location"]}}}, {"type": "function", "function": {"name": "CheckTaxRefund", "description": "Search for the user's tax refund.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "The name of the tax paymenter"}, "birth": {"type": "string", "description": "Date of birth of tax payers (YYYY-MM-DD)"}, "phone_number": {"type": "string", "description": "Contact of tax payers"}}, "required": ["name", "birth", "phone_number"]}}}, {"type": "function", "function": {"name": "compareCleaningServices", "description": "Compare the service of the cleaning company and provide information.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Location or area where cleaning services are needed"}, "requested_date": {"type": "string", "format": "date", "description": "Service date (extract user as it is. Example: next Monday, January 1, 2022, etc.)"}, "size": {"type": "string", "description": "Pyeongsu or area of ​​the house (flat, square meter)"}}, "required": ["location", "requested_date", "size"]}}}, {"type": "function", "function": {"name": "convert_pyeong_to_squaremeter", "description": "Convert it to \"평\"을 입력받아서, \"제곱미터\".", "parameters": {"type": "object", "properties": {"pyeong": {"type": "number", "description": "Pyeongsu to be transformed"}}, "required": ["pyeong"]}}}, {"type": "function", "function": {"name": "generate_syntax_tree_from_text", "description": "Create a syntax tree for a given text", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Text to create a syntax tree"}}, "required": ["text"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the date that requires the service."}, "acceptable_arguments": null}
{"serial_num": 184, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Can you find and compare the services that can be cleaned?"}, {"role": "assistant", "content": "Please tell us the location and date you need the service, the flat water or area of ​​the house."}, {"role": "user", "content": "It's a 60 pyeong house"}, {"role": "assistant", "content": "Please tell me the location and date you need."}, {"role": "user", "content": "Seogwipoa, Jeju Island."}], "input_tools": [{"type": "function", "function": {"name": "check_traffic_status", "description": "Inquire the current traffic situation on a particular path.", "parameters": {"type": "object", "properties": {"start_location": {"type": "string", "description": "Departure"}, "end_location": {"type": "string", "description": "Arrival point"}}, "required": ["start_location", "end_location"]}}}, {"type": "function", "function": {"name": "CheckTaxRefund", "description": "Search for the user's tax refund.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "The name of the tax paymenter"}, "birth": {"type": "string", "description": "Date of birth of tax payers (YYYY-MM-DD)"}, "phone_number": {"type": "string", "description": "Contact of tax payers"}}, "required": ["name", "birth", "phone_number"]}}}, {"type": "function", "function": {"name": "compareCleaningServices", "description": "Compare the service of the cleaning company and provide information.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Location or area where cleaning services are needed"}, "requested_date": {"type": "string", "format": "date", "description": "Service date (extract user as it is. Example: next Monday, January 1, 2022, etc.)"}, "size": {"type": "string", "description": "Pyeongsu or area of ​​the house (flat, square meter)"}}, "required": ["location", "requested_date", "size"]}}}, {"type": "function", "function": {"name": "convert_pyeong_to_squaremeter", "description": "Convert it to \"평\"을 입력받아서, \"제곱미터\".", "parameters": {"type": "object", "properties": {"pyeong": {"type": "number", "description": "Pyeongsu to be transformed"}}, "required": ["pyeong"]}}}, {"type": "function", "function": {"name": "generate_syntax_tree_from_text", "description": "Create a syntax tree for a given text", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Text to create a syntax tree"}}, "required": ["text"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the date that requires the service."}, "acceptable_arguments": null}
{"serial_num": 185, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Can you find and compare the services that can be cleaned?"}, {"role": "assistant", "content": "Please tell us the location and date you need the service, the flat water or area of ​​the house."}, {"role": "user", "content": "Next Tuesday"}, {"role": "assistant", "content": "Please tell me where the service is needed and the flat water or area of ​​the house."}, {"role": "user", "content": "It's 60 pyeong."}], "input_tools": [{"type": "function", "function": {"name": "check_traffic_status", "description": "Inquire the current traffic situation on a particular path.", "parameters": {"type": "object", "properties": {"start_location": {"type": "string", "description": "Departure"}, "end_location": {"type": "string", "description": "Arrival point"}}, "required": ["start_location", "end_location"]}}}, {"type": "function", "function": {"name": "CheckTaxRefund", "description": "Search for the user's tax refund.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "The name of the tax paymenter"}, "birth": {"type": "string", "description": "Date of birth of tax payers (YYYY-MM-DD)"}, "phone_number": {"type": "string", "description": "Contact of tax payers"}}, "required": ["name", "birth", "phone_number"]}}}, {"type": "function", "function": {"name": "compareCleaningServices", "description": "Compare the service of the cleaning company and provide information.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Location or area where cleaning services are needed"}, "requested_date": {"type": "string", "format": "date", "description": "Service date (extract user as it is. Example: next Monday, January 1, 2022, etc.)"}, "size": {"type": "string", "description": "Pyeongsu or area of ​​the house (flat, square meter)"}}, "required": ["location", "requested_date", "size"]}}}, {"type": "function", "function": {"name": "convert_pyeong_to_squaremeter", "description": "Convert it to \"평\"을 입력받아서, \"제곱미터\".", "parameters": {"type": "object", "properties": {"pyeong": {"type": "number", "description": "Pyeongsu to be transformed"}}, "required": ["pyeong"]}}}, {"type": "function", "function": {"name": "generate_syntax_tree_from_text", "description": "Create a syntax tree for a given text", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Text to create a syntax tree"}}, "required": ["text"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me where the service is needed."}, "acceptable_arguments": null}
{"serial_num": 186, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Can you find and compare the services that can be cleaned?"}, {"role": "assistant", "content": "Please tell us the location and date you need the service, the flat water or area of ​​the house."}, {"role": "user", "content": "It's a 60 pyeong house"}, {"role": "assistant", "content": "Please tell me the location and date you need."}, {"role": "user", "content": "Next Tuesday."}], "input_tools": [{"type": "function", "function": {"name": "check_traffic_status", "description": "Inquire the current traffic situation on a particular path.", "parameters": {"type": "object", "properties": {"start_location": {"type": "string", "description": "Departure"}, "end_location": {"type": "string", "description": "Arrival point"}}, "required": ["start_location", "end_location"]}}}, {"type": "function", "function": {"name": "CheckTaxRefund", "description": "Search for the user's tax refund.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "The name of the tax paymenter"}, "birth": {"type": "string", "description": "Date of birth of tax payers (YYYY-MM-DD)"}, "phone_number": {"type": "string", "description": "Contact of tax payers"}}, "required": ["name", "birth", "phone_number"]}}}, {"type": "function", "function": {"name": "compareCleaningServices", "description": "Compare the service of the cleaning company and provide information.", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Location or area where cleaning services are needed"}, "requested_date": {"type": "string", "format": "date", "description": "Service date (extract user as it is. Example: next Monday, January 1, 2022, etc.)"}, "size": {"type": "string", "description": "Pyeongsu or area of ​​the house (flat, square meter)"}}, "required": ["location", "requested_date", "size"]}}}, {"type": "function", "function": {"name": "convert_pyeong_to_squaremeter", "description": "Convert it to \"평\"을 입력받아서, \"제곱미터\".", "parameters": {"type": "object", "properties": {"pyeong": {"type": "number", "description": "Pyeongsu to be transformed"}}, "required": ["pyeong"]}}}, {"type": "function", "function": {"name": "generate_syntax_tree_from_text", "description": "Create a syntax tree for a given text", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Text to create a syntax tree"}}, "required": ["text"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me where the service is needed."}, "acceptable_arguments": null}
{"serial_num": 187, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Can you post my work on the art platform? The image URL is https://example.com/myart.jpg."}], "input_tools": [{"type": "function", "function": {"name": "calculateCaloricNeeds", "description": "A function that estimates the average daily calorie consumption", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}, "height": {"type": "number", "description": "Centimeter key"}, "age": {"type": "integer", "description": "age"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["weight", "height", "age", "gender"]}}}, {"type": "function", "function": {"name": "track_order", "description": "Inquire an order status (ordering, payment completion, shipping, delivery, etc.) with a given order number and informed the expected shipping date or expected delivery date.", "parameters": {"type": "object", "properties": {"order_id": {"type": "string", "description": "Order number to search"}}, "required": ["order_id"]}}}, {"type": "function", "function": {"name": "upload_artwork_to_online_site", "description": "Upload your work to the online art platform.", "parameters": {"type": "object", "properties": {"art_image_url": {"type": "string", "description": "The image of the work to be uploaded URL"}, "title": {"type": "string", "description": "Title of the work"}, "description": {"type": "string", "description": "A brief explanation of the work"}}, "required": ["art_image_url", "title", "description"]}}}, {"type": "function", "function": {"name": "informWeather", "description": "Provide current weather information in a particular area", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Local name to bring weather information"}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "search_email_content", "description": "Search for emails containing keywords specified by the user during the saved email.", "parameters": {"type": "object", "properties": {"keyword": {"type": "string", "description": "Keyword to search"}, "from_date": {"type": "string", "description": "Date to start searching (optional)"}, "to_date": {"type": "string", "description": "Date to finish the search (optional)"}, "sender": {"type": "string", "description": "Email caller address (optional)"}}, "required": ["keyword"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the title and brief explanation of the work."}, "acceptable_arguments": null}
{"serial_num": 188, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Can you post my work on the art platform? The title is posted to '노을진 바다'."}], "input_tools": [{"type": "function", "function": {"name": "calculateCaloricNeeds", "description": "A function that estimates the average daily calorie consumption", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}, "height": {"type": "number", "description": "Centimeter key"}, "age": {"type": "integer", "description": "age"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["weight", "height", "age", "gender"]}}}, {"type": "function", "function": {"name": "track_order", "description": "Inquire an order status (ordering, payment completion, shipping, delivery, etc.) with a given order number and informed the expected shipping date or expected delivery date.", "parameters": {"type": "object", "properties": {"order_id": {"type": "string", "description": "Order number to search"}}, "required": ["order_id"]}}}, {"type": "function", "function": {"name": "upload_artwork_to_online_site", "description": "Upload your work to the online art platform.", "parameters": {"type": "object", "properties": {"art_image_url": {"type": "string", "description": "The image of the work to be uploaded URL"}, "title": {"type": "string", "description": "Title of the work"}, "description": {"type": "string", "description": "A brief explanation of the work"}}, "required": ["art_image_url", "title", "description"]}}}, {"type": "function", "function": {"name": "informWeather", "description": "Provide current weather information in a particular area", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Local name to bring weather information"}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "search_email_content", "description": "Search for emails containing keywords specified by the user during the saved email.", "parameters": {"type": "object", "properties": {"keyword": {"type": "string", "description": "Keyword to search"}, "from_date": {"type": "string", "description": "Date to start searching (optional)"}, "to_date": {"type": "string", "description": "Date to finish the search (optional)"}, "sender": {"type": "string", "description": "Email caller address (optional)"}}, "required": ["keyword"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the brief explanation of the image URL and the work of the work to be uploaded."}, "acceptable_arguments": null}
{"serial_num": 189, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Can you post my work on the art platform? Upload '바다 위로 지는 노을을 그린 작품입니다' in the description of the work"}], "input_tools": [{"type": "function", "function": {"name": "calculateCaloricNeeds", "description": "A function that estimates the average daily calorie consumption", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}, "height": {"type": "number", "description": "Centimeter key"}, "age": {"type": "integer", "description": "age"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["weight", "height", "age", "gender"]}}}, {"type": "function", "function": {"name": "track_order", "description": "Inquire an order status (ordering, payment completion, shipping, delivery, etc.) with a given order number and informed the expected shipping date or expected delivery date.", "parameters": {"type": "object", "properties": {"order_id": {"type": "string", "description": "Order number to search"}}, "required": ["order_id"]}}}, {"type": "function", "function": {"name": "upload_artwork_to_online_site", "description": "Upload your work to the online art platform.", "parameters": {"type": "object", "properties": {"art_image_url": {"type": "string", "description": "The image of the work to be uploaded URL"}, "title": {"type": "string", "description": "Title of the work"}, "description": {"type": "string", "description": "A brief explanation of the work"}}, "required": ["art_image_url", "title", "description"]}}}, {"type": "function", "function": {"name": "informWeather", "description": "Provide current weather information in a particular area", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Local name to bring weather information"}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "search_email_content", "description": "Search for emails containing keywords specified by the user during the saved email.", "parameters": {"type": "object", "properties": {"keyword": {"type": "string", "description": "Keyword to search"}, "from_date": {"type": "string", "description": "Date to start searching (optional)"}, "to_date": {"type": "string", "description": "Date to finish the search (optional)"}, "sender": {"type": "string", "description": "Email caller address (optional)"}}, "required": ["keyword"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the title of the image URL and the work of the work to be uploaded."}, "acceptable_arguments": null}
{"serial_num": 190, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Can you post my work on the art platform?"}, {"role": "assistant", "content": "Please tell us the image URL and the title of the work to be uploaded."}, {"role": "user", "content": "The image URL is https://example.com/myart.jpg."}], "input_tools": [{"type": "function", "function": {"name": "calculateCaloricNeeds", "description": "A function that estimates the average daily calorie consumption", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}, "height": {"type": "number", "description": "Centimeter key"}, "age": {"type": "integer", "description": "age"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["weight", "height", "age", "gender"]}}}, {"type": "function", "function": {"name": "track_order", "description": "Inquire an order status (ordering, payment completion, shipping, delivery, etc.) with a given order number and informed the expected shipping date or expected delivery date.", "parameters": {"type": "object", "properties": {"order_id": {"type": "string", "description": "Order number to search"}}, "required": ["order_id"]}}}, {"type": "function", "function": {"name": "upload_artwork_to_online_site", "description": "Upload your work to the online art platform.", "parameters": {"type": "object", "properties": {"art_image_url": {"type": "string", "description": "The image of the work to be uploaded URL"}, "title": {"type": "string", "description": "Title of the work"}, "description": {"type": "string", "description": "A brief explanation of the work"}}, "required": ["art_image_url", "title", "description"]}}}, {"type": "function", "function": {"name": "informWeather", "description": "Provide current weather information in a particular area", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Local name to bring weather information"}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "search_email_content", "description": "Search for emails containing keywords specified by the user during the saved email.", "parameters": {"type": "object", "properties": {"keyword": {"type": "string", "description": "Keyword to search"}, "from_date": {"type": "string", "description": "Date to start searching (optional)"}, "to_date": {"type": "string", "description": "Date to finish the search (optional)"}, "sender": {"type": "string", "description": "Email caller address (optional)"}}, "required": ["keyword"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the title and brief explanation of the work."}, "acceptable_arguments": null}
{"serial_num": 191, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Can you post my work on the art platform?"}, {"role": "assistant", "content": "Please tell us the image URL and the title of the work to be uploaded."}, {"role": "user", "content": "The title is posted to '노을진 바다'."}], "input_tools": [{"type": "function", "function": {"name": "calculateCaloricNeeds", "description": "A function that estimates the average daily calorie consumption", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}, "height": {"type": "number", "description": "Centimeter key"}, "age": {"type": "integer", "description": "age"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["weight", "height", "age", "gender"]}}}, {"type": "function", "function": {"name": "track_order", "description": "Inquire an order status (ordering, payment completion, shipping, delivery, etc.) with a given order number and informed the expected shipping date or expected delivery date.", "parameters": {"type": "object", "properties": {"order_id": {"type": "string", "description": "Order number to search"}}, "required": ["order_id"]}}}, {"type": "function", "function": {"name": "upload_artwork_to_online_site", "description": "Upload your work to the online art platform.", "parameters": {"type": "object", "properties": {"art_image_url": {"type": "string", "description": "The image of the work to be uploaded URL"}, "title": {"type": "string", "description": "Title of the work"}, "description": {"type": "string", "description": "A brief explanation of the work"}}, "required": ["art_image_url", "title", "description"]}}}, {"type": "function", "function": {"name": "informWeather", "description": "Provide current weather information in a particular area", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Local name to bring weather information"}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "search_email_content", "description": "Search for emails containing keywords specified by the user during the saved email.", "parameters": {"type": "object", "properties": {"keyword": {"type": "string", "description": "Keyword to search"}, "from_date": {"type": "string", "description": "Date to start searching (optional)"}, "to_date": {"type": "string", "description": "Date to finish the search (optional)"}, "sender": {"type": "string", "description": "Email caller address (optional)"}}, "required": ["keyword"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the brief explanation of the image URL and the work of the work to be uploaded."}, "acceptable_arguments": null}
{"serial_num": 192, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Can you post my work on the art platform?"}, {"role": "assistant", "content": "Please tell us the image URL and the title of the work to be uploaded."}, {"role": "user", "content": "Upload '바다 위로 지는 노을을 그린 작품입니다' in the description of the work"}], "input_tools": [{"type": "function", "function": {"name": "calculateCaloricNeeds", "description": "A function that estimates the average daily calorie consumption", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}, "height": {"type": "number", "description": "Centimeter key"}, "age": {"type": "integer", "description": "age"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["weight", "height", "age", "gender"]}}}, {"type": "function", "function": {"name": "track_order", "description": "Inquire an order status (ordering, payment completion, shipping, delivery, etc.) with a given order number and informed the expected shipping date or expected delivery date.", "parameters": {"type": "object", "properties": {"order_id": {"type": "string", "description": "Order number to search"}}, "required": ["order_id"]}}}, {"type": "function", "function": {"name": "upload_artwork_to_online_site", "description": "Upload your work to the online art platform.", "parameters": {"type": "object", "properties": {"art_image_url": {"type": "string", "description": "The image of the work to be uploaded URL"}, "title": {"type": "string", "description": "Title of the work"}, "description": {"type": "string", "description": "A brief explanation of the work"}}, "required": ["art_image_url", "title", "description"]}}}, {"type": "function", "function": {"name": "informWeather", "description": "Provide current weather information in a particular area", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Local name to bring weather information"}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "search_email_content", "description": "Search for emails containing keywords specified by the user during the saved email.", "parameters": {"type": "object", "properties": {"keyword": {"type": "string", "description": "Keyword to search"}, "from_date": {"type": "string", "description": "Date to start searching (optional)"}, "to_date": {"type": "string", "description": "Date to finish the search (optional)"}, "sender": {"type": "string", "description": "Email caller address (optional)"}}, "required": ["keyword"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the title of the image URL and the work of the work to be uploaded."}, "acceptable_arguments": null}
{"serial_num": 193, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Can you post my work on the art platform? Image URL is https://example.com/myart.jpg, the title is '노을진 바다'."}], "input_tools": [{"type": "function", "function": {"name": "calculateCaloricNeeds", "description": "A function that estimates the average daily calorie consumption", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}, "height": {"type": "number", "description": "Centimeter key"}, "age": {"type": "integer", "description": "age"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["weight", "height", "age", "gender"]}}}, {"type": "function", "function": {"name": "track_order", "description": "Inquire an order status (ordering, payment completion, shipping, delivery, etc.) with a given order number and informed the expected shipping date or expected delivery date.", "parameters": {"type": "object", "properties": {"order_id": {"type": "string", "description": "Order number to search"}}, "required": ["order_id"]}}}, {"type": "function", "function": {"name": "upload_artwork_to_online_site", "description": "Upload your work to the online art platform.", "parameters": {"type": "object", "properties": {"art_image_url": {"type": "string", "description": "The image of the work to be uploaded URL"}, "title": {"type": "string", "description": "Title of the work"}, "description": {"type": "string", "description": "A brief explanation of the work"}}, "required": ["art_image_url", "title", "description"]}}}, {"type": "function", "function": {"name": "informWeather", "description": "Provide current weather information in a particular area", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Local name to bring weather information"}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "search_email_content", "description": "Search for emails containing keywords specified by the user during the saved email.", "parameters": {"type": "object", "properties": {"keyword": {"type": "string", "description": "Keyword to search"}, "from_date": {"type": "string", "description": "Date to start searching (optional)"}, "to_date": {"type": "string", "description": "Date to finish the search (optional)"}, "sender": {"type": "string", "description": "Email caller address (optional)"}}, "required": ["keyword"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me a brief explanation of the work."}, "acceptable_arguments": null}
{"serial_num": 194, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Can you post my work on the art platform? The title is '노을진 바다' and the image URL is https://example.com/myart.jpg."}], "input_tools": [{"type": "function", "function": {"name": "calculateCaloricNeeds", "description": "A function that estimates the average daily calorie consumption", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}, "height": {"type": "number", "description": "Centimeter key"}, "age": {"type": "integer", "description": "age"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["weight", "height", "age", "gender"]}}}, {"type": "function", "function": {"name": "track_order", "description": "Inquire an order status (ordering, payment completion, shipping, delivery, etc.) with a given order number and informed the expected shipping date or expected delivery date.", "parameters": {"type": "object", "properties": {"order_id": {"type": "string", "description": "Order number to search"}}, "required": ["order_id"]}}}, {"type": "function", "function": {"name": "upload_artwork_to_online_site", "description": "Upload your work to the online art platform.", "parameters": {"type": "object", "properties": {"art_image_url": {"type": "string", "description": "The image of the work to be uploaded URL"}, "title": {"type": "string", "description": "Title of the work"}, "description": {"type": "string", "description": "A brief explanation of the work"}}, "required": ["art_image_url", "title", "description"]}}}, {"type": "function", "function": {"name": "informWeather", "description": "Provide current weather information in a particular area", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Local name to bring weather information"}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "search_email_content", "description": "Search for emails containing keywords specified by the user during the saved email.", "parameters": {"type": "object", "properties": {"keyword": {"type": "string", "description": "Keyword to search"}, "from_date": {"type": "string", "description": "Date to start searching (optional)"}, "to_date": {"type": "string", "description": "Date to finish the search (optional)"}, "sender": {"type": "string", "description": "Email caller address (optional)"}}, "required": ["keyword"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me a brief explanation of the work."}, "acceptable_arguments": null}
{"serial_num": 195, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Can you post my work on the art platform? The image URL is https://example.com/myart.jpg. And in the description of the work, please upload '바다 위로 지는 노을을 그린 작품입니다'"}], "input_tools": [{"type": "function", "function": {"name": "calculateCaloricNeeds", "description": "A function that estimates the average daily calorie consumption", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}, "height": {"type": "number", "description": "Centimeter key"}, "age": {"type": "integer", "description": "age"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["weight", "height", "age", "gender"]}}}, {"type": "function", "function": {"name": "track_order", "description": "Inquire an order status (ordering, payment completion, shipping, delivery, etc.) with a given order number and informed the expected shipping date or expected delivery date.", "parameters": {"type": "object", "properties": {"order_id": {"type": "string", "description": "Order number to search"}}, "required": ["order_id"]}}}, {"type": "function", "function": {"name": "upload_artwork_to_online_site", "description": "Upload your work to the online art platform.", "parameters": {"type": "object", "properties": {"art_image_url": {"type": "string", "description": "The image of the work to be uploaded URL"}, "title": {"type": "string", "description": "Title of the work"}, "description": {"type": "string", "description": "A brief explanation of the work"}}, "required": ["art_image_url", "title", "description"]}}}, {"type": "function", "function": {"name": "informWeather", "description": "Provide current weather information in a particular area", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Local name to bring weather information"}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "search_email_content", "description": "Search for emails containing keywords specified by the user during the saved email.", "parameters": {"type": "object", "properties": {"keyword": {"type": "string", "description": "Keyword to search"}, "from_date": {"type": "string", "description": "Date to start searching (optional)"}, "to_date": {"type": "string", "description": "Date to finish the search (optional)"}, "sender": {"type": "string", "description": "Email caller address (optional)"}}, "required": ["keyword"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the title of the work."}, "acceptable_arguments": null}
{"serial_num": 196, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Can you post my work on the art platform? The description of the work. Uplot '바다 위로 지는 노을을 그린 작품입니다'. The image URL is https://example.com/myart.jpg."}], "input_tools": [{"type": "function", "function": {"name": "calculateCaloricNeeds", "description": "A function that estimates the average daily calorie consumption", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}, "height": {"type": "number", "description": "Centimeter key"}, "age": {"type": "integer", "description": "age"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["weight", "height", "age", "gender"]}}}, {"type": "function", "function": {"name": "track_order", "description": "Inquire an order status (ordering, payment completion, shipping, delivery, etc.) with a given order number and informed the expected shipping date or expected delivery date.", "parameters": {"type": "object", "properties": {"order_id": {"type": "string", "description": "Order number to search"}}, "required": ["order_id"]}}}, {"type": "function", "function": {"name": "upload_artwork_to_online_site", "description": "Upload your work to the online art platform.", "parameters": {"type": "object", "properties": {"art_image_url": {"type": "string", "description": "The image of the work to be uploaded URL"}, "title": {"type": "string", "description": "Title of the work"}, "description": {"type": "string", "description": "A brief explanation of the work"}}, "required": ["art_image_url", "title", "description"]}}}, {"type": "function", "function": {"name": "informWeather", "description": "Provide current weather information in a particular area", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Local name to bring weather information"}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "search_email_content", "description": "Search for emails containing keywords specified by the user during the saved email.", "parameters": {"type": "object", "properties": {"keyword": {"type": "string", "description": "Keyword to search"}, "from_date": {"type": "string", "description": "Date to start searching (optional)"}, "to_date": {"type": "string", "description": "Date to finish the search (optional)"}, "sender": {"type": "string", "description": "Email caller address (optional)"}}, "required": ["keyword"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the title of the work."}, "acceptable_arguments": null}
{"serial_num": 197, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Can you post my work on the art platform? The title is '노을진 바다'로 올려줘. 설명은 '바다 위로 지는 노을을 그린 작품입니다'"}], "input_tools": [{"type": "function", "function": {"name": "calculateCaloricNeeds", "description": "A function that estimates the average daily calorie consumption", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}, "height": {"type": "number", "description": "Centimeter key"}, "age": {"type": "integer", "description": "age"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["weight", "height", "age", "gender"]}}}, {"type": "function", "function": {"name": "track_order", "description": "Inquire an order status (ordering, payment completion, shipping, delivery, etc.) with a given order number and informed the expected shipping date or expected delivery date.", "parameters": {"type": "object", "properties": {"order_id": {"type": "string", "description": "Order number to search"}}, "required": ["order_id"]}}}, {"type": "function", "function": {"name": "upload_artwork_to_online_site", "description": "Upload your work to the online art platform.", "parameters": {"type": "object", "properties": {"art_image_url": {"type": "string", "description": "The image of the work to be uploaded URL"}, "title": {"type": "string", "description": "Title of the work"}, "description": {"type": "string", "description": "A brief explanation of the work"}}, "required": ["art_image_url", "title", "description"]}}}, {"type": "function", "function": {"name": "informWeather", "description": "Provide current weather information in a particular area", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Local name to bring weather information"}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "search_email_content", "description": "Search for emails containing keywords specified by the user during the saved email.", "parameters": {"type": "object", "properties": {"keyword": {"type": "string", "description": "Keyword to search"}, "from_date": {"type": "string", "description": "Date to start searching (optional)"}, "to_date": {"type": "string", "description": "Date to finish the search (optional)"}, "sender": {"type": "string", "description": "Email caller address (optional)"}}, "required": ["keyword"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the image URL of the work to be uploaded."}, "acceptable_arguments": null}
{"serial_num": 198, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Can you post my work on the art platform? The description of the work is made to '바다 위로 지는 노을을 그린 작품입니다'로, 제목은 '노을진 바다'."}], "input_tools": [{"type": "function", "function": {"name": "calculateCaloricNeeds", "description": "A function that estimates the average daily calorie consumption", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}, "height": {"type": "number", "description": "Centimeter key"}, "age": {"type": "integer", "description": "age"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["weight", "height", "age", "gender"]}}}, {"type": "function", "function": {"name": "track_order", "description": "Inquire an order status (ordering, payment completion, shipping, delivery, etc.) with a given order number and informed the expected shipping date or expected delivery date.", "parameters": {"type": "object", "properties": {"order_id": {"type": "string", "description": "Order number to search"}}, "required": ["order_id"]}}}, {"type": "function", "function": {"name": "upload_artwork_to_online_site", "description": "Upload your work to the online art platform.", "parameters": {"type": "object", "properties": {"art_image_url": {"type": "string", "description": "The image of the work to be uploaded URL"}, "title": {"type": "string", "description": "Title of the work"}, "description": {"type": "string", "description": "A brief explanation of the work"}}, "required": ["art_image_url", "title", "description"]}}}, {"type": "function", "function": {"name": "informWeather", "description": "Provide current weather information in a particular area", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Local name to bring weather information"}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "search_email_content", "description": "Search for emails containing keywords specified by the user during the saved email.", "parameters": {"type": "object", "properties": {"keyword": {"type": "string", "description": "Keyword to search"}, "from_date": {"type": "string", "description": "Date to start searching (optional)"}, "to_date": {"type": "string", "description": "Date to finish the search (optional)"}, "sender": {"type": "string", "description": "Email caller address (optional)"}}, "required": ["keyword"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the image URL of the work to be uploaded."}, "acceptable_arguments": null}
{"serial_num": 199, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Can you post my work on the art platform?"}, {"role": "assistant", "content": "Please tell us the image URL and the title of the work to be uploaded."}, {"role": "user", "content": "Image URL is https://example.com/myart.jpg, the title is '노을진 바다'."}], "input_tools": [{"type": "function", "function": {"name": "calculateCaloricNeeds", "description": "A function that estimates the average daily calorie consumption", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}, "height": {"type": "number", "description": "Centimeter key"}, "age": {"type": "integer", "description": "age"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["weight", "height", "age", "gender"]}}}, {"type": "function", "function": {"name": "track_order", "description": "Inquire an order status (ordering, payment completion, shipping, delivery, etc.) with a given order number and informed the expected shipping date or expected delivery date.", "parameters": {"type": "object", "properties": {"order_id": {"type": "string", "description": "Order number to search"}}, "required": ["order_id"]}}}, {"type": "function", "function": {"name": "upload_artwork_to_online_site", "description": "Upload your work to the online art platform.", "parameters": {"type": "object", "properties": {"art_image_url": {"type": "string", "description": "The image of the work to be uploaded URL"}, "title": {"type": "string", "description": "Title of the work"}, "description": {"type": "string", "description": "A brief explanation of the work"}}, "required": ["art_image_url", "title", "description"]}}}, {"type": "function", "function": {"name": "informWeather", "description": "Provide current weather information in a particular area", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Local name to bring weather information"}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "search_email_content", "description": "Search for emails containing keywords specified by the user during the saved email.", "parameters": {"type": "object", "properties": {"keyword": {"type": "string", "description": "Keyword to search"}, "from_date": {"type": "string", "description": "Date to start searching (optional)"}, "to_date": {"type": "string", "description": "Date to finish the search (optional)"}, "sender": {"type": "string", "description": "Email caller address (optional)"}}, "required": ["keyword"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me a brief explanation of the work."}, "acceptable_arguments": null}
{"serial_num": 200, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Can you post my work on the art platform?"}, {"role": "assistant", "content": "Please tell us the image URL and the title of the work to be uploaded."}, {"role": "user", "content": "The title is '노을진 바다' and the image URL is https://example.com/myart.jpg."}], "input_tools": [{"type": "function", "function": {"name": "calculateCaloricNeeds", "description": "A function that estimates the average daily calorie consumption", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}, "height": {"type": "number", "description": "Centimeter key"}, "age": {"type": "integer", "description": "age"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["weight", "height", "age", "gender"]}}}, {"type": "function", "function": {"name": "track_order", "description": "Inquire an order status (ordering, payment completion, shipping, delivery, etc.) with a given order number and informed the expected shipping date or expected delivery date.", "parameters": {"type": "object", "properties": {"order_id": {"type": "string", "description": "Order number to search"}}, "required": ["order_id"]}}}, {"type": "function", "function": {"name": "upload_artwork_to_online_site", "description": "Upload your work to the online art platform.", "parameters": {"type": "object", "properties": {"art_image_url": {"type": "string", "description": "The image of the work to be uploaded URL"}, "title": {"type": "string", "description": "Title of the work"}, "description": {"type": "string", "description": "A brief explanation of the work"}}, "required": ["art_image_url", "title", "description"]}}}, {"type": "function", "function": {"name": "informWeather", "description": "Provide current weather information in a particular area", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Local name to bring weather information"}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "search_email_content", "description": "Search for emails containing keywords specified by the user during the saved email.", "parameters": {"type": "object", "properties": {"keyword": {"type": "string", "description": "Keyword to search"}, "from_date": {"type": "string", "description": "Date to start searching (optional)"}, "to_date": {"type": "string", "description": "Date to finish the search (optional)"}, "sender": {"type": "string", "description": "Email caller address (optional)"}}, "required": ["keyword"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me a brief explanation of the work."}, "acceptable_arguments": null}
{"serial_num": 201, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Can you post my work on the art platform?"}, {"role": "assistant", "content": "Please tell us the image URL and the title of the work to be uploaded."}, {"role": "user", "content": "The image URL is https://example.com/myart.jpg. And in the description of the work, please upload '바다 위로 지는 노을을 그린 작품입니다'"}], "input_tools": [{"type": "function", "function": {"name": "calculateCaloricNeeds", "description": "A function that estimates the average daily calorie consumption", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}, "height": {"type": "number", "description": "Centimeter key"}, "age": {"type": "integer", "description": "age"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["weight", "height", "age", "gender"]}}}, {"type": "function", "function": {"name": "track_order", "description": "Inquire an order status (ordering, payment completion, shipping, delivery, etc.) with a given order number and informed the expected shipping date or expected delivery date.", "parameters": {"type": "object", "properties": {"order_id": {"type": "string", "description": "Order number to search"}}, "required": ["order_id"]}}}, {"type": "function", "function": {"name": "upload_artwork_to_online_site", "description": "Upload your work to the online art platform.", "parameters": {"type": "object", "properties": {"art_image_url": {"type": "string", "description": "The image of the work to be uploaded URL"}, "title": {"type": "string", "description": "Title of the work"}, "description": {"type": "string", "description": "A brief explanation of the work"}}, "required": ["art_image_url", "title", "description"]}}}, {"type": "function", "function": {"name": "informWeather", "description": "Provide current weather information in a particular area", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Local name to bring weather information"}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "search_email_content", "description": "Search for emails containing keywords specified by the user during the saved email.", "parameters": {"type": "object", "properties": {"keyword": {"type": "string", "description": "Keyword to search"}, "from_date": {"type": "string", "description": "Date to start searching (optional)"}, "to_date": {"type": "string", "description": "Date to finish the search (optional)"}, "sender": {"type": "string", "description": "Email caller address (optional)"}}, "required": ["keyword"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the title of the work."}, "acceptable_arguments": null}
{"serial_num": 202, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Can you post my work on the art platform?"}, {"role": "assistant", "content": "Please tell us the image URL and the title of the work to be uploaded."}, {"role": "user", "content": "Upload your work description as '바다 위로 지는 노을을 그린 작품입니다'. The image URL is https://example.com/myart.jpg."}], "input_tools": [{"type": "function", "function": {"name": "calculateCaloricNeeds", "description": "A function that estimates the average daily calorie consumption", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}, "height": {"type": "number", "description": "Centimeter key"}, "age": {"type": "integer", "description": "age"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["weight", "height", "age", "gender"]}}}, {"type": "function", "function": {"name": "track_order", "description": "Inquire an order status (ordering, payment completion, shipping, delivery, etc.) with a given order number and informed the expected shipping date or expected delivery date.", "parameters": {"type": "object", "properties": {"order_id": {"type": "string", "description": "Order number to search"}}, "required": ["order_id"]}}}, {"type": "function", "function": {"name": "upload_artwork_to_online_site", "description": "Upload your work to the online art platform.", "parameters": {"type": "object", "properties": {"art_image_url": {"type": "string", "description": "The image of the work to be uploaded URL"}, "title": {"type": "string", "description": "Title of the work"}, "description": {"type": "string", "description": "A brief explanation of the work"}}, "required": ["art_image_url", "title", "description"]}}}, {"type": "function", "function": {"name": "informWeather", "description": "Provide current weather information in a particular area", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Local name to bring weather information"}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "search_email_content", "description": "Search for emails containing keywords specified by the user during the saved email.", "parameters": {"type": "object", "properties": {"keyword": {"type": "string", "description": "Keyword to search"}, "from_date": {"type": "string", "description": "Date to start searching (optional)"}, "to_date": {"type": "string", "description": "Date to finish the search (optional)"}, "sender": {"type": "string", "description": "Email caller address (optional)"}}, "required": ["keyword"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the title of the work."}, "acceptable_arguments": null}
{"serial_num": 203, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Can you post my work on the art platform?"}, {"role": "assistant", "content": "Please tell us the image URL and the title of the work to be uploaded."}, {"role": "user", "content": "The title is '노을진 바다'로 올려줘. 설명은 '바다 위로 지는 노을을 그린 작품입니다'"}], "input_tools": [{"type": "function", "function": {"name": "calculateCaloricNeeds", "description": "A function that estimates the average daily calorie consumption", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}, "height": {"type": "number", "description": "Centimeter key"}, "age": {"type": "integer", "description": "age"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["weight", "height", "age", "gender"]}}}, {"type": "function", "function": {"name": "track_order", "description": "Inquire an order status (ordering, payment completion, shipping, delivery, etc.) with a given order number and informed the expected shipping date or expected delivery date.", "parameters": {"type": "object", "properties": {"order_id": {"type": "string", "description": "Order number to search"}}, "required": ["order_id"]}}}, {"type": "function", "function": {"name": "upload_artwork_to_online_site", "description": "Upload your work to the online art platform.", "parameters": {"type": "object", "properties": {"art_image_url": {"type": "string", "description": "The image of the work to be uploaded URL"}, "title": {"type": "string", "description": "Title of the work"}, "description": {"type": "string", "description": "A brief explanation of the work"}}, "required": ["art_image_url", "title", "description"]}}}, {"type": "function", "function": {"name": "informWeather", "description": "Provide current weather information in a particular area", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Local name to bring weather information"}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "search_email_content", "description": "Search for emails containing keywords specified by the user during the saved email.", "parameters": {"type": "object", "properties": {"keyword": {"type": "string", "description": "Keyword to search"}, "from_date": {"type": "string", "description": "Date to start searching (optional)"}, "to_date": {"type": "string", "description": "Date to finish the search (optional)"}, "sender": {"type": "string", "description": "Email caller address (optional)"}}, "required": ["keyword"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the image URL of the work to be uploaded."}, "acceptable_arguments": null}
{"serial_num": 204, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Can you post my work on the art platform?"}, {"role": "assistant", "content": "Please tell us the image URL and the title of the work to be uploaded."}, {"role": "user", "content": "The description of the work is made to '바다 위로 지는 노을을 그린 작품입니다'로, 제목은 '노을진 바다'."}], "input_tools": [{"type": "function", "function": {"name": "calculateCaloricNeeds", "description": "A function that estimates the average daily calorie consumption", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}, "height": {"type": "number", "description": "Centimeter key"}, "age": {"type": "integer", "description": "age"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["weight", "height", "age", "gender"]}}}, {"type": "function", "function": {"name": "track_order", "description": "Inquire an order status (ordering, payment completion, shipping, delivery, etc.) with a given order number and informed the expected shipping date or expected delivery date.", "parameters": {"type": "object", "properties": {"order_id": {"type": "string", "description": "Order number to search"}}, "required": ["order_id"]}}}, {"type": "function", "function": {"name": "upload_artwork_to_online_site", "description": "Upload your work to the online art platform.", "parameters": {"type": "object", "properties": {"art_image_url": {"type": "string", "description": "The image of the work to be uploaded URL"}, "title": {"type": "string", "description": "Title of the work"}, "description": {"type": "string", "description": "A brief explanation of the work"}}, "required": ["art_image_url", "title", "description"]}}}, {"type": "function", "function": {"name": "informWeather", "description": "Provide current weather information in a particular area", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Local name to bring weather information"}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "search_email_content", "description": "Search for emails containing keywords specified by the user during the saved email.", "parameters": {"type": "object", "properties": {"keyword": {"type": "string", "description": "Keyword to search"}, "from_date": {"type": "string", "description": "Date to start searching (optional)"}, "to_date": {"type": "string", "description": "Date to finish the search (optional)"}, "sender": {"type": "string", "description": "Email caller address (optional)"}}, "required": ["keyword"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the image URL of the work to be uploaded."}, "acceptable_arguments": null}
{"serial_num": 205, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Can you post my work on the art platform? The image URL is https://example.com/myart.jpg."}, {"role": "assistant", "content": "Please tell me the title and brief explanation of the work."}, {"role": "user", "content": "The title is '노을진 바다'"}], "input_tools": [{"type": "function", "function": {"name": "calculateCaloricNeeds", "description": "A function that estimates the average daily calorie consumption", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}, "height": {"type": "number", "description": "Centimeter key"}, "age": {"type": "integer", "description": "age"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["weight", "height", "age", "gender"]}}}, {"type": "function", "function": {"name": "track_order", "description": "Inquire an order status (ordering, payment completion, shipping, delivery, etc.) with a given order number and informed the expected shipping date or expected delivery date.", "parameters": {"type": "object", "properties": {"order_id": {"type": "string", "description": "Order number to search"}}, "required": ["order_id"]}}}, {"type": "function", "function": {"name": "upload_artwork_to_online_site", "description": "Upload your work to the online art platform.", "parameters": {"type": "object", "properties": {"art_image_url": {"type": "string", "description": "The image of the work to be uploaded URL"}, "title": {"type": "string", "description": "Title of the work"}, "description": {"type": "string", "description": "A brief explanation of the work"}}, "required": ["art_image_url", "title", "description"]}}}, {"type": "function", "function": {"name": "informWeather", "description": "Provide current weather information in a particular area", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Local name to bring weather information"}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "search_email_content", "description": "Search for emails containing keywords specified by the user during the saved email.", "parameters": {"type": "object", "properties": {"keyword": {"type": "string", "description": "Keyword to search"}, "from_date": {"type": "string", "description": "Date to start searching (optional)"}, "to_date": {"type": "string", "description": "Date to finish the search (optional)"}, "sender": {"type": "string", "description": "Email caller address (optional)"}}, "required": ["keyword"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me a brief explanation of the work."}, "acceptable_arguments": null}
{"serial_num": 206, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Can you post my work on the art platform? The title is posted to '노을진 바다'."}, {"role": "assistant", "content": "Please tell me the brief explanation of the image URL and the work of the work to be uploaded."}, {"role": "user", "content": "Image URL is https://example.com/myart.jpg"}], "input_tools": [{"type": "function", "function": {"name": "calculateCaloricNeeds", "description": "A function that estimates the average daily calorie consumption", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}, "height": {"type": "number", "description": "Centimeter key"}, "age": {"type": "integer", "description": "age"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["weight", "height", "age", "gender"]}}}, {"type": "function", "function": {"name": "track_order", "description": "Inquire an order status (ordering, payment completion, shipping, delivery, etc.) with a given order number and informed the expected shipping date or expected delivery date.", "parameters": {"type": "object", "properties": {"order_id": {"type": "string", "description": "Order number to search"}}, "required": ["order_id"]}}}, {"type": "function", "function": {"name": "upload_artwork_to_online_site", "description": "Upload your work to the online art platform.", "parameters": {"type": "object", "properties": {"art_image_url": {"type": "string", "description": "The image of the work to be uploaded URL"}, "title": {"type": "string", "description": "Title of the work"}, "description": {"type": "string", "description": "A brief explanation of the work"}}, "required": ["art_image_url", "title", "description"]}}}, {"type": "function", "function": {"name": "informWeather", "description": "Provide current weather information in a particular area", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Local name to bring weather information"}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "search_email_content", "description": "Search for emails containing keywords specified by the user during the saved email.", "parameters": {"type": "object", "properties": {"keyword": {"type": "string", "description": "Keyword to search"}, "from_date": {"type": "string", "description": "Date to start searching (optional)"}, "to_date": {"type": "string", "description": "Date to finish the search (optional)"}, "sender": {"type": "string", "description": "Email caller address (optional)"}}, "required": ["keyword"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me a brief explanation of the work."}, "acceptable_arguments": null}
{"serial_num": 207, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Can you post my work on the art platform? The image URL is https://example.com/myart.jpg."}, {"role": "assistant", "content": "Please tell me the title and brief explanation of the work."}, {"role": "user", "content": "For explanation, please upload '바다 위로 지는 노을을 그린 작품입니다'"}], "input_tools": [{"type": "function", "function": {"name": "calculateCaloricNeeds", "description": "A function that estimates the average daily calorie consumption", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}, "height": {"type": "number", "description": "Centimeter key"}, "age": {"type": "integer", "description": "age"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["weight", "height", "age", "gender"]}}}, {"type": "function", "function": {"name": "track_order", "description": "Inquire an order status (ordering, payment completion, shipping, delivery, etc.) with a given order number and informed the expected shipping date or expected delivery date.", "parameters": {"type": "object", "properties": {"order_id": {"type": "string", "description": "Order number to search"}}, "required": ["order_id"]}}}, {"type": "function", "function": {"name": "upload_artwork_to_online_site", "description": "Upload your work to the online art platform.", "parameters": {"type": "object", "properties": {"art_image_url": {"type": "string", "description": "The image of the work to be uploaded URL"}, "title": {"type": "string", "description": "Title of the work"}, "description": {"type": "string", "description": "A brief explanation of the work"}}, "required": ["art_image_url", "title", "description"]}}}, {"type": "function", "function": {"name": "informWeather", "description": "Provide current weather information in a particular area", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Local name to bring weather information"}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "search_email_content", "description": "Search for emails containing keywords specified by the user during the saved email.", "parameters": {"type": "object", "properties": {"keyword": {"type": "string", "description": "Keyword to search"}, "from_date": {"type": "string", "description": "Date to start searching (optional)"}, "to_date": {"type": "string", "description": "Date to finish the search (optional)"}, "sender": {"type": "string", "description": "Email caller address (optional)"}}, "required": ["keyword"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the title of the work."}, "acceptable_arguments": null}
{"serial_num": 208, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Can you post my work on the art platform? Upload '바다 위로 지는 노을을 그린 작품입니다' in the description of the work"}, {"role": "assistant", "content": "Please tell me the title of the image URL and the work of the work to be uploaded."}, {"role": "user", "content": "Image URL is https://example.com/myart.jpg"}], "input_tools": [{"type": "function", "function": {"name": "calculateCaloricNeeds", "description": "A function that estimates the average daily calorie consumption", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}, "height": {"type": "number", "description": "Centimeter key"}, "age": {"type": "integer", "description": "age"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["weight", "height", "age", "gender"]}}}, {"type": "function", "function": {"name": "track_order", "description": "Inquire an order status (ordering, payment completion, shipping, delivery, etc.) with a given order number and informed the expected shipping date or expected delivery date.", "parameters": {"type": "object", "properties": {"order_id": {"type": "string", "description": "Order number to search"}}, "required": ["order_id"]}}}, {"type": "function", "function": {"name": "upload_artwork_to_online_site", "description": "Upload your work to the online art platform.", "parameters": {"type": "object", "properties": {"art_image_url": {"type": "string", "description": "The image of the work to be uploaded URL"}, "title": {"type": "string", "description": "Title of the work"}, "description": {"type": "string", "description": "A brief explanation of the work"}}, "required": ["art_image_url", "title", "description"]}}}, {"type": "function", "function": {"name": "informWeather", "description": "Provide current weather information in a particular area", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Local name to bring weather information"}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "search_email_content", "description": "Search for emails containing keywords specified by the user during the saved email.", "parameters": {"type": "object", "properties": {"keyword": {"type": "string", "description": "Keyword to search"}, "from_date": {"type": "string", "description": "Date to start searching (optional)"}, "to_date": {"type": "string", "description": "Date to finish the search (optional)"}, "sender": {"type": "string", "description": "Email caller address (optional)"}}, "required": ["keyword"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the title of the work."}, "acceptable_arguments": null}
{"serial_num": 209, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Can you post my work on the art platform? The title is posted to '노을진 바다'."}, {"role": "assistant", "content": "Please tell me the brief explanation of the image URL and the work of the work to be uploaded."}, {"role": "user", "content": "For explanation, please upload '바다 위로 지는 노을을 그린 작품입니다'"}], "input_tools": [{"type": "function", "function": {"name": "calculateCaloricNeeds", "description": "A function that estimates the average daily calorie consumption", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}, "height": {"type": "number", "description": "Centimeter key"}, "age": {"type": "integer", "description": "age"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["weight", "height", "age", "gender"]}}}, {"type": "function", "function": {"name": "track_order", "description": "Inquire an order status (ordering, payment completion, shipping, delivery, etc.) with a given order number and informed the expected shipping date or expected delivery date.", "parameters": {"type": "object", "properties": {"order_id": {"type": "string", "description": "Order number to search"}}, "required": ["order_id"]}}}, {"type": "function", "function": {"name": "upload_artwork_to_online_site", "description": "Upload your work to the online art platform.", "parameters": {"type": "object", "properties": {"art_image_url": {"type": "string", "description": "The image of the work to be uploaded URL"}, "title": {"type": "string", "description": "Title of the work"}, "description": {"type": "string", "description": "A brief explanation of the work"}}, "required": ["art_image_url", "title", "description"]}}}, {"type": "function", "function": {"name": "informWeather", "description": "Provide current weather information in a particular area", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Local name to bring weather information"}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "search_email_content", "description": "Search for emails containing keywords specified by the user during the saved email.", "parameters": {"type": "object", "properties": {"keyword": {"type": "string", "description": "Keyword to search"}, "from_date": {"type": "string", "description": "Date to start searching (optional)"}, "to_date": {"type": "string", "description": "Date to finish the search (optional)"}, "sender": {"type": "string", "description": "Email caller address (optional)"}}, "required": ["keyword"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the image URL of the work to be uploaded."}, "acceptable_arguments": null}
{"serial_num": 210, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Can you post my work on the art platform? Upload '바다 위로 지는 노을을 그린 작품입니다' in the description of the work"}, {"role": "assistant", "content": "Please tell me the title of the image URL and the work of the work to be uploaded."}, {"role": "user", "content": "The title is '노을진 바다'"}], "input_tools": [{"type": "function", "function": {"name": "calculateCaloricNeeds", "description": "A function that estimates the average daily calorie consumption", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}, "height": {"type": "number", "description": "Centimeter key"}, "age": {"type": "integer", "description": "age"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["weight", "height", "age", "gender"]}}}, {"type": "function", "function": {"name": "track_order", "description": "Inquire an order status (ordering, payment completion, shipping, delivery, etc.) with a given order number and informed the expected shipping date or expected delivery date.", "parameters": {"type": "object", "properties": {"order_id": {"type": "string", "description": "Order number to search"}}, "required": ["order_id"]}}}, {"type": "function", "function": {"name": "upload_artwork_to_online_site", "description": "Upload your work to the online art platform.", "parameters": {"type": "object", "properties": {"art_image_url": {"type": "string", "description": "The image of the work to be uploaded URL"}, "title": {"type": "string", "description": "Title of the work"}, "description": {"type": "string", "description": "A brief explanation of the work"}}, "required": ["art_image_url", "title", "description"]}}}, {"type": "function", "function": {"name": "informWeather", "description": "Provide current weather information in a particular area", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Local name to bring weather information"}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "search_email_content", "description": "Search for emails containing keywords specified by the user during the saved email.", "parameters": {"type": "object", "properties": {"keyword": {"type": "string", "description": "Keyword to search"}, "from_date": {"type": "string", "description": "Date to start searching (optional)"}, "to_date": {"type": "string", "description": "Date to finish the search (optional)"}, "sender": {"type": "string", "description": "Email caller address (optional)"}}, "required": ["keyword"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the image URL of the work to be uploaded."}, "acceptable_arguments": null}
{"serial_num": 211, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Can you post my work on the art platform?"}, {"role": "assistant", "content": "Please tell us the image URL and the title of the work to be uploaded."}, {"role": "user", "content": "The image URL is https://example.com/myart.jpg."}, {"role": "assistant", "content": "Please tell me the title and brief explanation of the work."}, {"role": "user", "content": "The title is '노을진 바다'"}], "input_tools": [{"type": "function", "function": {"name": "calculateCaloricNeeds", "description": "A function that estimates the average daily calorie consumption", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}, "height": {"type": "number", "description": "Centimeter key"}, "age": {"type": "integer", "description": "age"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["weight", "height", "age", "gender"]}}}, {"type": "function", "function": {"name": "track_order", "description": "Inquire an order status (ordering, payment completion, shipping, delivery, etc.) with a given order number and informed the expected shipping date or expected delivery date.", "parameters": {"type": "object", "properties": {"order_id": {"type": "string", "description": "Order number to search"}}, "required": ["order_id"]}}}, {"type": "function", "function": {"name": "upload_artwork_to_online_site", "description": "Upload your work to the online art platform.", "parameters": {"type": "object", "properties": {"art_image_url": {"type": "string", "description": "The image of the work to be uploaded URL"}, "title": {"type": "string", "description": "Title of the work"}, "description": {"type": "string", "description": "A brief explanation of the work"}}, "required": ["art_image_url", "title", "description"]}}}, {"type": "function", "function": {"name": "informWeather", "description": "Provide current weather information in a particular area", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Local name to bring weather information"}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "search_email_content", "description": "Search for emails containing keywords specified by the user during the saved email.", "parameters": {"type": "object", "properties": {"keyword": {"type": "string", "description": "Keyword to search"}, "from_date": {"type": "string", "description": "Date to start searching (optional)"}, "to_date": {"type": "string", "description": "Date to finish the search (optional)"}, "sender": {"type": "string", "description": "Email caller address (optional)"}}, "required": ["keyword"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me a brief explanation of the work."}, "acceptable_arguments": null}
{"serial_num": 212, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Can you post my work on the art platform?"}, {"role": "assistant", "content": "Please tell us the image URL and the title of the work to be uploaded."}, {"role": "user", "content": "The title is posted to '노을진 바다'."}, {"role": "assistant", "content": "Please tell me the brief explanation of the image URL and the work of the work to be uploaded."}, {"role": "user", "content": "Image URL is https://example.com/myart.jpg"}], "input_tools": [{"type": "function", "function": {"name": "calculateCaloricNeeds", "description": "A function that estimates the average daily calorie consumption", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}, "height": {"type": "number", "description": "Centimeter key"}, "age": {"type": "integer", "description": "age"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["weight", "height", "age", "gender"]}}}, {"type": "function", "function": {"name": "track_order", "description": "Inquire an order status (ordering, payment completion, shipping, delivery, etc.) with a given order number and informed the expected shipping date or expected delivery date.", "parameters": {"type": "object", "properties": {"order_id": {"type": "string", "description": "Order number to search"}}, "required": ["order_id"]}}}, {"type": "function", "function": {"name": "upload_artwork_to_online_site", "description": "Upload your work to the online art platform.", "parameters": {"type": "object", "properties": {"art_image_url": {"type": "string", "description": "The image of the work to be uploaded URL"}, "title": {"type": "string", "description": "Title of the work"}, "description": {"type": "string", "description": "A brief explanation of the work"}}, "required": ["art_image_url", "title", "description"]}}}, {"type": "function", "function": {"name": "informWeather", "description": "Provide current weather information in a particular area", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Local name to bring weather information"}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "search_email_content", "description": "Search for emails containing keywords specified by the user during the saved email.", "parameters": {"type": "object", "properties": {"keyword": {"type": "string", "description": "Keyword to search"}, "from_date": {"type": "string", "description": "Date to start searching (optional)"}, "to_date": {"type": "string", "description": "Date to finish the search (optional)"}, "sender": {"type": "string", "description": "Email caller address (optional)"}}, "required": ["keyword"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me a brief explanation of the work."}, "acceptable_arguments": null}
{"serial_num": 213, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Can you post my work on the art platform?"}, {"role": "assistant", "content": "Please tell us the image URL and the title of the work to be uploaded."}, {"role": "user", "content": "The image URL is https://example.com/myart.jpg."}, {"role": "assistant", "content": "Please tell me the title and brief explanation of the work."}, {"role": "user", "content": "For explanation, please upload '바다 위로 지는 노을을 그린 작품입니다'"}], "input_tools": [{"type": "function", "function": {"name": "calculateCaloricNeeds", "description": "A function that estimates the average daily calorie consumption", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}, "height": {"type": "number", "description": "Centimeter key"}, "age": {"type": "integer", "description": "age"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["weight", "height", "age", "gender"]}}}, {"type": "function", "function": {"name": "track_order", "description": "Inquire an order status (ordering, payment completion, shipping, delivery, etc.) with a given order number and informed the expected shipping date or expected delivery date.", "parameters": {"type": "object", "properties": {"order_id": {"type": "string", "description": "Order number to search"}}, "required": ["order_id"]}}}, {"type": "function", "function": {"name": "upload_artwork_to_online_site", "description": "Upload your work to the online art platform.", "parameters": {"type": "object", "properties": {"art_image_url": {"type": "string", "description": "The image of the work to be uploaded URL"}, "title": {"type": "string", "description": "Title of the work"}, "description": {"type": "string", "description": "A brief explanation of the work"}}, "required": ["art_image_url", "title", "description"]}}}, {"type": "function", "function": {"name": "informWeather", "description": "Provide current weather information in a particular area", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Local name to bring weather information"}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "search_email_content", "description": "Search for emails containing keywords specified by the user during the saved email.", "parameters": {"type": "object", "properties": {"keyword": {"type": "string", "description": "Keyword to search"}, "from_date": {"type": "string", "description": "Date to start searching (optional)"}, "to_date": {"type": "string", "description": "Date to finish the search (optional)"}, "sender": {"type": "string", "description": "Email caller address (optional)"}}, "required": ["keyword"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the title of the work."}, "acceptable_arguments": null}
{"serial_num": 214, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Can you post my work on the art platform?"}, {"role": "assistant", "content": "Please tell us the image URL and the title of the work to be uploaded."}, {"role": "user", "content": "Upload '바다 위로 지는 노을을 그린 작품입니다' in the description of the work"}, {"role": "assistant", "content": "Please tell me the title of the image URL and the work of the work to be uploaded."}, {"role": "user", "content": "Image URL is https://example.com/myart.jpg"}], "input_tools": [{"type": "function", "function": {"name": "calculateCaloricNeeds", "description": "A function that estimates the average daily calorie consumption", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}, "height": {"type": "number", "description": "Centimeter key"}, "age": {"type": "integer", "description": "age"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["weight", "height", "age", "gender"]}}}, {"type": "function", "function": {"name": "track_order", "description": "Inquire an order status (ordering, payment completion, shipping, delivery, etc.) with a given order number and informed the expected shipping date or expected delivery date.", "parameters": {"type": "object", "properties": {"order_id": {"type": "string", "description": "Order number to search"}}, "required": ["order_id"]}}}, {"type": "function", "function": {"name": "upload_artwork_to_online_site", "description": "Upload your work to the online art platform.", "parameters": {"type": "object", "properties": {"art_image_url": {"type": "string", "description": "The image of the work to be uploaded URL"}, "title": {"type": "string", "description": "Title of the work"}, "description": {"type": "string", "description": "A brief explanation of the work"}}, "required": ["art_image_url", "title", "description"]}}}, {"type": "function", "function": {"name": "informWeather", "description": "Provide current weather information in a particular area", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Local name to bring weather information"}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "search_email_content", "description": "Search for emails containing keywords specified by the user during the saved email.", "parameters": {"type": "object", "properties": {"keyword": {"type": "string", "description": "Keyword to search"}, "from_date": {"type": "string", "description": "Date to start searching (optional)"}, "to_date": {"type": "string", "description": "Date to finish the search (optional)"}, "sender": {"type": "string", "description": "Email caller address (optional)"}}, "required": ["keyword"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the title of the work."}, "acceptable_arguments": null}
{"serial_num": 215, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Can you post my work on the art platform?"}, {"role": "assistant", "content": "Please tell us the image URL and the title of the work to be uploaded."}, {"role": "user", "content": "The title is posted to '노을진 바다'."}, {"role": "assistant", "content": "Please tell me the brief explanation of the image URL and the work of the work to be uploaded."}, {"role": "user", "content": "For explanation, please upload '바다 위로 지는 노을을 그린 작품입니다'"}], "input_tools": [{"type": "function", "function": {"name": "calculateCaloricNeeds", "description": "A function that estimates the average daily calorie consumption", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}, "height": {"type": "number", "description": "Centimeter key"}, "age": {"type": "integer", "description": "age"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["weight", "height", "age", "gender"]}}}, {"type": "function", "function": {"name": "track_order", "description": "Inquire an order status (ordering, payment completion, shipping, delivery, etc.) with a given order number and informed the expected shipping date or expected delivery date.", "parameters": {"type": "object", "properties": {"order_id": {"type": "string", "description": "Order number to search"}}, "required": ["order_id"]}}}, {"type": "function", "function": {"name": "upload_artwork_to_online_site", "description": "Upload your work to the online art platform.", "parameters": {"type": "object", "properties": {"art_image_url": {"type": "string", "description": "The image of the work to be uploaded URL"}, "title": {"type": "string", "description": "Title of the work"}, "description": {"type": "string", "description": "A brief explanation of the work"}}, "required": ["art_image_url", "title", "description"]}}}, {"type": "function", "function": {"name": "informWeather", "description": "Provide current weather information in a particular area", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Local name to bring weather information"}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "search_email_content", "description": "Search for emails containing keywords specified by the user during the saved email.", "parameters": {"type": "object", "properties": {"keyword": {"type": "string", "description": "Keyword to search"}, "from_date": {"type": "string", "description": "Date to start searching (optional)"}, "to_date": {"type": "string", "description": "Date to finish the search (optional)"}, "sender": {"type": "string", "description": "Email caller address (optional)"}}, "required": ["keyword"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the image URL of the work to be uploaded."}, "acceptable_arguments": null}
{"serial_num": 216, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Can you post my work on the art platform?"}, {"role": "assistant", "content": "Please tell us the image URL and the title of the work to be uploaded."}, {"role": "user", "content": "Upload '바다 위로 지는 노을을 그린 작품입니다' in the description of the work"}, {"role": "assistant", "content": "Please tell me the title of the image URL and the work of the work to be uploaded."}, {"role": "user", "content": "The title is '노을진 바다'"}], "input_tools": [{"type": "function", "function": {"name": "calculateCaloricNeeds", "description": "A function that estimates the average daily calorie consumption", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}, "height": {"type": "number", "description": "Centimeter key"}, "age": {"type": "integer", "description": "age"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["weight", "height", "age", "gender"]}}}, {"type": "function", "function": {"name": "track_order", "description": "Inquire an order status (ordering, payment completion, shipping, delivery, etc.) with a given order number and informed the expected shipping date or expected delivery date.", "parameters": {"type": "object", "properties": {"order_id": {"type": "string", "description": "Order number to search"}}, "required": ["order_id"]}}}, {"type": "function", "function": {"name": "upload_artwork_to_online_site", "description": "Upload your work to the online art platform.", "parameters": {"type": "object", "properties": {"art_image_url": {"type": "string", "description": "The image of the work to be uploaded URL"}, "title": {"type": "string", "description": "Title of the work"}, "description": {"type": "string", "description": "A brief explanation of the work"}}, "required": ["art_image_url", "title", "description"]}}}, {"type": "function", "function": {"name": "informWeather", "description": "Provide current weather information in a particular area", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Local name to bring weather information"}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "search_email_content", "description": "Search for emails containing keywords specified by the user during the saved email.", "parameters": {"type": "object", "properties": {"keyword": {"type": "string", "description": "Keyword to search"}, "from_date": {"type": "string", "description": "Date to start searching (optional)"}, "to_date": {"type": "string", "description": "Date to finish the search (optional)"}, "sender": {"type": "string", "description": "Email caller address (optional)"}}, "required": ["keyword"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the image URL of the work to be uploaded."}, "acceptable_arguments": null}
{"serial_num": 217, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Please make a ticket to the Bangbangcon 23 concert."}], "input_tools": [{"type": "function", "function": {"name": "upload_artwork_to_online_site", "description": "Upload your work to the online art platform.", "parameters": {"type": "object", "properties": {"art_image_url": {"type": "string", "description": "The image of the work to be uploaded URL"}, "title": {"type": "string", "description": "Title of the work"}, "description": {"type": "string", "description": "A brief explanation of the work"}}, "required": ["art_image_url", "title", "description"]}}}, {"type": "function", "function": {"name": "getCurrentTimeForLocation", "description": "Provide current time information in certain areas", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Local name to bring time information"}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "book_concert_tickets", "description": "Tickets for specific performances are made using external ticketing systems.", "parameters": {"type": "object", "properties": {"concert_name": {"type": "string", "description": "The name of the performance you want to book"}, "number_of_tickets": {"type": "integer", "description": "Quantity"}, "seat_type": {"type": "string", "description": "Selected seat type (e.g. VIP, general)"}}, "required": ["concert_name", "number_of_tickets", "seat_type"]}}}, {"type": "function", "function": {"name": "calculateBMR", "description": "Basal metabolic rate calculation", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}, "height": {"type": "number", "description": "Centimeter key"}, "age": {"type": "integer", "description": "age"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["weight", "height", "age", "gender"]}}}, {"type": "function", "function": {"name": "search_email_content", "description": "Search for emails containing keywords specified by the user during the saved email.", "parameters": {"type": "object", "properties": {"keyword": {"type": "string", "description": "Keyword to search"}, "from_date": {"type": "string", "description": "Date to start searching (optional)"}, "to_date": {"type": "string", "description": "Date to finish the search (optional)"}, "sender": {"type": "string", "description": "Email caller address (optional)"}}, "required": ["keyword"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the ticket quantity and seat type."}, "acceptable_arguments": null}
{"serial_num": 218, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Book 2 concert tickets."}], "input_tools": [{"type": "function", "function": {"name": "upload_artwork_to_online_site", "description": "Upload your work to the online art platform.", "parameters": {"type": "object", "properties": {"art_image_url": {"type": "string", "description": "The image of the work to be uploaded URL"}, "title": {"type": "string", "description": "Title of the work"}, "description": {"type": "string", "description": "A brief explanation of the work"}}, "required": ["art_image_url", "title", "description"]}}}, {"type": "function", "function": {"name": "getCurrentTimeForLocation", "description": "Provide current time information in certain areas", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Local name to bring time information"}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "book_concert_tickets", "description": "Tickets for specific performances are made using external ticketing systems.", "parameters": {"type": "object", "properties": {"concert_name": {"type": "string", "description": "The name of the performance you want to book"}, "number_of_tickets": {"type": "integer", "description": "Quantity"}, "seat_type": {"type": "string", "description": "Selected seat type (e.g. VIP, general)"}}, "required": ["concert_name", "number_of_tickets", "seat_type"]}}}, {"type": "function", "function": {"name": "calculateBMR", "description": "Basal metabolic rate calculation", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}, "height": {"type": "number", "description": "Centimeter key"}, "age": {"type": "integer", "description": "age"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["weight", "height", "age", "gender"]}}}, {"type": "function", "function": {"name": "search_email_content", "description": "Search for emails containing keywords specified by the user during the saved email.", "parameters": {"type": "object", "properties": {"keyword": {"type": "string", "description": "Keyword to search"}, "from_date": {"type": "string", "description": "Date to start searching (optional)"}, "to_date": {"type": "string", "description": "Date to finish the search (optional)"}, "sender": {"type": "string", "description": "Email caller address (optional)"}}, "required": ["keyword"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the performance name and seat type."}, "acceptable_arguments": null}
{"serial_num": 219, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Please make a reservation with a concert ticket VIP seat."}], "input_tools": [{"type": "function", "function": {"name": "upload_artwork_to_online_site", "description": "Upload your work to the online art platform.", "parameters": {"type": "object", "properties": {"art_image_url": {"type": "string", "description": "The image of the work to be uploaded URL"}, "title": {"type": "string", "description": "Title of the work"}, "description": {"type": "string", "description": "A brief explanation of the work"}}, "required": ["art_image_url", "title", "description"]}}}, {"type": "function", "function": {"name": "getCurrentTimeForLocation", "description": "Provide current time information in certain areas", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Local name to bring time information"}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "book_concert_tickets", "description": "Tickets for specific performances are made using external ticketing systems.", "parameters": {"type": "object", "properties": {"concert_name": {"type": "string", "description": "The name of the performance you want to book"}, "number_of_tickets": {"type": "integer", "description": "Quantity"}, "seat_type": {"type": "string", "description": "Selected seat type (e.g. VIP, general)"}}, "required": ["concert_name", "number_of_tickets", "seat_type"]}}}, {"type": "function", "function": {"name": "calculateBMR", "description": "Basal metabolic rate calculation", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}, "height": {"type": "number", "description": "Centimeter key"}, "age": {"type": "integer", "description": "age"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["weight", "height", "age", "gender"]}}}, {"type": "function", "function": {"name": "search_email_content", "description": "Search for emails containing keywords specified by the user during the saved email.", "parameters": {"type": "object", "properties": {"keyword": {"type": "string", "description": "Keyword to search"}, "from_date": {"type": "string", "description": "Date to start searching (optional)"}, "to_date": {"type": "string", "description": "Date to finish the search (optional)"}, "sender": {"type": "string", "description": "Email caller address (optional)"}}, "required": ["keyword"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the performance name and ticket quantity."}, "acceptable_arguments": null}
{"serial_num": 220, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Please book a concert ticket."}, {"role": "assistant", "content": "Please tell me the performance name, ticket quantity, and seat type."}, {"role": "user", "content": "Please make a ticket to the Bangbangcon 23 concert."}], "input_tools": [{"type": "function", "function": {"name": "upload_artwork_to_online_site", "description": "Upload your work to the online art platform.", "parameters": {"type": "object", "properties": {"art_image_url": {"type": "string", "description": "The image of the work to be uploaded URL"}, "title": {"type": "string", "description": "Title of the work"}, "description": {"type": "string", "description": "A brief explanation of the work"}}, "required": ["art_image_url", "title", "description"]}}}, {"type": "function", "function": {"name": "getCurrentTimeForLocation", "description": "Provide current time information in certain areas", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Local name to bring time information"}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "book_concert_tickets", "description": "Tickets for specific performances are made using external ticketing systems.", "parameters": {"type": "object", "properties": {"concert_name": {"type": "string", "description": "The name of the performance you want to book"}, "number_of_tickets": {"type": "integer", "description": "Quantity"}, "seat_type": {"type": "string", "description": "Selected seat type (e.g. VIP, general)"}}, "required": ["concert_name", "number_of_tickets", "seat_type"]}}}, {"type": "function", "function": {"name": "calculateBMR", "description": "Basal metabolic rate calculation", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}, "height": {"type": "number", "description": "Centimeter key"}, "age": {"type": "integer", "description": "age"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["weight", "height", "age", "gender"]}}}, {"type": "function", "function": {"name": "search_email_content", "description": "Search for emails containing keywords specified by the user during the saved email.", "parameters": {"type": "object", "properties": {"keyword": {"type": "string", "description": "Keyword to search"}, "from_date": {"type": "string", "description": "Date to start searching (optional)"}, "to_date": {"type": "string", "description": "Date to finish the search (optional)"}, "sender": {"type": "string", "description": "Email caller address (optional)"}}, "required": ["keyword"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the ticket quantity and seat type."}, "acceptable_arguments": null}
{"serial_num": 221, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Please book a concert ticket."}, {"role": "assistant", "content": "Please tell me the performance name, ticket quantity, and seat type."}, {"role": "user", "content": "Chapter 2 Book me."}], "input_tools": [{"type": "function", "function": {"name": "upload_artwork_to_online_site", "description": "Upload your work to the online art platform.", "parameters": {"type": "object", "properties": {"art_image_url": {"type": "string", "description": "The image of the work to be uploaded URL"}, "title": {"type": "string", "description": "Title of the work"}, "description": {"type": "string", "description": "A brief explanation of the work"}}, "required": ["art_image_url", "title", "description"]}}}, {"type": "function", "function": {"name": "getCurrentTimeForLocation", "description": "Provide current time information in certain areas", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Local name to bring time information"}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "book_concert_tickets", "description": "Tickets for specific performances are made using external ticketing systems.", "parameters": {"type": "object", "properties": {"concert_name": {"type": "string", "description": "The name of the performance you want to book"}, "number_of_tickets": {"type": "integer", "description": "Quantity"}, "seat_type": {"type": "string", "description": "Selected seat type (e.g. VIP, general)"}}, "required": ["concert_name", "number_of_tickets", "seat_type"]}}}, {"type": "function", "function": {"name": "calculateBMR", "description": "Basal metabolic rate calculation", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}, "height": {"type": "number", "description": "Centimeter key"}, "age": {"type": "integer", "description": "age"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["weight", "height", "age", "gender"]}}}, {"type": "function", "function": {"name": "search_email_content", "description": "Search for emails containing keywords specified by the user during the saved email.", "parameters": {"type": "object", "properties": {"keyword": {"type": "string", "description": "Keyword to search"}, "from_date": {"type": "string", "description": "Date to start searching (optional)"}, "to_date": {"type": "string", "description": "Date to finish the search (optional)"}, "sender": {"type": "string", "description": "Email caller address (optional)"}}, "required": ["keyword"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the performance name and seat type."}, "acceptable_arguments": null}
{"serial_num": 222, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Please book a concert ticket."}, {"role": "assistant", "content": "Please tell me the performance name, ticket quantity, and seat type."}, {"role": "user", "content": "Please make a reservation with a VIP seat."}], "input_tools": [{"type": "function", "function": {"name": "upload_artwork_to_online_site", "description": "Upload your work to the online art platform.", "parameters": {"type": "object", "properties": {"art_image_url": {"type": "string", "description": "The image of the work to be uploaded URL"}, "title": {"type": "string", "description": "Title of the work"}, "description": {"type": "string", "description": "A brief explanation of the work"}}, "required": ["art_image_url", "title", "description"]}}}, {"type": "function", "function": {"name": "getCurrentTimeForLocation", "description": "Provide current time information in certain areas", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Local name to bring time information"}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "book_concert_tickets", "description": "Tickets for specific performances are made using external ticketing systems.", "parameters": {"type": "object", "properties": {"concert_name": {"type": "string", "description": "The name of the performance you want to book"}, "number_of_tickets": {"type": "integer", "description": "Quantity"}, "seat_type": {"type": "string", "description": "Selected seat type (e.g. VIP, general)"}}, "required": ["concert_name", "number_of_tickets", "seat_type"]}}}, {"type": "function", "function": {"name": "calculateBMR", "description": "Basal metabolic rate calculation", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}, "height": {"type": "number", "description": "Centimeter key"}, "age": {"type": "integer", "description": "age"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["weight", "height", "age", "gender"]}}}, {"type": "function", "function": {"name": "search_email_content", "description": "Search for emails containing keywords specified by the user during the saved email.", "parameters": {"type": "object", "properties": {"keyword": {"type": "string", "description": "Keyword to search"}, "from_date": {"type": "string", "description": "Date to start searching (optional)"}, "to_date": {"type": "string", "description": "Date to finish the search (optional)"}, "sender": {"type": "string", "description": "Email caller address (optional)"}}, "required": ["keyword"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the performance name and ticket quantity."}, "acceptable_arguments": null}
{"serial_num": 223, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Please make a reservation for 2 Concert Tickets for this time."}], "input_tools": [{"type": "function", "function": {"name": "upload_artwork_to_online_site", "description": "Upload your work to the online art platform.", "parameters": {"type": "object", "properties": {"art_image_url": {"type": "string", "description": "The image of the work to be uploaded URL"}, "title": {"type": "string", "description": "Title of the work"}, "description": {"type": "string", "description": "A brief explanation of the work"}}, "required": ["art_image_url", "title", "description"]}}}, {"type": "function", "function": {"name": "getCurrentTimeForLocation", "description": "Provide current time information in certain areas", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Local name to bring time information"}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "book_concert_tickets", "description": "Tickets for specific performances are made using external ticketing systems.", "parameters": {"type": "object", "properties": {"concert_name": {"type": "string", "description": "The name of the performance you want to book"}, "number_of_tickets": {"type": "integer", "description": "Quantity"}, "seat_type": {"type": "string", "description": "Selected seat type (e.g. VIP, general)"}}, "required": ["concert_name", "number_of_tickets", "seat_type"]}}}, {"type": "function", "function": {"name": "calculateBMR", "description": "Basal metabolic rate calculation", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}, "height": {"type": "number", "description": "Centimeter key"}, "age": {"type": "integer", "description": "age"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["weight", "height", "age", "gender"]}}}, {"type": "function", "function": {"name": "search_email_content", "description": "Search for emails containing keywords specified by the user during the saved email.", "parameters": {"type": "object", "properties": {"keyword": {"type": "string", "description": "Keyword to search"}, "from_date": {"type": "string", "description": "Date to start searching (optional)"}, "to_date": {"type": "string", "description": "Date to finish the search (optional)"}, "sender": {"type": "string", "description": "Email caller address (optional)"}}, "required": ["keyword"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the type of seat."}, "acceptable_arguments": null}
{"serial_num": 224, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Book 2 concert tickets. This time, Bangbangcon 23 concert."}], "input_tools": [{"type": "function", "function": {"name": "upload_artwork_to_online_site", "description": "Upload your work to the online art platform.", "parameters": {"type": "object", "properties": {"art_image_url": {"type": "string", "description": "The image of the work to be uploaded URL"}, "title": {"type": "string", "description": "Title of the work"}, "description": {"type": "string", "description": "A brief explanation of the work"}}, "required": ["art_image_url", "title", "description"]}}}, {"type": "function", "function": {"name": "getCurrentTimeForLocation", "description": "Provide current time information in certain areas", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Local name to bring time information"}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "book_concert_tickets", "description": "Tickets for specific performances are made using external ticketing systems.", "parameters": {"type": "object", "properties": {"concert_name": {"type": "string", "description": "The name of the performance you want to book"}, "number_of_tickets": {"type": "integer", "description": "Quantity"}, "seat_type": {"type": "string", "description": "Selected seat type (e.g. VIP, general)"}}, "required": ["concert_name", "number_of_tickets", "seat_type"]}}}, {"type": "function", "function": {"name": "calculateBMR", "description": "Basal metabolic rate calculation", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}, "height": {"type": "number", "description": "Centimeter key"}, "age": {"type": "integer", "description": "age"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["weight", "height", "age", "gender"]}}}, {"type": "function", "function": {"name": "search_email_content", "description": "Search for emails containing keywords specified by the user during the saved email.", "parameters": {"type": "object", "properties": {"keyword": {"type": "string", "description": "Keyword to search"}, "from_date": {"type": "string", "description": "Date to start searching (optional)"}, "to_date": {"type": "string", "description": "Date to finish the search (optional)"}, "sender": {"type": "string", "description": "Email caller address (optional)"}}, "required": ["keyword"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the type of seat."}, "acceptable_arguments": null}
{"serial_num": 225, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Please make a reservation with VIP seats for the Bangbangcon 23 concert."}], "input_tools": [{"type": "function", "function": {"name": "upload_artwork_to_online_site", "description": "Upload your work to the online art platform.", "parameters": {"type": "object", "properties": {"art_image_url": {"type": "string", "description": "The image of the work to be uploaded URL"}, "title": {"type": "string", "description": "Title of the work"}, "description": {"type": "string", "description": "A brief explanation of the work"}}, "required": ["art_image_url", "title", "description"]}}}, {"type": "function", "function": {"name": "getCurrentTimeForLocation", "description": "Provide current time information in certain areas", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Local name to bring time information"}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "book_concert_tickets", "description": "Tickets for specific performances are made using external ticketing systems.", "parameters": {"type": "object", "properties": {"concert_name": {"type": "string", "description": "The name of the performance you want to book"}, "number_of_tickets": {"type": "integer", "description": "Quantity"}, "seat_type": {"type": "string", "description": "Selected seat type (e.g. VIP, general)"}}, "required": ["concert_name", "number_of_tickets", "seat_type"]}}}, {"type": "function", "function": {"name": "calculateBMR", "description": "Basal metabolic rate calculation", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}, "height": {"type": "number", "description": "Centimeter key"}, "age": {"type": "integer", "description": "age"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["weight", "height", "age", "gender"]}}}, {"type": "function", "function": {"name": "search_email_content", "description": "Search for emails containing keywords specified by the user during the saved email.", "parameters": {"type": "object", "properties": {"keyword": {"type": "string", "description": "Keyword to search"}, "from_date": {"type": "string", "description": "Date to start searching (optional)"}, "to_date": {"type": "string", "description": "Date to finish the search (optional)"}, "sender": {"type": "string", "description": "Email caller address (optional)"}}, "required": ["keyword"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the number of tickets."}, "acceptable_arguments": null}
{"serial_num": 226, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Please make a reservation with a concert ticket VIP seat. This time, Bangbangcon 23 concert."}], "input_tools": [{"type": "function", "function": {"name": "upload_artwork_to_online_site", "description": "Upload your work to the online art platform.", "parameters": {"type": "object", "properties": {"art_image_url": {"type": "string", "description": "The image of the work to be uploaded URL"}, "title": {"type": "string", "description": "Title of the work"}, "description": {"type": "string", "description": "A brief explanation of the work"}}, "required": ["art_image_url", "title", "description"]}}}, {"type": "function", "function": {"name": "getCurrentTimeForLocation", "description": "Provide current time information in certain areas", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Local name to bring time information"}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "book_concert_tickets", "description": "Tickets for specific performances are made using external ticketing systems.", "parameters": {"type": "object", "properties": {"concert_name": {"type": "string", "description": "The name of the performance you want to book"}, "number_of_tickets": {"type": "integer", "description": "Quantity"}, "seat_type": {"type": "string", "description": "Selected seat type (e.g. VIP, general)"}}, "required": ["concert_name", "number_of_tickets", "seat_type"]}}}, {"type": "function", "function": {"name": "calculateBMR", "description": "Basal metabolic rate calculation", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}, "height": {"type": "number", "description": "Centimeter key"}, "age": {"type": "integer", "description": "age"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["weight", "height", "age", "gender"]}}}, {"type": "function", "function": {"name": "search_email_content", "description": "Search for emails containing keywords specified by the user during the saved email.", "parameters": {"type": "object", "properties": {"keyword": {"type": "string", "description": "Keyword to search"}, "from_date": {"type": "string", "description": "Date to start searching (optional)"}, "to_date": {"type": "string", "description": "Date to finish the search (optional)"}, "sender": {"type": "string", "description": "Email caller address (optional)"}}, "required": ["keyword"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the number of tickets."}, "acceptable_arguments": null}
{"serial_num": 227, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "2 Concert Tickets 2 VIP Seats."}], "input_tools": [{"type": "function", "function": {"name": "upload_artwork_to_online_site", "description": "Upload your work to the online art platform.", "parameters": {"type": "object", "properties": {"art_image_url": {"type": "string", "description": "The image of the work to be uploaded URL"}, "title": {"type": "string", "description": "Title of the work"}, "description": {"type": "string", "description": "A brief explanation of the work"}}, "required": ["art_image_url", "title", "description"]}}}, {"type": "function", "function": {"name": "getCurrentTimeForLocation", "description": "Provide current time information in certain areas", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Local name to bring time information"}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "book_concert_tickets", "description": "Tickets for specific performances are made using external ticketing systems.", "parameters": {"type": "object", "properties": {"concert_name": {"type": "string", "description": "The name of the performance you want to book"}, "number_of_tickets": {"type": "integer", "description": "Quantity"}, "seat_type": {"type": "string", "description": "Selected seat type (e.g. VIP, general)"}}, "required": ["concert_name", "number_of_tickets", "seat_type"]}}}, {"type": "function", "function": {"name": "calculateBMR", "description": "Basal metabolic rate calculation", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}, "height": {"type": "number", "description": "Centimeter key"}, "age": {"type": "integer", "description": "age"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["weight", "height", "age", "gender"]}}}, {"type": "function", "function": {"name": "search_email_content", "description": "Search for emails containing keywords specified by the user during the saved email.", "parameters": {"type": "object", "properties": {"keyword": {"type": "string", "description": "Keyword to search"}, "from_date": {"type": "string", "description": "Date to start searching (optional)"}, "to_date": {"type": "string", "description": "Date to finish the search (optional)"}, "sender": {"type": "string", "description": "Email caller address (optional)"}}, "required": ["keyword"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the performance name."}, "acceptable_arguments": null}
{"serial_num": 228, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Ticket a concert ticket VIP Seats 2 pieces."}], "input_tools": [{"type": "function", "function": {"name": "upload_artwork_to_online_site", "description": "Upload your work to the online art platform.", "parameters": {"type": "object", "properties": {"art_image_url": {"type": "string", "description": "The image of the work to be uploaded URL"}, "title": {"type": "string", "description": "Title of the work"}, "description": {"type": "string", "description": "A brief explanation of the work"}}, "required": ["art_image_url", "title", "description"]}}}, {"type": "function", "function": {"name": "getCurrentTimeForLocation", "description": "Provide current time information in certain areas", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Local name to bring time information"}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "book_concert_tickets", "description": "Tickets for specific performances are made using external ticketing systems.", "parameters": {"type": "object", "properties": {"concert_name": {"type": "string", "description": "The name of the performance you want to book"}, "number_of_tickets": {"type": "integer", "description": "Quantity"}, "seat_type": {"type": "string", "description": "Selected seat type (e.g. VIP, general)"}}, "required": ["concert_name", "number_of_tickets", "seat_type"]}}}, {"type": "function", "function": {"name": "calculateBMR", "description": "Basal metabolic rate calculation", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}, "height": {"type": "number", "description": "Centimeter key"}, "age": {"type": "integer", "description": "age"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["weight", "height", "age", "gender"]}}}, {"type": "function", "function": {"name": "search_email_content", "description": "Search for emails containing keywords specified by the user during the saved email.", "parameters": {"type": "object", "properties": {"keyword": {"type": "string", "description": "Keyword to search"}, "from_date": {"type": "string", "description": "Date to start searching (optional)"}, "to_date": {"type": "string", "description": "Date to finish the search (optional)"}, "sender": {"type": "string", "description": "Email caller address (optional)"}}, "required": ["keyword"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the performance name."}, "acceptable_arguments": null}
{"serial_num": 229, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Please book a concert ticket."}, {"role": "assistant", "content": "Please tell me the performance name, ticket quantity, and seat type."}, {"role": "user", "content": "Please make a reservation for 2 Concert Tickets for this time."}], "input_tools": [{"type": "function", "function": {"name": "upload_artwork_to_online_site", "description": "Upload your work to the online art platform.", "parameters": {"type": "object", "properties": {"art_image_url": {"type": "string", "description": "The image of the work to be uploaded URL"}, "title": {"type": "string", "description": "Title of the work"}, "description": {"type": "string", "description": "A brief explanation of the work"}}, "required": ["art_image_url", "title", "description"]}}}, {"type": "function", "function": {"name": "getCurrentTimeForLocation", "description": "Provide current time information in certain areas", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Local name to bring time information"}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "book_concert_tickets", "description": "Tickets for specific performances are made using external ticketing systems.", "parameters": {"type": "object", "properties": {"concert_name": {"type": "string", "description": "The name of the performance you want to book"}, "number_of_tickets": {"type": "integer", "description": "Quantity"}, "seat_type": {"type": "string", "description": "Selected seat type (e.g. VIP, general)"}}, "required": ["concert_name", "number_of_tickets", "seat_type"]}}}, {"type": "function", "function": {"name": "calculateBMR", "description": "Basal metabolic rate calculation", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}, "height": {"type": "number", "description": "Centimeter key"}, "age": {"type": "integer", "description": "age"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["weight", "height", "age", "gender"]}}}, {"type": "function", "function": {"name": "search_email_content", "description": "Search for emails containing keywords specified by the user during the saved email.", "parameters": {"type": "object", "properties": {"keyword": {"type": "string", "description": "Keyword to search"}, "from_date": {"type": "string", "description": "Date to start searching (optional)"}, "to_date": {"type": "string", "description": "Date to finish the search (optional)"}, "sender": {"type": "string", "description": "Email caller address (optional)"}}, "required": ["keyword"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the type of seat."}, "acceptable_arguments": null}
{"serial_num": 230, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Please book a concert ticket."}, {"role": "assistant", "content": "Please tell me the performance name, ticket quantity, and seat type."}, {"role": "user", "content": "Chapter 2 Book me. This time, Bangbangcon 23 concert."}], "input_tools": [{"type": "function", "function": {"name": "upload_artwork_to_online_site", "description": "Upload your work to the online art platform.", "parameters": {"type": "object", "properties": {"art_image_url": {"type": "string", "description": "The image of the work to be uploaded URL"}, "title": {"type": "string", "description": "Title of the work"}, "description": {"type": "string", "description": "A brief explanation of the work"}}, "required": ["art_image_url", "title", "description"]}}}, {"type": "function", "function": {"name": "getCurrentTimeForLocation", "description": "Provide current time information in certain areas", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Local name to bring time information"}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "book_concert_tickets", "description": "Tickets for specific performances are made using external ticketing systems.", "parameters": {"type": "object", "properties": {"concert_name": {"type": "string", "description": "The name of the performance you want to book"}, "number_of_tickets": {"type": "integer", "description": "Quantity"}, "seat_type": {"type": "string", "description": "Selected seat type (e.g. VIP, general)"}}, "required": ["concert_name", "number_of_tickets", "seat_type"]}}}, {"type": "function", "function": {"name": "calculateBMR", "description": "Basal metabolic rate calculation", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}, "height": {"type": "number", "description": "Centimeter key"}, "age": {"type": "integer", "description": "age"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["weight", "height", "age", "gender"]}}}, {"type": "function", "function": {"name": "search_email_content", "description": "Search for emails containing keywords specified by the user during the saved email.", "parameters": {"type": "object", "properties": {"keyword": {"type": "string", "description": "Keyword to search"}, "from_date": {"type": "string", "description": "Date to start searching (optional)"}, "to_date": {"type": "string", "description": "Date to finish the search (optional)"}, "sender": {"type": "string", "description": "Email caller address (optional)"}}, "required": ["keyword"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the type of seat."}, "acceptable_arguments": null}
{"serial_num": 231, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Please book a concert ticket."}, {"role": "assistant", "content": "Please tell me the performance name, ticket quantity, and seat type."}, {"role": "user", "content": "Please make a reservation with VIP seats for the Bangbangcon 23 concert."}], "input_tools": [{"type": "function", "function": {"name": "upload_artwork_to_online_site", "description": "Upload your work to the online art platform.", "parameters": {"type": "object", "properties": {"art_image_url": {"type": "string", "description": "The image of the work to be uploaded URL"}, "title": {"type": "string", "description": "Title of the work"}, "description": {"type": "string", "description": "A brief explanation of the work"}}, "required": ["art_image_url", "title", "description"]}}}, {"type": "function", "function": {"name": "getCurrentTimeForLocation", "description": "Provide current time information in certain areas", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Local name to bring time information"}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "book_concert_tickets", "description": "Tickets for specific performances are made using external ticketing systems.", "parameters": {"type": "object", "properties": {"concert_name": {"type": "string", "description": "The name of the performance you want to book"}, "number_of_tickets": {"type": "integer", "description": "Quantity"}, "seat_type": {"type": "string", "description": "Selected seat type (e.g. VIP, general)"}}, "required": ["concert_name", "number_of_tickets", "seat_type"]}}}, {"type": "function", "function": {"name": "calculateBMR", "description": "Basal metabolic rate calculation", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}, "height": {"type": "number", "description": "Centimeter key"}, "age": {"type": "integer", "description": "age"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["weight", "height", "age", "gender"]}}}, {"type": "function", "function": {"name": "search_email_content", "description": "Search for emails containing keywords specified by the user during the saved email.", "parameters": {"type": "object", "properties": {"keyword": {"type": "string", "description": "Keyword to search"}, "from_date": {"type": "string", "description": "Date to start searching (optional)"}, "to_date": {"type": "string", "description": "Date to finish the search (optional)"}, "sender": {"type": "string", "description": "Email caller address (optional)"}}, "required": ["keyword"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the number of tickets."}, "acceptable_arguments": null}
{"serial_num": 232, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Please book a concert ticket."}, {"role": "assistant", "content": "Please tell me the performance name, ticket quantity, and seat type."}, {"role": "user", "content": "Please make a reservation with a VIP seat. This time, Bangbangcon 23 concert."}], "input_tools": [{"type": "function", "function": {"name": "upload_artwork_to_online_site", "description": "Upload your work to the online art platform.", "parameters": {"type": "object", "properties": {"art_image_url": {"type": "string", "description": "The image of the work to be uploaded URL"}, "title": {"type": "string", "description": "Title of the work"}, "description": {"type": "string", "description": "A brief explanation of the work"}}, "required": ["art_image_url", "title", "description"]}}}, {"type": "function", "function": {"name": "getCurrentTimeForLocation", "description": "Provide current time information in certain areas", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Local name to bring time information"}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "book_concert_tickets", "description": "Tickets for specific performances are made using external ticketing systems.", "parameters": {"type": "object", "properties": {"concert_name": {"type": "string", "description": "The name of the performance you want to book"}, "number_of_tickets": {"type": "integer", "description": "Quantity"}, "seat_type": {"type": "string", "description": "Selected seat type (e.g. VIP, general)"}}, "required": ["concert_name", "number_of_tickets", "seat_type"]}}}, {"type": "function", "function": {"name": "calculateBMR", "description": "Basal metabolic rate calculation", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}, "height": {"type": "number", "description": "Centimeter key"}, "age": {"type": "integer", "description": "age"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["weight", "height", "age", "gender"]}}}, {"type": "function", "function": {"name": "search_email_content", "description": "Search for emails containing keywords specified by the user during the saved email.", "parameters": {"type": "object", "properties": {"keyword": {"type": "string", "description": "Keyword to search"}, "from_date": {"type": "string", "description": "Date to start searching (optional)"}, "to_date": {"type": "string", "description": "Date to finish the search (optional)"}, "sender": {"type": "string", "description": "Email caller address (optional)"}}, "required": ["keyword"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the number of tickets."}, "acceptable_arguments": null}
{"serial_num": 233, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Please book a concert ticket."}, {"role": "assistant", "content": "Please tell me the performance name, ticket quantity, and seat type."}, {"role": "user", "content": "Chapter 2 Book with VIP seats."}], "input_tools": [{"type": "function", "function": {"name": "upload_artwork_to_online_site", "description": "Upload your work to the online art platform.", "parameters": {"type": "object", "properties": {"art_image_url": {"type": "string", "description": "The image of the work to be uploaded URL"}, "title": {"type": "string", "description": "Title of the work"}, "description": {"type": "string", "description": "A brief explanation of the work"}}, "required": ["art_image_url", "title", "description"]}}}, {"type": "function", "function": {"name": "getCurrentTimeForLocation", "description": "Provide current time information in certain areas", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Local name to bring time information"}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "book_concert_tickets", "description": "Tickets for specific performances are made using external ticketing systems.", "parameters": {"type": "object", "properties": {"concert_name": {"type": "string", "description": "The name of the performance you want to book"}, "number_of_tickets": {"type": "integer", "description": "Quantity"}, "seat_type": {"type": "string", "description": "Selected seat type (e.g. VIP, general)"}}, "required": ["concert_name", "number_of_tickets", "seat_type"]}}}, {"type": "function", "function": {"name": "calculateBMR", "description": "Basal metabolic rate calculation", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}, "height": {"type": "number", "description": "Centimeter key"}, "age": {"type": "integer", "description": "age"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["weight", "height", "age", "gender"]}}}, {"type": "function", "function": {"name": "search_email_content", "description": "Search for emails containing keywords specified by the user during the saved email.", "parameters": {"type": "object", "properties": {"keyword": {"type": "string", "description": "Keyword to search"}, "from_date": {"type": "string", "description": "Date to start searching (optional)"}, "to_date": {"type": "string", "description": "Date to finish the search (optional)"}, "sender": {"type": "string", "description": "Email caller address (optional)"}}, "required": ["keyword"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the performance name."}, "acceptable_arguments": null}
{"serial_num": 234, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Please book a concert ticket."}, {"role": "assistant", "content": "Please tell me the performance name, ticket quantity, and seat type."}, {"role": "user", "content": "Book 2 with VIP seats."}], "input_tools": [{"type": "function", "function": {"name": "upload_artwork_to_online_site", "description": "Upload your work to the online art platform.", "parameters": {"type": "object", "properties": {"art_image_url": {"type": "string", "description": "The image of the work to be uploaded URL"}, "title": {"type": "string", "description": "Title of the work"}, "description": {"type": "string", "description": "A brief explanation of the work"}}, "required": ["art_image_url", "title", "description"]}}}, {"type": "function", "function": {"name": "getCurrentTimeForLocation", "description": "Provide current time information in certain areas", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Local name to bring time information"}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "book_concert_tickets", "description": "Tickets for specific performances are made using external ticketing systems.", "parameters": {"type": "object", "properties": {"concert_name": {"type": "string", "description": "The name of the performance you want to book"}, "number_of_tickets": {"type": "integer", "description": "Quantity"}, "seat_type": {"type": "string", "description": "Selected seat type (e.g. VIP, general)"}}, "required": ["concert_name", "number_of_tickets", "seat_type"]}}}, {"type": "function", "function": {"name": "calculateBMR", "description": "Basal metabolic rate calculation", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}, "height": {"type": "number", "description": "Centimeter key"}, "age": {"type": "integer", "description": "age"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["weight", "height", "age", "gender"]}}}, {"type": "function", "function": {"name": "search_email_content", "description": "Search for emails containing keywords specified by the user during the saved email.", "parameters": {"type": "object", "properties": {"keyword": {"type": "string", "description": "Keyword to search"}, "from_date": {"type": "string", "description": "Date to start searching (optional)"}, "to_date": {"type": "string", "description": "Date to finish the search (optional)"}, "sender": {"type": "string", "description": "Email caller address (optional)"}}, "required": ["keyword"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the performance name."}, "acceptable_arguments": null}
{"serial_num": 235, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Please make a ticket to the Bangbangcon 23 concert."}, {"role": "assistant", "content": "Please tell me the ticket quantity and seat type."}, {"role": "user", "content": "Chapter 2 Book me."}], "input_tools": [{"type": "function", "function": {"name": "upload_artwork_to_online_site", "description": "Upload your work to the online art platform.", "parameters": {"type": "object", "properties": {"art_image_url": {"type": "string", "description": "The image of the work to be uploaded URL"}, "title": {"type": "string", "description": "Title of the work"}, "description": {"type": "string", "description": "A brief explanation of the work"}}, "required": ["art_image_url", "title", "description"]}}}, {"type": "function", "function": {"name": "getCurrentTimeForLocation", "description": "Provide current time information in certain areas", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Local name to bring time information"}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "book_concert_tickets", "description": "Tickets for specific performances are made using external ticketing systems.", "parameters": {"type": "object", "properties": {"concert_name": {"type": "string", "description": "The name of the performance you want to book"}, "number_of_tickets": {"type": "integer", "description": "Quantity"}, "seat_type": {"type": "string", "description": "Selected seat type (e.g. VIP, general)"}}, "required": ["concert_name", "number_of_tickets", "seat_type"]}}}, {"type": "function", "function": {"name": "calculateBMR", "description": "Basal metabolic rate calculation", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}, "height": {"type": "number", "description": "Centimeter key"}, "age": {"type": "integer", "description": "age"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["weight", "height", "age", "gender"]}}}, {"type": "function", "function": {"name": "search_email_content", "description": "Search for emails containing keywords specified by the user during the saved email.", "parameters": {"type": "object", "properties": {"keyword": {"type": "string", "description": "Keyword to search"}, "from_date": {"type": "string", "description": "Date to start searching (optional)"}, "to_date": {"type": "string", "description": "Date to finish the search (optional)"}, "sender": {"type": "string", "description": "Email caller address (optional)"}}, "required": ["keyword"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the type of seat."}, "acceptable_arguments": null}
{"serial_num": 236, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Book 2 concert tickets."}, {"role": "assistant", "content": "Please tell me the performance name and seat type."}, {"role": "user", "content": "This time, Bangbangcon 23 concert"}], "input_tools": [{"type": "function", "function": {"name": "upload_artwork_to_online_site", "description": "Upload your work to the online art platform.", "parameters": {"type": "object", "properties": {"art_image_url": {"type": "string", "description": "The image of the work to be uploaded URL"}, "title": {"type": "string", "description": "Title of the work"}, "description": {"type": "string", "description": "A brief explanation of the work"}}, "required": ["art_image_url", "title", "description"]}}}, {"type": "function", "function": {"name": "getCurrentTimeForLocation", "description": "Provide current time information in certain areas", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Local name to bring time information"}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "book_concert_tickets", "description": "Tickets for specific performances are made using external ticketing systems.", "parameters": {"type": "object", "properties": {"concert_name": {"type": "string", "description": "The name of the performance you want to book"}, "number_of_tickets": {"type": "integer", "description": "Quantity"}, "seat_type": {"type": "string", "description": "Selected seat type (e.g. VIP, general)"}}, "required": ["concert_name", "number_of_tickets", "seat_type"]}}}, {"type": "function", "function": {"name": "calculateBMR", "description": "Basal metabolic rate calculation", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}, "height": {"type": "number", "description": "Centimeter key"}, "age": {"type": "integer", "description": "age"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["weight", "height", "age", "gender"]}}}, {"type": "function", "function": {"name": "search_email_content", "description": "Search for emails containing keywords specified by the user during the saved email.", "parameters": {"type": "object", "properties": {"keyword": {"type": "string", "description": "Keyword to search"}, "from_date": {"type": "string", "description": "Date to start searching (optional)"}, "to_date": {"type": "string", "description": "Date to finish the search (optional)"}, "sender": {"type": "string", "description": "Email caller address (optional)"}}, "required": ["keyword"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the type of seat."}, "acceptable_arguments": null}
{"serial_num": 237, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Please make a ticket to the Bangbangcon 23 concert."}, {"role": "assistant", "content": "Please tell me the ticket quantity and seat type."}, {"role": "user", "content": "VIP seat"}], "input_tools": [{"type": "function", "function": {"name": "upload_artwork_to_online_site", "description": "Upload your work to the online art platform.", "parameters": {"type": "object", "properties": {"art_image_url": {"type": "string", "description": "The image of the work to be uploaded URL"}, "title": {"type": "string", "description": "Title of the work"}, "description": {"type": "string", "description": "A brief explanation of the work"}}, "required": ["art_image_url", "title", "description"]}}}, {"type": "function", "function": {"name": "getCurrentTimeForLocation", "description": "Provide current time information in certain areas", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Local name to bring time information"}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "book_concert_tickets", "description": "Tickets for specific performances are made using external ticketing systems.", "parameters": {"type": "object", "properties": {"concert_name": {"type": "string", "description": "The name of the performance you want to book"}, "number_of_tickets": {"type": "integer", "description": "Quantity"}, "seat_type": {"type": "string", "description": "Selected seat type (e.g. VIP, general)"}}, "required": ["concert_name", "number_of_tickets", "seat_type"]}}}, {"type": "function", "function": {"name": "calculateBMR", "description": "Basal metabolic rate calculation", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}, "height": {"type": "number", "description": "Centimeter key"}, "age": {"type": "integer", "description": "age"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["weight", "height", "age", "gender"]}}}, {"type": "function", "function": {"name": "search_email_content", "description": "Search for emails containing keywords specified by the user during the saved email.", "parameters": {"type": "object", "properties": {"keyword": {"type": "string", "description": "Keyword to search"}, "from_date": {"type": "string", "description": "Date to start searching (optional)"}, "to_date": {"type": "string", "description": "Date to finish the search (optional)"}, "sender": {"type": "string", "description": "Email caller address (optional)"}}, "required": ["keyword"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the number of tickets."}, "acceptable_arguments": null}
{"serial_num": 238, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Please make a reservation with a concert ticket VIP seat."}, {"role": "assistant", "content": "Please tell me the performance name and ticket quantity."}, {"role": "user", "content": "This time, Bangbangcon 23 concert"}], "input_tools": [{"type": "function", "function": {"name": "upload_artwork_to_online_site", "description": "Upload your work to the online art platform.", "parameters": {"type": "object", "properties": {"art_image_url": {"type": "string", "description": "The image of the work to be uploaded URL"}, "title": {"type": "string", "description": "Title of the work"}, "description": {"type": "string", "description": "A brief explanation of the work"}}, "required": ["art_image_url", "title", "description"]}}}, {"type": "function", "function": {"name": "getCurrentTimeForLocation", "description": "Provide current time information in certain areas", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Local name to bring time information"}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "book_concert_tickets", "description": "Tickets for specific performances are made using external ticketing systems.", "parameters": {"type": "object", "properties": {"concert_name": {"type": "string", "description": "The name of the performance you want to book"}, "number_of_tickets": {"type": "integer", "description": "Quantity"}, "seat_type": {"type": "string", "description": "Selected seat type (e.g. VIP, general)"}}, "required": ["concert_name", "number_of_tickets", "seat_type"]}}}, {"type": "function", "function": {"name": "calculateBMR", "description": "Basal metabolic rate calculation", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}, "height": {"type": "number", "description": "Centimeter key"}, "age": {"type": "integer", "description": "age"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["weight", "height", "age", "gender"]}}}, {"type": "function", "function": {"name": "search_email_content", "description": "Search for emails containing keywords specified by the user during the saved email.", "parameters": {"type": "object", "properties": {"keyword": {"type": "string", "description": "Keyword to search"}, "from_date": {"type": "string", "description": "Date to start searching (optional)"}, "to_date": {"type": "string", "description": "Date to finish the search (optional)"}, "sender": {"type": "string", "description": "Email caller address (optional)"}}, "required": ["keyword"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the number of tickets."}, "acceptable_arguments": null}
{"serial_num": 239, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Book 2 concert tickets."}, {"role": "assistant", "content": "Please tell me the performance name and seat type."}, {"role": "user", "content": "VIP seat"}], "input_tools": [{"type": "function", "function": {"name": "upload_artwork_to_online_site", "description": "Upload your work to the online art platform.", "parameters": {"type": "object", "properties": {"art_image_url": {"type": "string", "description": "The image of the work to be uploaded URL"}, "title": {"type": "string", "description": "Title of the work"}, "description": {"type": "string", "description": "A brief explanation of the work"}}, "required": ["art_image_url", "title", "description"]}}}, {"type": "function", "function": {"name": "getCurrentTimeForLocation", "description": "Provide current time information in certain areas", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Local name to bring time information"}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "book_concert_tickets", "description": "Tickets for specific performances are made using external ticketing systems.", "parameters": {"type": "object", "properties": {"concert_name": {"type": "string", "description": "The name of the performance you want to book"}, "number_of_tickets": {"type": "integer", "description": "Quantity"}, "seat_type": {"type": "string", "description": "Selected seat type (e.g. VIP, general)"}}, "required": ["concert_name", "number_of_tickets", "seat_type"]}}}, {"type": "function", "function": {"name": "calculateBMR", "description": "Basal metabolic rate calculation", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}, "height": {"type": "number", "description": "Centimeter key"}, "age": {"type": "integer", "description": "age"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["weight", "height", "age", "gender"]}}}, {"type": "function", "function": {"name": "search_email_content", "description": "Search for emails containing keywords specified by the user during the saved email.", "parameters": {"type": "object", "properties": {"keyword": {"type": "string", "description": "Keyword to search"}, "from_date": {"type": "string", "description": "Date to start searching (optional)"}, "to_date": {"type": "string", "description": "Date to finish the search (optional)"}, "sender": {"type": "string", "description": "Email caller address (optional)"}}, "required": ["keyword"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the performance name."}, "acceptable_arguments": null}
{"serial_num": 240, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Please make a reservation with a concert ticket VIP seat."}, {"role": "assistant", "content": "Please tell me the performance name and ticket quantity."}, {"role": "user", "content": "Chapter 2"}], "input_tools": [{"type": "function", "function": {"name": "upload_artwork_to_online_site", "description": "Upload your work to the online art platform.", "parameters": {"type": "object", "properties": {"art_image_url": {"type": "string", "description": "The image of the work to be uploaded URL"}, "title": {"type": "string", "description": "Title of the work"}, "description": {"type": "string", "description": "A brief explanation of the work"}}, "required": ["art_image_url", "title", "description"]}}}, {"type": "function", "function": {"name": "getCurrentTimeForLocation", "description": "Provide current time information in certain areas", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Local name to bring time information"}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "book_concert_tickets", "description": "Tickets for specific performances are made using external ticketing systems.", "parameters": {"type": "object", "properties": {"concert_name": {"type": "string", "description": "The name of the performance you want to book"}, "number_of_tickets": {"type": "integer", "description": "Quantity"}, "seat_type": {"type": "string", "description": "Selected seat type (e.g. VIP, general)"}}, "required": ["concert_name", "number_of_tickets", "seat_type"]}}}, {"type": "function", "function": {"name": "calculateBMR", "description": "Basal metabolic rate calculation", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}, "height": {"type": "number", "description": "Centimeter key"}, "age": {"type": "integer", "description": "age"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["weight", "height", "age", "gender"]}}}, {"type": "function", "function": {"name": "search_email_content", "description": "Search for emails containing keywords specified by the user during the saved email.", "parameters": {"type": "object", "properties": {"keyword": {"type": "string", "description": "Keyword to search"}, "from_date": {"type": "string", "description": "Date to start searching (optional)"}, "to_date": {"type": "string", "description": "Date to finish the search (optional)"}, "sender": {"type": "string", "description": "Email caller address (optional)"}}, "required": ["keyword"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the performance name."}, "acceptable_arguments": null}
{"serial_num": 241, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Please book a concert ticket."}, {"role": "assistant", "content": "Please tell me the performance name, ticket quantity, and seat type."}, {"role": "user", "content": "Please make a ticket to the Bangbangcon 23 concert."}, {"role": "assistant", "content": "Please tell me the ticket quantity and seat type."}, {"role": "user", "content": "Chapter 2 Book me."}], "input_tools": [{"type": "function", "function": {"name": "upload_artwork_to_online_site", "description": "Upload your work to the online art platform.", "parameters": {"type": "object", "properties": {"art_image_url": {"type": "string", "description": "The image of the work to be uploaded URL"}, "title": {"type": "string", "description": "Title of the work"}, "description": {"type": "string", "description": "A brief explanation of the work"}}, "required": ["art_image_url", "title", "description"]}}}, {"type": "function", "function": {"name": "getCurrentTimeForLocation", "description": "Provide current time information in certain areas", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Local name to bring time information"}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "book_concert_tickets", "description": "Tickets for specific performances are made using external ticketing systems.", "parameters": {"type": "object", "properties": {"concert_name": {"type": "string", "description": "The name of the performance you want to book"}, "number_of_tickets": {"type": "integer", "description": "Quantity"}, "seat_type": {"type": "string", "description": "Selected seat type (e.g. VIP, general)"}}, "required": ["concert_name", "number_of_tickets", "seat_type"]}}}, {"type": "function", "function": {"name": "calculateBMR", "description": "Basal metabolic rate calculation", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}, "height": {"type": "number", "description": "Centimeter key"}, "age": {"type": "integer", "description": "age"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["weight", "height", "age", "gender"]}}}, {"type": "function", "function": {"name": "search_email_content", "description": "Search for emails containing keywords specified by the user during the saved email.", "parameters": {"type": "object", "properties": {"keyword": {"type": "string", "description": "Keyword to search"}, "from_date": {"type": "string", "description": "Date to start searching (optional)"}, "to_date": {"type": "string", "description": "Date to finish the search (optional)"}, "sender": {"type": "string", "description": "Email caller address (optional)"}}, "required": ["keyword"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the type of seat."}, "acceptable_arguments": null}
{"serial_num": 242, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Please book a concert ticket."}, {"role": "assistant", "content": "Please tell me the performance name, ticket quantity, and seat type."}, {"role": "user", "content": "Book 2 concert tickets."}, {"role": "assistant", "content": "Please tell me the performance name and seat type."}, {"role": "user", "content": "This time, Bangbangcon 23 concert"}], "input_tools": [{"type": "function", "function": {"name": "upload_artwork_to_online_site", "description": "Upload your work to the online art platform.", "parameters": {"type": "object", "properties": {"art_image_url": {"type": "string", "description": "The image of the work to be uploaded URL"}, "title": {"type": "string", "description": "Title of the work"}, "description": {"type": "string", "description": "A brief explanation of the work"}}, "required": ["art_image_url", "title", "description"]}}}, {"type": "function", "function": {"name": "getCurrentTimeForLocation", "description": "Provide current time information in certain areas", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Local name to bring time information"}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "book_concert_tickets", "description": "Tickets for specific performances are made using external ticketing systems.", "parameters": {"type": "object", "properties": {"concert_name": {"type": "string", "description": "The name of the performance you want to book"}, "number_of_tickets": {"type": "integer", "description": "Quantity"}, "seat_type": {"type": "string", "description": "Selected seat type (e.g. VIP, general)"}}, "required": ["concert_name", "number_of_tickets", "seat_type"]}}}, {"type": "function", "function": {"name": "calculateBMR", "description": "Basal metabolic rate calculation", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}, "height": {"type": "number", "description": "Centimeter key"}, "age": {"type": "integer", "description": "age"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["weight", "height", "age", "gender"]}}}, {"type": "function", "function": {"name": "search_email_content", "description": "Search for emails containing keywords specified by the user during the saved email.", "parameters": {"type": "object", "properties": {"keyword": {"type": "string", "description": "Keyword to search"}, "from_date": {"type": "string", "description": "Date to start searching (optional)"}, "to_date": {"type": "string", "description": "Date to finish the search (optional)"}, "sender": {"type": "string", "description": "Email caller address (optional)"}}, "required": ["keyword"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the type of seat."}, "acceptable_arguments": null}
{"serial_num": 243, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Please book a concert ticket."}, {"role": "assistant", "content": "Please tell me the performance name, ticket quantity, and seat type."}, {"role": "user", "content": "Please make a ticket to the Bangbangcon 23 concert."}, {"role": "assistant", "content": "Please tell me the ticket quantity and seat type."}, {"role": "user", "content": "VIP seat"}], "input_tools": [{"type": "function", "function": {"name": "upload_artwork_to_online_site", "description": "Upload your work to the online art platform.", "parameters": {"type": "object", "properties": {"art_image_url": {"type": "string", "description": "The image of the work to be uploaded URL"}, "title": {"type": "string", "description": "Title of the work"}, "description": {"type": "string", "description": "A brief explanation of the work"}}, "required": ["art_image_url", "title", "description"]}}}, {"type": "function", "function": {"name": "getCurrentTimeForLocation", "description": "Provide current time information in certain areas", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Local name to bring time information"}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "book_concert_tickets", "description": "Tickets for specific performances are made using external ticketing systems.", "parameters": {"type": "object", "properties": {"concert_name": {"type": "string", "description": "The name of the performance you want to book"}, "number_of_tickets": {"type": "integer", "description": "Quantity"}, "seat_type": {"type": "string", "description": "Selected seat type (e.g. VIP, general)"}}, "required": ["concert_name", "number_of_tickets", "seat_type"]}}}, {"type": "function", "function": {"name": "calculateBMR", "description": "Basal metabolic rate calculation", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}, "height": {"type": "number", "description": "Centimeter key"}, "age": {"type": "integer", "description": "age"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["weight", "height", "age", "gender"]}}}, {"type": "function", "function": {"name": "search_email_content", "description": "Search for emails containing keywords specified by the user during the saved email.", "parameters": {"type": "object", "properties": {"keyword": {"type": "string", "description": "Keyword to search"}, "from_date": {"type": "string", "description": "Date to start searching (optional)"}, "to_date": {"type": "string", "description": "Date to finish the search (optional)"}, "sender": {"type": "string", "description": "Email caller address (optional)"}}, "required": ["keyword"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the number of tickets."}, "acceptable_arguments": null}
{"serial_num": 244, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Please book a concert ticket."}, {"role": "assistant", "content": "Please tell me the performance name, ticket quantity, and seat type."}, {"role": "user", "content": "Please make a reservation with a VIP seat."}, {"role": "assistant", "content": "Please tell me the performance name and ticket quantity."}, {"role": "user", "content": "This time, Bangbangcon 23 concert"}], "input_tools": [{"type": "function", "function": {"name": "upload_artwork_to_online_site", "description": "Upload your work to the online art platform.", "parameters": {"type": "object", "properties": {"art_image_url": {"type": "string", "description": "The image of the work to be uploaded URL"}, "title": {"type": "string", "description": "Title of the work"}, "description": {"type": "string", "description": "A brief explanation of the work"}}, "required": ["art_image_url", "title", "description"]}}}, {"type": "function", "function": {"name": "getCurrentTimeForLocation", "description": "Provide current time information in certain areas", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Local name to bring time information"}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "book_concert_tickets", "description": "Tickets for specific performances are made using external ticketing systems.", "parameters": {"type": "object", "properties": {"concert_name": {"type": "string", "description": "The name of the performance you want to book"}, "number_of_tickets": {"type": "integer", "description": "Quantity"}, "seat_type": {"type": "string", "description": "Selected seat type (e.g. VIP, general)"}}, "required": ["concert_name", "number_of_tickets", "seat_type"]}}}, {"type": "function", "function": {"name": "calculateBMR", "description": "Basal metabolic rate calculation", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}, "height": {"type": "number", "description": "Centimeter key"}, "age": {"type": "integer", "description": "age"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["weight", "height", "age", "gender"]}}}, {"type": "function", "function": {"name": "search_email_content", "description": "Search for emails containing keywords specified by the user during the saved email.", "parameters": {"type": "object", "properties": {"keyword": {"type": "string", "description": "Keyword to search"}, "from_date": {"type": "string", "description": "Date to start searching (optional)"}, "to_date": {"type": "string", "description": "Date to finish the search (optional)"}, "sender": {"type": "string", "description": "Email caller address (optional)"}}, "required": ["keyword"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the number of tickets."}, "acceptable_arguments": null}
{"serial_num": 245, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Please book a concert ticket."}, {"role": "assistant", "content": "Please tell me the performance name, ticket quantity, and seat type."}, {"role": "user", "content": "Chapter 2 Book me."}, {"role": "assistant", "content": "Please tell me the performance name and seat type."}, {"role": "user", "content": "VIP seat"}], "input_tools": [{"type": "function", "function": {"name": "upload_artwork_to_online_site", "description": "Upload your work to the online art platform.", "parameters": {"type": "object", "properties": {"art_image_url": {"type": "string", "description": "The image of the work to be uploaded URL"}, "title": {"type": "string", "description": "Title of the work"}, "description": {"type": "string", "description": "A brief explanation of the work"}}, "required": ["art_image_url", "title", "description"]}}}, {"type": "function", "function": {"name": "getCurrentTimeForLocation", "description": "Provide current time information in certain areas", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Local name to bring time information"}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "book_concert_tickets", "description": "Tickets for specific performances are made using external ticketing systems.", "parameters": {"type": "object", "properties": {"concert_name": {"type": "string", "description": "The name of the performance you want to book"}, "number_of_tickets": {"type": "integer", "description": "Quantity"}, "seat_type": {"type": "string", "description": "Selected seat type (e.g. VIP, general)"}}, "required": ["concert_name", "number_of_tickets", "seat_type"]}}}, {"type": "function", "function": {"name": "calculateBMR", "description": "Basal metabolic rate calculation", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}, "height": {"type": "number", "description": "Centimeter key"}, "age": {"type": "integer", "description": "age"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["weight", "height", "age", "gender"]}}}, {"type": "function", "function": {"name": "search_email_content", "description": "Search for emails containing keywords specified by the user during the saved email.", "parameters": {"type": "object", "properties": {"keyword": {"type": "string", "description": "Keyword to search"}, "from_date": {"type": "string", "description": "Date to start searching (optional)"}, "to_date": {"type": "string", "description": "Date to finish the search (optional)"}, "sender": {"type": "string", "description": "Email caller address (optional)"}}, "required": ["keyword"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the performance name."}, "acceptable_arguments": null}
{"serial_num": 246, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Please book a concert ticket."}, {"role": "assistant", "content": "Please tell me the performance name, ticket quantity, and seat type."}, {"role": "user", "content": "Please make a reservation with a VIP seat."}, {"role": "assistant", "content": "Please tell me the performance name and ticket quantity."}, {"role": "user", "content": "Chapter 2"}], "input_tools": [{"type": "function", "function": {"name": "upload_artwork_to_online_site", "description": "Upload your work to the online art platform.", "parameters": {"type": "object", "properties": {"art_image_url": {"type": "string", "description": "The image of the work to be uploaded URL"}, "title": {"type": "string", "description": "Title of the work"}, "description": {"type": "string", "description": "A brief explanation of the work"}}, "required": ["art_image_url", "title", "description"]}}}, {"type": "function", "function": {"name": "getCurrentTimeForLocation", "description": "Provide current time information in certain areas", "parameters": {"type": "object", "properties": {"location": {"type": "string", "description": "Local name to bring time information"}}, "required": ["location"]}}}, {"type": "function", "function": {"name": "book_concert_tickets", "description": "Tickets for specific performances are made using external ticketing systems.", "parameters": {"type": "object", "properties": {"concert_name": {"type": "string", "description": "The name of the performance you want to book"}, "number_of_tickets": {"type": "integer", "description": "Quantity"}, "seat_type": {"type": "string", "description": "Selected seat type (e.g. VIP, general)"}}, "required": ["concert_name", "number_of_tickets", "seat_type"]}}}, {"type": "function", "function": {"name": "calculateBMR", "description": "Basal metabolic rate calculation", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}, "height": {"type": "number", "description": "Centimeter key"}, "age": {"type": "integer", "description": "age"}, "gender": {"type": "string", "description": "Gender ('male' 또는 'female')"}}, "required": ["weight", "height", "age", "gender"]}}}, {"type": "function", "function": {"name": "search_email_content", "description": "Search for emails containing keywords specified by the user during the saved email.", "parameters": {"type": "object", "properties": {"keyword": {"type": "string", "description": "Keyword to search"}, "from_date": {"type": "string", "description": "Date to start searching (optional)"}, "to_date": {"type": "string", "description": "Date to finish the search (optional)"}, "sender": {"type": "string", "description": "Email caller address (optional)"}}, "required": ["keyword"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the performance name."}, "acceptable_arguments": null}
{"serial_num": 247, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Please check Hong Gil -dong's tax refund"}], "input_tools": [{"type": "function", "function": {"name": "translate_text_to_english", "description": "Translate the given text into English", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Text translation in English"}}, "required": ["text"]}}}, {"type": "function", "function": {"name": "informLottoNumberByRound", "description": "It is a function that informs the lottery winning number of a specific episode.", "parameters": {"type": "object", "properties": {"round": {"type": "integer", "description": "The round to check the lottery winning number"}}, "required": ["round"]}}}, {"type": "function", "function": {"name": "CheckTaxRefund", "description": "Search for the user's tax refund.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "The name of the tax paymenter"}, "birth": {"type": "string", "description": "Date of birth of tax payers (YYYY-MM-DD)"}, "phone_number": {"type": "string", "description": "Contact of tax payers"}}, "required": ["name", "birth", "phone_number"]}}}, {"type": "function", "function": {"name": "getMonthlyBoxOfficeRanking", "description": "It offers a monthly box office ranking for the designated year and month.", "parameters": {"type": "object", "properties": {"year": {"type": "string", "description": "The year to look up (yyyy format)"}, "month": {"type": "string", "description": "Month to look up (MM format)"}}, "required": ["year", "month"]}}}, {"type": "function", "function": {"name": "calculateWaterIntakeRequirement", "description": "Daily recommended water intake based on weight based on weight", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}}, "required": ["weight"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me your date of birth, your date of birth."}, "acceptable_arguments": null}
{"serial_num": 248, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Please check the tax refund. Born on July 21, 1994."}], "input_tools": [{"type": "function", "function": {"name": "translate_text_to_english", "description": "Translate the given text into English", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Text translation in English"}}, "required": ["text"]}}}, {"type": "function", "function": {"name": "informLottoNumberByRound", "description": "It is a function that informs the lottery winning number of a specific episode.", "parameters": {"type": "object", "properties": {"round": {"type": "integer", "description": "The round to check the lottery winning number"}}, "required": ["round"]}}}, {"type": "function", "function": {"name": "CheckTaxRefund", "description": "Search for the user's tax refund.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "The name of the tax paymenter"}, "birth": {"type": "string", "description": "Date of birth of tax payers (YYYY-MM-DD)"}, "phone_number": {"type": "string", "description": "Contact of tax payers"}}, "required": ["name", "birth", "phone_number"]}}}, {"type": "function", "function": {"name": "getMonthlyBoxOfficeRanking", "description": "It offers a monthly box office ranking for the designated year and month.", "parameters": {"type": "object", "properties": {"year": {"type": "string", "description": "The year to look up (yyyy format)"}, "month": {"type": "string", "description": "Month to look up (MM format)"}}, "required": ["year", "month"]}}}, {"type": "function", "function": {"name": "calculateWaterIntakeRequirement", "description": "Daily recommended water intake based on weight based on weight", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}}, "required": ["weight"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the name and contact information of the tax payer."}, "acceptable_arguments": null}
{"serial_num": 249, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Please check the tax refund. The phone number is 010-1111-2222."}], "input_tools": [{"type": "function", "function": {"name": "translate_text_to_english", "description": "Translate the given text into English", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Text translation in English"}}, "required": ["text"]}}}, {"type": "function", "function": {"name": "informLottoNumberByRound", "description": "It is a function that informs the lottery winning number of a specific episode.", "parameters": {"type": "object", "properties": {"round": {"type": "integer", "description": "The round to check the lottery winning number"}}, "required": ["round"]}}}, {"type": "function", "function": {"name": "CheckTaxRefund", "description": "Search for the user's tax refund.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "The name of the tax paymenter"}, "birth": {"type": "string", "description": "Date of birth of tax payers (YYYY-MM-DD)"}, "phone_number": {"type": "string", "description": "Contact of tax payers"}}, "required": ["name", "birth", "phone_number"]}}}, {"type": "function", "function": {"name": "getMonthlyBoxOfficeRanking", "description": "It offers a monthly box office ranking for the designated year and month.", "parameters": {"type": "object", "properties": {"year": {"type": "string", "description": "The year to look up (yyyy format)"}, "month": {"type": "string", "description": "Month to look up (MM format)"}}, "required": ["year", "month"]}}}, {"type": "function", "function": {"name": "calculateWaterIntakeRequirement", "description": "Daily recommended water intake based on weight based on weight", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}}, "required": ["weight"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell us the name and date of birth of tax payers."}, "acceptable_arguments": null}
{"serial_num": 250, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Please check the tax refund"}, {"role": "assistant", "content": "Please tell me the name of the tax paymenter, date of birth, and contact information."}, {"role": "user", "content": "Name Hong Gil -dong"}], "input_tools": [{"type": "function", "function": {"name": "translate_text_to_english", "description": "Translate the given text into English", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Text translation in English"}}, "required": ["text"]}}}, {"type": "function", "function": {"name": "informLottoNumberByRound", "description": "It is a function that informs the lottery winning number of a specific episode.", "parameters": {"type": "object", "properties": {"round": {"type": "integer", "description": "The round to check the lottery winning number"}}, "required": ["round"]}}}, {"type": "function", "function": {"name": "CheckTaxRefund", "description": "Search for the user's tax refund.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "The name of the tax paymenter"}, "birth": {"type": "string", "description": "Date of birth of tax payers (YYYY-MM-DD)"}, "phone_number": {"type": "string", "description": "Contact of tax payers"}}, "required": ["name", "birth", "phone_number"]}}}, {"type": "function", "function": {"name": "getMonthlyBoxOfficeRanking", "description": "It offers a monthly box office ranking for the designated year and month.", "parameters": {"type": "object", "properties": {"year": {"type": "string", "description": "The year to look up (yyyy format)"}, "month": {"type": "string", "description": "Month to look up (MM format)"}}, "required": ["year", "month"]}}}, {"type": "function", "function": {"name": "calculateWaterIntakeRequirement", "description": "Daily recommended water intake based on weight based on weight", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}}, "required": ["weight"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me your date of birth, your date of birth."}, "acceptable_arguments": null}
{"serial_num": 251, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Please check the tax refund"}, {"role": "assistant", "content": "Please tell me the name of the tax paymenter, date of birth, and contact information."}, {"role": "user", "content": "Born on July 21, 1994."}], "input_tools": [{"type": "function", "function": {"name": "translate_text_to_english", "description": "Translate the given text into English", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Text translation in English"}}, "required": ["text"]}}}, {"type": "function", "function": {"name": "informLottoNumberByRound", "description": "It is a function that informs the lottery winning number of a specific episode.", "parameters": {"type": "object", "properties": {"round": {"type": "integer", "description": "The round to check the lottery winning number"}}, "required": ["round"]}}}, {"type": "function", "function": {"name": "CheckTaxRefund", "description": "Search for the user's tax refund.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "The name of the tax paymenter"}, "birth": {"type": "string", "description": "Date of birth of tax payers (YYYY-MM-DD)"}, "phone_number": {"type": "string", "description": "Contact of tax payers"}}, "required": ["name", "birth", "phone_number"]}}}, {"type": "function", "function": {"name": "getMonthlyBoxOfficeRanking", "description": "It offers a monthly box office ranking for the designated year and month.", "parameters": {"type": "object", "properties": {"year": {"type": "string", "description": "The year to look up (yyyy format)"}, "month": {"type": "string", "description": "Month to look up (MM format)"}}, "required": ["year", "month"]}}}, {"type": "function", "function": {"name": "calculateWaterIntakeRequirement", "description": "Daily recommended water intake based on weight based on weight", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}}, "required": ["weight"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the name and contact information of the tax payer."}, "acceptable_arguments": null}
{"serial_num": 252, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Please check the tax refund"}, {"role": "assistant", "content": "Please tell me the name of the tax paymenter, date of birth, and contact information."}, {"role": "user", "content": "The phone number is 010-1111-2222."}], "input_tools": [{"type": "function", "function": {"name": "translate_text_to_english", "description": "Translate the given text into English", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Text translation in English"}}, "required": ["text"]}}}, {"type": "function", "function": {"name": "informLottoNumberByRound", "description": "It is a function that informs the lottery winning number of a specific episode.", "parameters": {"type": "object", "properties": {"round": {"type": "integer", "description": "The round to check the lottery winning number"}}, "required": ["round"]}}}, {"type": "function", "function": {"name": "CheckTaxRefund", "description": "Search for the user's tax refund.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "The name of the tax paymenter"}, "birth": {"type": "string", "description": "Date of birth of tax payers (YYYY-MM-DD)"}, "phone_number": {"type": "string", "description": "Contact of tax payers"}}, "required": ["name", "birth", "phone_number"]}}}, {"type": "function", "function": {"name": "getMonthlyBoxOfficeRanking", "description": "It offers a monthly box office ranking for the designated year and month.", "parameters": {"type": "object", "properties": {"year": {"type": "string", "description": "The year to look up (yyyy format)"}, "month": {"type": "string", "description": "Month to look up (MM format)"}}, "required": ["year", "month"]}}}, {"type": "function", "function": {"name": "calculateWaterIntakeRequirement", "description": "Daily recommended water intake based on weight based on weight", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}}, "required": ["weight"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell us the name and date of birth of tax payers."}, "acceptable_arguments": null}
{"serial_num": 253, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Hong Gil -dong, born on July 21, 1994, check the tax refund."}], "input_tools": [{"type": "function", "function": {"name": "translate_text_to_english", "description": "Translate the given text into English", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Text translation in English"}}, "required": ["text"]}}}, {"type": "function", "function": {"name": "informLottoNumberByRound", "description": "It is a function that informs the lottery winning number of a specific episode.", "parameters": {"type": "object", "properties": {"round": {"type": "integer", "description": "The round to check the lottery winning number"}}, "required": ["round"]}}}, {"type": "function", "function": {"name": "CheckTaxRefund", "description": "Search for the user's tax refund.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "The name of the tax paymenter"}, "birth": {"type": "string", "description": "Date of birth of tax payers (YYYY-MM-DD)"}, "phone_number": {"type": "string", "description": "Contact of tax payers"}}, "required": ["name", "birth", "phone_number"]}}}, {"type": "function", "function": {"name": "getMonthlyBoxOfficeRanking", "description": "It offers a monthly box office ranking for the designated year and month.", "parameters": {"type": "object", "properties": {"year": {"type": "string", "description": "The year to look up (yyyy format)"}, "month": {"type": "string", "description": "Month to look up (MM format)"}}, "required": ["year", "month"]}}}, {"type": "function", "function": {"name": "calculateWaterIntakeRequirement", "description": "Daily recommended water intake based on weight based on weight", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}}, "required": ["weight"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the contacts of the tax payer."}, "acceptable_arguments": null}
{"serial_num": 254, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Check out Hong Gil -dong's tax refund on July 21, 1994"}], "input_tools": [{"type": "function", "function": {"name": "translate_text_to_english", "description": "Translate the given text into English", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Text translation in English"}}, "required": ["text"]}}}, {"type": "function", "function": {"name": "informLottoNumberByRound", "description": "It is a function that informs the lottery winning number of a specific episode.", "parameters": {"type": "object", "properties": {"round": {"type": "integer", "description": "The round to check the lottery winning number"}}, "required": ["round"]}}}, {"type": "function", "function": {"name": "CheckTaxRefund", "description": "Search for the user's tax refund.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "The name of the tax paymenter"}, "birth": {"type": "string", "description": "Date of birth of tax payers (YYYY-MM-DD)"}, "phone_number": {"type": "string", "description": "Contact of tax payers"}}, "required": ["name", "birth", "phone_number"]}}}, {"type": "function", "function": {"name": "getMonthlyBoxOfficeRanking", "description": "It offers a monthly box office ranking for the designated year and month.", "parameters": {"type": "object", "properties": {"year": {"type": "string", "description": "The year to look up (yyyy format)"}, "month": {"type": "string", "description": "Month to look up (MM format)"}}, "required": ["year", "month"]}}}, {"type": "function", "function": {"name": "calculateWaterIntakeRequirement", "description": "Daily recommended water intake based on weight based on weight", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}}, "required": ["weight"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the contacts of the tax payer."}, "acceptable_arguments": null}
{"serial_num": 255, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Hong Gil-dong, phone number 010-1111-2222 Check the tax refund."}], "input_tools": [{"type": "function", "function": {"name": "translate_text_to_english", "description": "Translate the given text into English", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Text translation in English"}}, "required": ["text"]}}}, {"type": "function", "function": {"name": "informLottoNumberByRound", "description": "It is a function that informs the lottery winning number of a specific episode.", "parameters": {"type": "object", "properties": {"round": {"type": "integer", "description": "The round to check the lottery winning number"}}, "required": ["round"]}}}, {"type": "function", "function": {"name": "CheckTaxRefund", "description": "Search for the user's tax refund.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "The name of the tax paymenter"}, "birth": {"type": "string", "description": "Date of birth of tax payers (YYYY-MM-DD)"}, "phone_number": {"type": "string", "description": "Contact of tax payers"}}, "required": ["name", "birth", "phone_number"]}}}, {"type": "function", "function": {"name": "getMonthlyBoxOfficeRanking", "description": "It offers a monthly box office ranking for the designated year and month.", "parameters": {"type": "object", "properties": {"year": {"type": "string", "description": "The year to look up (yyyy format)"}, "month": {"type": "string", "description": "Month to look up (MM format)"}}, "required": ["year", "month"]}}}, {"type": "function", "function": {"name": "calculateWaterIntakeRequirement", "description": "Daily recommended water intake based on weight based on weight", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}}, "required": ["weight"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the date of birth."}, "acceptable_arguments": null}
{"serial_num": 256, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Phone number 010-1111-2222, name Hong Gil-dong, check the tax refund"}], "input_tools": [{"type": "function", "function": {"name": "translate_text_to_english", "description": "Translate the given text into English", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Text translation in English"}}, "required": ["text"]}}}, {"type": "function", "function": {"name": "informLottoNumberByRound", "description": "It is a function that informs the lottery winning number of a specific episode.", "parameters": {"type": "object", "properties": {"round": {"type": "integer", "description": "The round to check the lottery winning number"}}, "required": ["round"]}}}, {"type": "function", "function": {"name": "CheckTaxRefund", "description": "Search for the user's tax refund.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "The name of the tax paymenter"}, "birth": {"type": "string", "description": "Date of birth of tax payers (YYYY-MM-DD)"}, "phone_number": {"type": "string", "description": "Contact of tax payers"}}, "required": ["name", "birth", "phone_number"]}}}, {"type": "function", "function": {"name": "getMonthlyBoxOfficeRanking", "description": "It offers a monthly box office ranking for the designated year and month.", "parameters": {"type": "object", "properties": {"year": {"type": "string", "description": "The year to look up (yyyy format)"}, "month": {"type": "string", "description": "Month to look up (MM format)"}}, "required": ["year", "month"]}}}, {"type": "function", "function": {"name": "calculateWaterIntakeRequirement", "description": "Daily recommended water intake based on weight based on weight", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}}, "required": ["weight"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the date of birth."}, "acceptable_arguments": null}
{"serial_num": 257, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Please check the tax refund. Born on July 21, 1994, the phone number 010-1111-2222."}], "input_tools": [{"type": "function", "function": {"name": "translate_text_to_english", "description": "Translate the given text into English", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Text translation in English"}}, "required": ["text"]}}}, {"type": "function", "function": {"name": "informLottoNumberByRound", "description": "It is a function that informs the lottery winning number of a specific episode.", "parameters": {"type": "object", "properties": {"round": {"type": "integer", "description": "The round to check the lottery winning number"}}, "required": ["round"]}}}, {"type": "function", "function": {"name": "CheckTaxRefund", "description": "Search for the user's tax refund.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "The name of the tax paymenter"}, "birth": {"type": "string", "description": "Date of birth of tax payers (YYYY-MM-DD)"}, "phone_number": {"type": "string", "description": "Contact of tax payers"}}, "required": ["name", "birth", "phone_number"]}}}, {"type": "function", "function": {"name": "getMonthlyBoxOfficeRanking", "description": "It offers a monthly box office ranking for the designated year and month.", "parameters": {"type": "object", "properties": {"year": {"type": "string", "description": "The year to look up (yyyy format)"}, "month": {"type": "string", "description": "Month to look up (MM format)"}}, "required": ["year", "month"]}}}, {"type": "function", "function": {"name": "calculateWaterIntakeRequirement", "description": "Daily recommended water intake based on weight based on weight", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}}, "required": ["weight"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the name of the tax paymenter."}, "acceptable_arguments": null}
{"serial_num": 258, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Phone number 010-1111-2222, born July 21, 1994, check the tax refund."}], "input_tools": [{"type": "function", "function": {"name": "translate_text_to_english", "description": "Translate the given text into English", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Text translation in English"}}, "required": ["text"]}}}, {"type": "function", "function": {"name": "informLottoNumberByRound", "description": "It is a function that informs the lottery winning number of a specific episode.", "parameters": {"type": "object", "properties": {"round": {"type": "integer", "description": "The round to check the lottery winning number"}}, "required": ["round"]}}}, {"type": "function", "function": {"name": "CheckTaxRefund", "description": "Search for the user's tax refund.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "The name of the tax paymenter"}, "birth": {"type": "string", "description": "Date of birth of tax payers (YYYY-MM-DD)"}, "phone_number": {"type": "string", "description": "Contact of tax payers"}}, "required": ["name", "birth", "phone_number"]}}}, {"type": "function", "function": {"name": "getMonthlyBoxOfficeRanking", "description": "It offers a monthly box office ranking for the designated year and month.", "parameters": {"type": "object", "properties": {"year": {"type": "string", "description": "The year to look up (yyyy format)"}, "month": {"type": "string", "description": "Month to look up (MM format)"}}, "required": ["year", "month"]}}}, {"type": "function", "function": {"name": "calculateWaterIntakeRequirement", "description": "Daily recommended water intake based on weight based on weight", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}}, "required": ["weight"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the name of the tax paymenter."}, "acceptable_arguments": null}
{"serial_num": 259, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Please check the tax refund"}, {"role": "assistant", "content": "Please tell me the name of the tax paymenter, date of birth, and contact information."}, {"role": "user", "content": "Hong Gil -dong, born July 21, 1994"}], "input_tools": [{"type": "function", "function": {"name": "translate_text_to_english", "description": "Translate the given text into English", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Text translation in English"}}, "required": ["text"]}}}, {"type": "function", "function": {"name": "informLottoNumberByRound", "description": "It is a function that informs the lottery winning number of a specific episode.", "parameters": {"type": "object", "properties": {"round": {"type": "integer", "description": "The round to check the lottery winning number"}}, "required": ["round"]}}}, {"type": "function", "function": {"name": "CheckTaxRefund", "description": "Search for the user's tax refund.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "The name of the tax paymenter"}, "birth": {"type": "string", "description": "Date of birth of tax payers (YYYY-MM-DD)"}, "phone_number": {"type": "string", "description": "Contact of tax payers"}}, "required": ["name", "birth", "phone_number"]}}}, {"type": "function", "function": {"name": "getMonthlyBoxOfficeRanking", "description": "It offers a monthly box office ranking for the designated year and month.", "parameters": {"type": "object", "properties": {"year": {"type": "string", "description": "The year to look up (yyyy format)"}, "month": {"type": "string", "description": "Month to look up (MM format)"}}, "required": ["year", "month"]}}}, {"type": "function", "function": {"name": "calculateWaterIntakeRequirement", "description": "Daily recommended water intake based on weight based on weight", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}}, "required": ["weight"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the contacts of the tax payer."}, "acceptable_arguments": null}
{"serial_num": 260, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Please check the tax refund"}, {"role": "assistant", "content": "Please tell me the name of the tax paymenter, date of birth, and contact information."}, {"role": "user", "content": "Hong Gil -dong, born July 21, 1994"}], "input_tools": [{"type": "function", "function": {"name": "translate_text_to_english", "description": "Translate the given text into English", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Text translation in English"}}, "required": ["text"]}}}, {"type": "function", "function": {"name": "informLottoNumberByRound", "description": "It is a function that informs the lottery winning number of a specific episode.", "parameters": {"type": "object", "properties": {"round": {"type": "integer", "description": "The round to check the lottery winning number"}}, "required": ["round"]}}}, {"type": "function", "function": {"name": "CheckTaxRefund", "description": "Search for the user's tax refund.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "The name of the tax paymenter"}, "birth": {"type": "string", "description": "Date of birth of tax payers (YYYY-MM-DD)"}, "phone_number": {"type": "string", "description": "Contact of tax payers"}}, "required": ["name", "birth", "phone_number"]}}}, {"type": "function", "function": {"name": "getMonthlyBoxOfficeRanking", "description": "It offers a monthly box office ranking for the designated year and month.", "parameters": {"type": "object", "properties": {"year": {"type": "string", "description": "The year to look up (yyyy format)"}, "month": {"type": "string", "description": "Month to look up (MM format)"}}, "required": ["year", "month"]}}}, {"type": "function", "function": {"name": "calculateWaterIntakeRequirement", "description": "Daily recommended water intake based on weight based on weight", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}}, "required": ["weight"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the contacts of the tax payer."}, "acceptable_arguments": null}
{"serial_num": 261, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Please check the tax refund"}, {"role": "assistant", "content": "Please tell me the name of the tax paymenter, date of birth, and contact information."}, {"role": "user", "content": "Hong Gil-dong, phone number 010-1111-2222"}], "input_tools": [{"type": "function", "function": {"name": "translate_text_to_english", "description": "Translate the given text into English", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Text translation in English"}}, "required": ["text"]}}}, {"type": "function", "function": {"name": "informLottoNumberByRound", "description": "It is a function that informs the lottery winning number of a specific episode.", "parameters": {"type": "object", "properties": {"round": {"type": "integer", "description": "The round to check the lottery winning number"}}, "required": ["round"]}}}, {"type": "function", "function": {"name": "CheckTaxRefund", "description": "Search for the user's tax refund.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "The name of the tax paymenter"}, "birth": {"type": "string", "description": "Date of birth of tax payers (YYYY-MM-DD)"}, "phone_number": {"type": "string", "description": "Contact of tax payers"}}, "required": ["name", "birth", "phone_number"]}}}, {"type": "function", "function": {"name": "getMonthlyBoxOfficeRanking", "description": "It offers a monthly box office ranking for the designated year and month.", "parameters": {"type": "object", "properties": {"year": {"type": "string", "description": "The year to look up (yyyy format)"}, "month": {"type": "string", "description": "Month to look up (MM format)"}}, "required": ["year", "month"]}}}, {"type": "function", "function": {"name": "calculateWaterIntakeRequirement", "description": "Daily recommended water intake based on weight based on weight", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}}, "required": ["weight"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the date of birth."}, "acceptable_arguments": null}
{"serial_num": 262, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Please check the tax refund"}, {"role": "assistant", "content": "Please tell me the name of the tax paymenter, date of birth, and contact information."}, {"role": "user", "content": "Phone number 010-1111-2222, name Hong Gil-dong"}], "input_tools": [{"type": "function", "function": {"name": "translate_text_to_english", "description": "Translate the given text into English", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Text translation in English"}}, "required": ["text"]}}}, {"type": "function", "function": {"name": "informLottoNumberByRound", "description": "It is a function that informs the lottery winning number of a specific episode.", "parameters": {"type": "object", "properties": {"round": {"type": "integer", "description": "The round to check the lottery winning number"}}, "required": ["round"]}}}, {"type": "function", "function": {"name": "CheckTaxRefund", "description": "Search for the user's tax refund.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "The name of the tax paymenter"}, "birth": {"type": "string", "description": "Date of birth of tax payers (YYYY-MM-DD)"}, "phone_number": {"type": "string", "description": "Contact of tax payers"}}, "required": ["name", "birth", "phone_number"]}}}, {"type": "function", "function": {"name": "getMonthlyBoxOfficeRanking", "description": "It offers a monthly box office ranking for the designated year and month.", "parameters": {"type": "object", "properties": {"year": {"type": "string", "description": "The year to look up (yyyy format)"}, "month": {"type": "string", "description": "Month to look up (MM format)"}}, "required": ["year", "month"]}}}, {"type": "function", "function": {"name": "calculateWaterIntakeRequirement", "description": "Daily recommended water intake based on weight based on weight", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}}, "required": ["weight"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the date of birth."}, "acceptable_arguments": null}
{"serial_num": 263, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Please check the tax refund"}, {"role": "assistant", "content": "Please tell me the name of the tax paymenter, date of birth, and contact information."}, {"role": "user", "content": "Born on July 21, 1994, the phone number 010-1111-2222."}], "input_tools": [{"type": "function", "function": {"name": "translate_text_to_english", "description": "Translate the given text into English", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Text translation in English"}}, "required": ["text"]}}}, {"type": "function", "function": {"name": "informLottoNumberByRound", "description": "It is a function that informs the lottery winning number of a specific episode.", "parameters": {"type": "object", "properties": {"round": {"type": "integer", "description": "The round to check the lottery winning number"}}, "required": ["round"]}}}, {"type": "function", "function": {"name": "CheckTaxRefund", "description": "Search for the user's tax refund.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "The name of the tax paymenter"}, "birth": {"type": "string", "description": "Date of birth of tax payers (YYYY-MM-DD)"}, "phone_number": {"type": "string", "description": "Contact of tax payers"}}, "required": ["name", "birth", "phone_number"]}}}, {"type": "function", "function": {"name": "getMonthlyBoxOfficeRanking", "description": "It offers a monthly box office ranking for the designated year and month.", "parameters": {"type": "object", "properties": {"year": {"type": "string", "description": "The year to look up (yyyy format)"}, "month": {"type": "string", "description": "Month to look up (MM format)"}}, "required": ["year", "month"]}}}, {"type": "function", "function": {"name": "calculateWaterIntakeRequirement", "description": "Daily recommended water intake based on weight based on weight", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}}, "required": ["weight"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the name of the tax paymenter."}, "acceptable_arguments": null}
{"serial_num": 264, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Please check the tax refund"}, {"role": "assistant", "content": "Please tell me the name of the tax paymenter, date of birth, and contact information."}, {"role": "user", "content": "Phone number 010-1111-2222, born July 21, 1994"}], "input_tools": [{"type": "function", "function": {"name": "translate_text_to_english", "description": "Translate the given text into English", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Text translation in English"}}, "required": ["text"]}}}, {"type": "function", "function": {"name": "informLottoNumberByRound", "description": "It is a function that informs the lottery winning number of a specific episode.", "parameters": {"type": "object", "properties": {"round": {"type": "integer", "description": "The round to check the lottery winning number"}}, "required": ["round"]}}}, {"type": "function", "function": {"name": "CheckTaxRefund", "description": "Search for the user's tax refund.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "The name of the tax paymenter"}, "birth": {"type": "string", "description": "Date of birth of tax payers (YYYY-MM-DD)"}, "phone_number": {"type": "string", "description": "Contact of tax payers"}}, "required": ["name", "birth", "phone_number"]}}}, {"type": "function", "function": {"name": "getMonthlyBoxOfficeRanking", "description": "It offers a monthly box office ranking for the designated year and month.", "parameters": {"type": "object", "properties": {"year": {"type": "string", "description": "The year to look up (yyyy format)"}, "month": {"type": "string", "description": "Month to look up (MM format)"}}, "required": ["year", "month"]}}}, {"type": "function", "function": {"name": "calculateWaterIntakeRequirement", "description": "Daily recommended water intake based on weight based on weight", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}}, "required": ["weight"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the name of the tax paymenter."}, "acceptable_arguments": null}
{"serial_num": 265, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Please check Hong Gil -dong's tax refund"}, {"role": "assistant", "content": "Please tell me your date of birth, your date of birth."}, {"role": "user", "content": "Born on July 21, 1994"}], "input_tools": [{"type": "function", "function": {"name": "translate_text_to_english", "description": "Translate the given text into English", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Text translation in English"}}, "required": ["text"]}}}, {"type": "function", "function": {"name": "informLottoNumberByRound", "description": "It is a function that informs the lottery winning number of a specific episode.", "parameters": {"type": "object", "properties": {"round": {"type": "integer", "description": "The round to check the lottery winning number"}}, "required": ["round"]}}}, {"type": "function", "function": {"name": "CheckTaxRefund", "description": "Search for the user's tax refund.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "The name of the tax paymenter"}, "birth": {"type": "string", "description": "Date of birth of tax payers (YYYY-MM-DD)"}, "phone_number": {"type": "string", "description": "Contact of tax payers"}}, "required": ["name", "birth", "phone_number"]}}}, {"type": "function", "function": {"name": "getMonthlyBoxOfficeRanking", "description": "It offers a monthly box office ranking for the designated year and month.", "parameters": {"type": "object", "properties": {"year": {"type": "string", "description": "The year to look up (yyyy format)"}, "month": {"type": "string", "description": "Month to look up (MM format)"}}, "required": ["year", "month"]}}}, {"type": "function", "function": {"name": "calculateWaterIntakeRequirement", "description": "Daily recommended water intake based on weight based on weight", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}}, "required": ["weight"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the contacts."}, "acceptable_arguments": null}
{"serial_num": 266, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Please check the tax refund. Born on July 21, 1994."}, {"role": "assistant", "content": "Please tell me the name and contact information of the tax payer."}, {"role": "user", "content": "Name Hong Gil -dong"}], "input_tools": [{"type": "function", "function": {"name": "translate_text_to_english", "description": "Translate the given text into English", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Text translation in English"}}, "required": ["text"]}}}, {"type": "function", "function": {"name": "informLottoNumberByRound", "description": "It is a function that informs the lottery winning number of a specific episode.", "parameters": {"type": "object", "properties": {"round": {"type": "integer", "description": "The round to check the lottery winning number"}}, "required": ["round"]}}}, {"type": "function", "function": {"name": "CheckTaxRefund", "description": "Search for the user's tax refund.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "The name of the tax paymenter"}, "birth": {"type": "string", "description": "Date of birth of tax payers (YYYY-MM-DD)"}, "phone_number": {"type": "string", "description": "Contact of tax payers"}}, "required": ["name", "birth", "phone_number"]}}}, {"type": "function", "function": {"name": "getMonthlyBoxOfficeRanking", "description": "It offers a monthly box office ranking for the designated year and month.", "parameters": {"type": "object", "properties": {"year": {"type": "string", "description": "The year to look up (yyyy format)"}, "month": {"type": "string", "description": "Month to look up (MM format)"}}, "required": ["year", "month"]}}}, {"type": "function", "function": {"name": "calculateWaterIntakeRequirement", "description": "Daily recommended water intake based on weight based on weight", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}}, "required": ["weight"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the contacts."}, "acceptable_arguments": null}
{"serial_num": 267, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Please check Hong Gil -dong's tax refund"}, {"role": "assistant", "content": "Please tell me your date of birth, your date of birth."}, {"role": "user", "content": "Phone number 010-1111-2222"}], "input_tools": [{"type": "function", "function": {"name": "translate_text_to_english", "description": "Translate the given text into English", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Text translation in English"}}, "required": ["text"]}}}, {"type": "function", "function": {"name": "informLottoNumberByRound", "description": "It is a function that informs the lottery winning number of a specific episode.", "parameters": {"type": "object", "properties": {"round": {"type": "integer", "description": "The round to check the lottery winning number"}}, "required": ["round"]}}}, {"type": "function", "function": {"name": "CheckTaxRefund", "description": "Search for the user's tax refund.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "The name of the tax paymenter"}, "birth": {"type": "string", "description": "Date of birth of tax payers (YYYY-MM-DD)"}, "phone_number": {"type": "string", "description": "Contact of tax payers"}}, "required": ["name", "birth", "phone_number"]}}}, {"type": "function", "function": {"name": "getMonthlyBoxOfficeRanking", "description": "It offers a monthly box office ranking for the designated year and month.", "parameters": {"type": "object", "properties": {"year": {"type": "string", "description": "The year to look up (yyyy format)"}, "month": {"type": "string", "description": "Month to look up (MM format)"}}, "required": ["year", "month"]}}}, {"type": "function", "function": {"name": "calculateWaterIntakeRequirement", "description": "Daily recommended water intake based on weight based on weight", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}}, "required": ["weight"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the date of birth."}, "acceptable_arguments": null}
{"serial_num": 268, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Please check the tax refund. The phone number is 010-1111-2222."}, {"role": "assistant", "content": "Please tell us the name and date of birth of tax payers."}, {"role": "user", "content": "The name is Hong Gil -dong."}], "input_tools": [{"type": "function", "function": {"name": "translate_text_to_english", "description": "Translate the given text into English", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Text translation in English"}}, "required": ["text"]}}}, {"type": "function", "function": {"name": "informLottoNumberByRound", "description": "It is a function that informs the lottery winning number of a specific episode.", "parameters": {"type": "object", "properties": {"round": {"type": "integer", "description": "The round to check the lottery winning number"}}, "required": ["round"]}}}, {"type": "function", "function": {"name": "CheckTaxRefund", "description": "Search for the user's tax refund.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "The name of the tax paymenter"}, "birth": {"type": "string", "description": "Date of birth of tax payers (YYYY-MM-DD)"}, "phone_number": {"type": "string", "description": "Contact of tax payers"}}, "required": ["name", "birth", "phone_number"]}}}, {"type": "function", "function": {"name": "getMonthlyBoxOfficeRanking", "description": "It offers a monthly box office ranking for the designated year and month.", "parameters": {"type": "object", "properties": {"year": {"type": "string", "description": "The year to look up (yyyy format)"}, "month": {"type": "string", "description": "Month to look up (MM format)"}}, "required": ["year", "month"]}}}, {"type": "function", "function": {"name": "calculateWaterIntakeRequirement", "description": "Daily recommended water intake based on weight based on weight", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}}, "required": ["weight"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the date of birth."}, "acceptable_arguments": null}
{"serial_num": 269, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Please check the tax refund. Born on July 21, 1994."}, {"role": "assistant", "content": "Please tell me the name and contact information of the tax payer."}, {"role": "user", "content": "Phone number 010-1111-2222"}], "input_tools": [{"type": "function", "function": {"name": "translate_text_to_english", "description": "Translate the given text into English", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Text translation in English"}}, "required": ["text"]}}}, {"type": "function", "function": {"name": "informLottoNumberByRound", "description": "It is a function that informs the lottery winning number of a specific episode.", "parameters": {"type": "object", "properties": {"round": {"type": "integer", "description": "The round to check the lottery winning number"}}, "required": ["round"]}}}, {"type": "function", "function": {"name": "CheckTaxRefund", "description": "Search for the user's tax refund.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "The name of the tax paymenter"}, "birth": {"type": "string", "description": "Date of birth of tax payers (YYYY-MM-DD)"}, "phone_number": {"type": "string", "description": "Contact of tax payers"}}, "required": ["name", "birth", "phone_number"]}}}, {"type": "function", "function": {"name": "getMonthlyBoxOfficeRanking", "description": "It offers a monthly box office ranking for the designated year and month.", "parameters": {"type": "object", "properties": {"year": {"type": "string", "description": "The year to look up (yyyy format)"}, "month": {"type": "string", "description": "Month to look up (MM format)"}}, "required": ["year", "month"]}}}, {"type": "function", "function": {"name": "calculateWaterIntakeRequirement", "description": "Daily recommended water intake based on weight based on weight", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}}, "required": ["weight"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the name of the tax paymenter."}, "acceptable_arguments": null}
{"serial_num": 270, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Phone number 010-1111-2222 Check the tax refund."}, {"role": "assistant", "content": "Please tell us the name and date of birth of tax payers."}, {"role": "user", "content": "Born on July 21, 1994."}], "input_tools": [{"type": "function", "function": {"name": "translate_text_to_english", "description": "Translate the given text into English", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Text translation in English"}}, "required": ["text"]}}}, {"type": "function", "function": {"name": "informLottoNumberByRound", "description": "It is a function that informs the lottery winning number of a specific episode.", "parameters": {"type": "object", "properties": {"round": {"type": "integer", "description": "The round to check the lottery winning number"}}, "required": ["round"]}}}, {"type": "function", "function": {"name": "CheckTaxRefund", "description": "Search for the user's tax refund.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "The name of the tax paymenter"}, "birth": {"type": "string", "description": "Date of birth of tax payers (YYYY-MM-DD)"}, "phone_number": {"type": "string", "description": "Contact of tax payers"}}, "required": ["name", "birth", "phone_number"]}}}, {"type": "function", "function": {"name": "getMonthlyBoxOfficeRanking", "description": "It offers a monthly box office ranking for the designated year and month.", "parameters": {"type": "object", "properties": {"year": {"type": "string", "description": "The year to look up (yyyy format)"}, "month": {"type": "string", "description": "Month to look up (MM format)"}}, "required": ["year", "month"]}}}, {"type": "function", "function": {"name": "calculateWaterIntakeRequirement", "description": "Daily recommended water intake based on weight based on weight", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}}, "required": ["weight"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the name of the tax paymenter."}, "acceptable_arguments": null}
{"serial_num": 271, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Please check the tax refund"}, {"role": "assistant", "content": "Please tell me the name of the tax paymenter, date of birth, and contact information."}, {"role": "user", "content": "Please check Hong Gil -dong's tax refund"}, {"role": "assistant", "content": "Please tell me your date of birth, your date of birth."}, {"role": "user", "content": "Born on July 21, 1994"}], "input_tools": [{"type": "function", "function": {"name": "translate_text_to_english", "description": "Translate the given text into English", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Text translation in English"}}, "required": ["text"]}}}, {"type": "function", "function": {"name": "informLottoNumberByRound", "description": "It is a function that informs the lottery winning number of a specific episode.", "parameters": {"type": "object", "properties": {"round": {"type": "integer", "description": "The round to check the lottery winning number"}}, "required": ["round"]}}}, {"type": "function", "function": {"name": "CheckTaxRefund", "description": "Search for the user's tax refund.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "The name of the tax paymenter"}, "birth": {"type": "string", "description": "Date of birth of tax payers (YYYY-MM-DD)"}, "phone_number": {"type": "string", "description": "Contact of tax payers"}}, "required": ["name", "birth", "phone_number"]}}}, {"type": "function", "function": {"name": "getMonthlyBoxOfficeRanking", "description": "It offers a monthly box office ranking for the designated year and month.", "parameters": {"type": "object", "properties": {"year": {"type": "string", "description": "The year to look up (yyyy format)"}, "month": {"type": "string", "description": "Month to look up (MM format)"}}, "required": ["year", "month"]}}}, {"type": "function", "function": {"name": "calculateWaterIntakeRequirement", "description": "Daily recommended water intake based on weight based on weight", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}}, "required": ["weight"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the contacts."}, "acceptable_arguments": null}
{"serial_num": 272, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Please check the tax refund"}, {"role": "assistant", "content": "Please tell me the name of the tax paymenter, date of birth, and contact information."}, {"role": "user", "content": "Born on July 21, 1994."}, {"role": "assistant", "content": "Please tell me the name and contact information of the tax payer."}, {"role": "user", "content": "Name Hong Gil -dong"}], "input_tools": [{"type": "function", "function": {"name": "translate_text_to_english", "description": "Translate the given text into English", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Text translation in English"}}, "required": ["text"]}}}, {"type": "function", "function": {"name": "informLottoNumberByRound", "description": "It is a function that informs the lottery winning number of a specific episode.", "parameters": {"type": "object", "properties": {"round": {"type": "integer", "description": "The round to check the lottery winning number"}}, "required": ["round"]}}}, {"type": "function", "function": {"name": "CheckTaxRefund", "description": "Search for the user's tax refund.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "The name of the tax paymenter"}, "birth": {"type": "string", "description": "Date of birth of tax payers (YYYY-MM-DD)"}, "phone_number": {"type": "string", "description": "Contact of tax payers"}}, "required": ["name", "birth", "phone_number"]}}}, {"type": "function", "function": {"name": "getMonthlyBoxOfficeRanking", "description": "It offers a monthly box office ranking for the designated year and month.", "parameters": {"type": "object", "properties": {"year": {"type": "string", "description": "The year to look up (yyyy format)"}, "month": {"type": "string", "description": "Month to look up (MM format)"}}, "required": ["year", "month"]}}}, {"type": "function", "function": {"name": "calculateWaterIntakeRequirement", "description": "Daily recommended water intake based on weight based on weight", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}}, "required": ["weight"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the contacts."}, "acceptable_arguments": null}
{"serial_num": 273, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Please check the tax refund"}, {"role": "assistant", "content": "Please tell me the name of the tax paymenter, date of birth, and contact information."}, {"role": "user", "content": "Please check Hong Gil -dong's tax refund"}, {"role": "assistant", "content": "Please tell me your date of birth, your date of birth."}, {"role": "user", "content": "Phone number 010-1111-2222"}], "input_tools": [{"type": "function", "function": {"name": "translate_text_to_english", "description": "Translate the given text into English", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Text translation in English"}}, "required": ["text"]}}}, {"type": "function", "function": {"name": "informLottoNumberByRound", "description": "It is a function that informs the lottery winning number of a specific episode.", "parameters": {"type": "object", "properties": {"round": {"type": "integer", "description": "The round to check the lottery winning number"}}, "required": ["round"]}}}, {"type": "function", "function": {"name": "CheckTaxRefund", "description": "Search for the user's tax refund.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "The name of the tax paymenter"}, "birth": {"type": "string", "description": "Date of birth of tax payers (YYYY-MM-DD)"}, "phone_number": {"type": "string", "description": "Contact of tax payers"}}, "required": ["name", "birth", "phone_number"]}}}, {"type": "function", "function": {"name": "getMonthlyBoxOfficeRanking", "description": "It offers a monthly box office ranking for the designated year and month.", "parameters": {"type": "object", "properties": {"year": {"type": "string", "description": "The year to look up (yyyy format)"}, "month": {"type": "string", "description": "Month to look up (MM format)"}}, "required": ["year", "month"]}}}, {"type": "function", "function": {"name": "calculateWaterIntakeRequirement", "description": "Daily recommended water intake based on weight based on weight", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}}, "required": ["weight"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the date of birth."}, "acceptable_arguments": null}
{"serial_num": 274, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Please check the tax refund"}, {"role": "assistant", "content": "Please tell me the name of the tax paymenter, date of birth, and contact information."}, {"role": "user", "content": "The phone number is 010-1111-2222."}, {"role": "assistant", "content": "Please tell us the name and date of birth of tax payers."}, {"role": "user", "content": "The name is Hong Gil -dong."}], "input_tools": [{"type": "function", "function": {"name": "translate_text_to_english", "description": "Translate the given text into English", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Text translation in English"}}, "required": ["text"]}}}, {"type": "function", "function": {"name": "informLottoNumberByRound", "description": "It is a function that informs the lottery winning number of a specific episode.", "parameters": {"type": "object", "properties": {"round": {"type": "integer", "description": "The round to check the lottery winning number"}}, "required": ["round"]}}}, {"type": "function", "function": {"name": "CheckTaxRefund", "description": "Search for the user's tax refund.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "The name of the tax paymenter"}, "birth": {"type": "string", "description": "Date of birth of tax payers (YYYY-MM-DD)"}, "phone_number": {"type": "string", "description": "Contact of tax payers"}}, "required": ["name", "birth", "phone_number"]}}}, {"type": "function", "function": {"name": "getMonthlyBoxOfficeRanking", "description": "It offers a monthly box office ranking for the designated year and month.", "parameters": {"type": "object", "properties": {"year": {"type": "string", "description": "The year to look up (yyyy format)"}, "month": {"type": "string", "description": "Month to look up (MM format)"}}, "required": ["year", "month"]}}}, {"type": "function", "function": {"name": "calculateWaterIntakeRequirement", "description": "Daily recommended water intake based on weight based on weight", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}}, "required": ["weight"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the date of birth."}, "acceptable_arguments": null}
{"serial_num": 275, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Please check the tax refund"}, {"role": "assistant", "content": "Please tell me the name of the tax paymenter, date of birth, and contact information."}, {"role": "user", "content": "Born on July 21, 1994."}, {"role": "assistant", "content": "Please tell me the name and contact information of the tax payer."}, {"role": "user", "content": "Phone number 010-1111-2222"}], "input_tools": [{"type": "function", "function": {"name": "translate_text_to_english", "description": "Translate the given text into English", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Text translation in English"}}, "required": ["text"]}}}, {"type": "function", "function": {"name": "informLottoNumberByRound", "description": "It is a function that informs the lottery winning number of a specific episode.", "parameters": {"type": "object", "properties": {"round": {"type": "integer", "description": "The round to check the lottery winning number"}}, "required": ["round"]}}}, {"type": "function", "function": {"name": "CheckTaxRefund", "description": "Search for the user's tax refund.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "The name of the tax paymenter"}, "birth": {"type": "string", "description": "Date of birth of tax payers (YYYY-MM-DD)"}, "phone_number": {"type": "string", "description": "Contact of tax payers"}}, "required": ["name", "birth", "phone_number"]}}}, {"type": "function", "function": {"name": "getMonthlyBoxOfficeRanking", "description": "It offers a monthly box office ranking for the designated year and month.", "parameters": {"type": "object", "properties": {"year": {"type": "string", "description": "The year to look up (yyyy format)"}, "month": {"type": "string", "description": "Month to look up (MM format)"}}, "required": ["year", "month"]}}}, {"type": "function", "function": {"name": "calculateWaterIntakeRequirement", "description": "Daily recommended water intake based on weight based on weight", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}}, "required": ["weight"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the name of the tax paymenter."}, "acceptable_arguments": null}
{"serial_num": 276, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "Please check the tax refund"}, {"role": "assistant", "content": "Please tell me the name of the tax paymenter, date of birth, and contact information."}, {"role": "user", "content": "Phone number 010-1111-2222 Check the tax refund."}, {"role": "assistant", "content": "Please tell us the name and date of birth of tax payers."}, {"role": "user", "content": "Born on July 21, 1994."}], "input_tools": [{"type": "function", "function": {"name": "translate_text_to_english", "description": "Translate the given text into English", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Text translation in English"}}, "required": ["text"]}}}, {"type": "function", "function": {"name": "informLottoNumberByRound", "description": "It is a function that informs the lottery winning number of a specific episode.", "parameters": {"type": "object", "properties": {"round": {"type": "integer", "description": "The round to check the lottery winning number"}}, "required": ["round"]}}}, {"type": "function", "function": {"name": "CheckTaxRefund", "description": "Search for the user's tax refund.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "The name of the tax paymenter"}, "birth": {"type": "string", "description": "Date of birth of tax payers (YYYY-MM-DD)"}, "phone_number": {"type": "string", "description": "Contact of tax payers"}}, "required": ["name", "birth", "phone_number"]}}}, {"type": "function", "function": {"name": "getMonthlyBoxOfficeRanking", "description": "It offers a monthly box office ranking for the designated year and month.", "parameters": {"type": "object", "properties": {"year": {"type": "string", "description": "The year to look up (yyyy format)"}, "month": {"type": "string", "description": "Month to look up (MM format)"}}, "required": ["year", "month"]}}}, {"type": "function", "function": {"name": "calculateWaterIntakeRequirement", "description": "Daily recommended water intake based on weight based on weight", "parameters": {"type": "object", "properties": {"weight": {"type": "number", "description": "Kilogram unit weight"}}, "required": ["weight"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the name of the tax paymenter."}, "acceptable_arguments": null}
{"serial_num": 277, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "I would like to apply for a laundry collection service to Pangyo office?"}], "input_tools": [{"type": "function", "function": {"name": "discover_new_releases_kpop", "description": "Provides the latest music release information of the K -pop genre", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "recommendLottoNumber", "description": "It is a function that recommends a lotto number randomly.", "parameters": {"type": "object", "properties": {}, "required": []}}}, {"type": "function", "function": {"name": "schedule_laundry_pickup", "description": "Apply for a service to collect laundry.", "parameters": {"type": "object", "properties": {"pickup_location": {"type": "string", "description": "Extract the location of the user as it is to collect the laundry. (Example: House, 101 -dong 102, etc."}, "pickup_date": {"type": "string", "description": "Extract the laundry collection date as it is. (Example: next Monday, January 1, 2022, etc.)"}, "pickup_time": {"type": "string", "description": "Extract the time to collect the laundry as it is. (Example: 2 pm, 7 pm, etc.)"}}, "required": ["pickup_location", "pickup_date", "pickup_time"]}}}, {"type": "function", "function": {"name": "check_traffic_status", "description": "Inquire the current traffic situation on a particular path.", "parameters": {"type": "object", "properties": {"start_location": {"type": "string", "description": "Departure"}, "end_location": {"type": "string", "description": "Arrival point"}}, "required": ["start_location", "end_location"]}}}, {"type": "function", "function": {"name": "count_lowercase_letters", "description": "The number of lowercase in the string", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Cell string for lowercase"}}, "required": ["text"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the date and time to collect laundry."}, "acceptable_arguments": null}
{"serial_num": 278, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "I want to apply for a laundry collection service. Is it possible this Sunday?"}], "input_tools": [{"type": "function", "function": {"name": "discover_new_releases_kpop", "description": "Provides the latest music release information of the K -pop genre", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "recommendLottoNumber", "description": "It is a function that recommends a lotto number randomly.", "parameters": {"type": "object", "properties": {}, "required": []}}}, {"type": "function", "function": {"name": "schedule_laundry_pickup", "description": "Apply for a service to collect laundry.", "parameters": {"type": "object", "properties": {"pickup_location": {"type": "string", "description": "Extract the location of the user as it is to collect the laundry. (Example: House, 101 -dong 102, etc."}, "pickup_date": {"type": "string", "description": "Extract the laundry collection date as it is. (Example: next Monday, January 1, 2022, etc.)"}, "pickup_time": {"type": "string", "description": "Extract the time to collect the laundry as it is. (Example: 2 pm, 7 pm, etc.)"}}, "required": ["pickup_location", "pickup_date", "pickup_time"]}}}, {"type": "function", "function": {"name": "check_traffic_status", "description": "Inquire the current traffic situation on a particular path.", "parameters": {"type": "object", "properties": {"start_location": {"type": "string", "description": "Departure"}, "end_location": {"type": "string", "description": "Arrival point"}}, "required": ["start_location", "end_location"]}}}, {"type": "function", "function": {"name": "count_lowercase_letters", "description": "The number of lowercase in the string", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Cell string for lowercase"}}, "required": ["text"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell us the location and time to collect the laundry."}, "acceptable_arguments": null}
{"serial_num": 279, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "I want to apply for a laundry collection service."}], "input_tools": [{"type": "function", "function": {"name": "discover_new_releases_kpop", "description": "Provides the latest music release information of the K -pop genre", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "recommendLottoNumber", "description": "It is a function that recommends a lotto number randomly.", "parameters": {"type": "object", "properties": {}, "required": []}}}, {"type": "function", "function": {"name": "schedule_laundry_pickup", "description": "Apply for a service to collect laundry.", "parameters": {"type": "object", "properties": {"pickup_location": {"type": "string", "description": "Extract the location of the user as it is to collect the laundry. (Example: House, 101 -dong 102, etc."}, "pickup_date": {"type": "string", "description": "Extract the laundry collection date as it is. (Example: next Monday, January 1, 2022, etc.)"}, "pickup_time": {"type": "string", "description": "Extract the time to collect the laundry as it is. (Example: 2 pm, 7 pm, etc.)"}}, "required": ["pickup_location", "pickup_date", "pickup_time"]}}}, {"type": "function", "function": {"name": "check_traffic_status", "description": "Inquire the current traffic situation on a particular path.", "parameters": {"type": "object", "properties": {"start_location": {"type": "string", "description": "Departure"}, "end_location": {"type": "string", "description": "Arrival point"}}, "required": ["start_location", "end_location"]}}}, {"type": "function", "function": {"name": "count_lowercase_letters", "description": "The number of lowercase in the string", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Cell string for lowercase"}}, "required": ["text"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the location and date to collect the laundry."}, "acceptable_arguments": null}
{"serial_num": 280, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "I want to apply for a laundry collection service."}, {"role": "assistant", "content": "Please tell us the location, date and time to collect laundry."}, {"role": "user", "content": "The location is in Pangyo office"}], "input_tools": [{"type": "function", "function": {"name": "discover_new_releases_kpop", "description": "Provides the latest music release information of the K -pop genre", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "recommendLottoNumber", "description": "It is a function that recommends a lotto number randomly.", "parameters": {"type": "object", "properties": {}, "required": []}}}, {"type": "function", "function": {"name": "schedule_laundry_pickup", "description": "Apply for a service to collect laundry.", "parameters": {"type": "object", "properties": {"pickup_location": {"type": "string", "description": "Extract the location of the user as it is to collect the laundry. (Example: House, 101 -dong 102, etc."}, "pickup_date": {"type": "string", "description": "Extract the laundry collection date as it is. (Example: next Monday, January 1, 2022, etc.)"}, "pickup_time": {"type": "string", "description": "Extract the time to collect the laundry as it is. (Example: 2 pm, 7 pm, etc.)"}}, "required": ["pickup_location", "pickup_date", "pickup_time"]}}}, {"type": "function", "function": {"name": "check_traffic_status", "description": "Inquire the current traffic situation on a particular path.", "parameters": {"type": "object", "properties": {"start_location": {"type": "string", "description": "Departure"}, "end_location": {"type": "string", "description": "Arrival point"}}, "required": ["start_location", "end_location"]}}}, {"type": "function", "function": {"name": "count_lowercase_letters", "description": "The number of lowercase in the string", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Cell string for lowercase"}}, "required": ["text"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the date and time to collect laundry."}, "acceptable_arguments": null}
{"serial_num": 281, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "I want to apply for a laundry collection service."}, {"role": "assistant", "content": "Please tell us the location, date and time to collect laundry."}, {"role": "user", "content": "This Sunday is"}], "input_tools": [{"type": "function", "function": {"name": "discover_new_releases_kpop", "description": "Provides the latest music release information of the K -pop genre", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "recommendLottoNumber", "description": "It is a function that recommends a lotto number randomly.", "parameters": {"type": "object", "properties": {}, "required": []}}}, {"type": "function", "function": {"name": "schedule_laundry_pickup", "description": "Apply for a service to collect laundry.", "parameters": {"type": "object", "properties": {"pickup_location": {"type": "string", "description": "Extract the location of the user as it is to collect the laundry. (Example: House, 101 -dong 102, etc."}, "pickup_date": {"type": "string", "description": "Extract the laundry collection date as it is. (Example: next Monday, January 1, 2022, etc.)"}, "pickup_time": {"type": "string", "description": "Extract the time to collect the laundry as it is. (Example: 2 pm, 7 pm, etc.)"}}, "required": ["pickup_location", "pickup_date", "pickup_time"]}}}, {"type": "function", "function": {"name": "check_traffic_status", "description": "Inquire the current traffic situation on a particular path.", "parameters": {"type": "object", "properties": {"start_location": {"type": "string", "description": "Departure"}, "end_location": {"type": "string", "description": "Arrival point"}}, "required": ["start_location", "end_location"]}}}, {"type": "function", "function": {"name": "count_lowercase_letters", "description": "The number of lowercase in the string", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Cell string for lowercase"}}, "required": ["text"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell us the location and time to collect the laundry."}, "acceptable_arguments": null}
{"serial_num": 282, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "I want to apply for a laundry collection service."}, {"role": "assistant", "content": "Please tell us the location, date and time to collect laundry."}, {"role": "user", "content": "Time is 8 o'clock in the morning"}], "input_tools": [{"type": "function", "function": {"name": "discover_new_releases_kpop", "description": "Provides the latest music release information of the K -pop genre", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "recommendLottoNumber", "description": "It is a function that recommends a lotto number randomly.", "parameters": {"type": "object", "properties": {}, "required": []}}}, {"type": "function", "function": {"name": "schedule_laundry_pickup", "description": "Apply for a service to collect laundry.", "parameters": {"type": "object", "properties": {"pickup_location": {"type": "string", "description": "Extract the location of the user as it is to collect the laundry. (Example: House, 101 -dong 102, etc."}, "pickup_date": {"type": "string", "description": "Extract the laundry collection date as it is. (Example: next Monday, January 1, 2022, etc.)"}, "pickup_time": {"type": "string", "description": "Extract the time to collect the laundry as it is. (Example: 2 pm, 7 pm, etc.)"}}, "required": ["pickup_location", "pickup_date", "pickup_time"]}}}, {"type": "function", "function": {"name": "check_traffic_status", "description": "Inquire the current traffic situation on a particular path.", "parameters": {"type": "object", "properties": {"start_location": {"type": "string", "description": "Departure"}, "end_location": {"type": "string", "description": "Arrival point"}}, "required": ["start_location", "end_location"]}}}, {"type": "function", "function": {"name": "count_lowercase_letters", "description": "The number of lowercase in the string", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Cell string for lowercase"}}, "required": ["text"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the location and date to collect the laundry."}, "acceptable_arguments": null}
{"serial_num": 283, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "I would like to apply for a laundry collection service this Sunday as a Pangyo office."}], "input_tools": [{"type": "function", "function": {"name": "discover_new_releases_kpop", "description": "Provides the latest music release information of the K -pop genre", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "recommendLottoNumber", "description": "It is a function that recommends a lotto number randomly.", "parameters": {"type": "object", "properties": {}, "required": []}}}, {"type": "function", "function": {"name": "schedule_laundry_pickup", "description": "Apply for a service to collect laundry.", "parameters": {"type": "object", "properties": {"pickup_location": {"type": "string", "description": "Extract the location of the user as it is to collect the laundry. (Example: House, 101 -dong 102, etc."}, "pickup_date": {"type": "string", "description": "Extract the laundry collection date as it is. (Example: next Monday, January 1, 2022, etc.)"}, "pickup_time": {"type": "string", "description": "Extract the time to collect the laundry as it is. (Example: 2 pm, 7 pm, etc.)"}}, "required": ["pickup_location", "pickup_date", "pickup_time"]}}}, {"type": "function", "function": {"name": "check_traffic_status", "description": "Inquire the current traffic situation on a particular path.", "parameters": {"type": "object", "properties": {"start_location": {"type": "string", "description": "Departure"}, "end_location": {"type": "string", "description": "Arrival point"}}, "required": ["start_location", "end_location"]}}}, {"type": "function", "function": {"name": "count_lowercase_letters", "description": "The number of lowercase in the string", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Cell string for lowercase"}}, "required": ["text"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the time to collect the laundry."}, "acceptable_arguments": null}
{"serial_num": 284, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "I would like to apply for a laundry collection service to Pangyo office this Sunday?"}], "input_tools": [{"type": "function", "function": {"name": "discover_new_releases_kpop", "description": "Provides the latest music release information of the K -pop genre", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "recommendLottoNumber", "description": "It is a function that recommends a lotto number randomly.", "parameters": {"type": "object", "properties": {}, "required": []}}}, {"type": "function", "function": {"name": "schedule_laundry_pickup", "description": "Apply for a service to collect laundry.", "parameters": {"type": "object", "properties": {"pickup_location": {"type": "string", "description": "Extract the location of the user as it is to collect the laundry. (Example: House, 101 -dong 102, etc."}, "pickup_date": {"type": "string", "description": "Extract the laundry collection date as it is. (Example: next Monday, January 1, 2022, etc.)"}, "pickup_time": {"type": "string", "description": "Extract the time to collect the laundry as it is. (Example: 2 pm, 7 pm, etc.)"}}, "required": ["pickup_location", "pickup_date", "pickup_time"]}}}, {"type": "function", "function": {"name": "check_traffic_status", "description": "Inquire the current traffic situation on a particular path.", "parameters": {"type": "object", "properties": {"start_location": {"type": "string", "description": "Departure"}, "end_location": {"type": "string", "description": "Arrival point"}}, "required": ["start_location", "end_location"]}}}, {"type": "function", "function": {"name": "count_lowercase_letters", "description": "The number of lowercase in the string", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Cell string for lowercase"}}, "required": ["text"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the time to collect the laundry."}, "acceptable_arguments": null}
{"serial_num": 285, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "I would like to apply for a laundry collection service at 8 am in Pangyo office?"}], "input_tools": [{"type": "function", "function": {"name": "discover_new_releases_kpop", "description": "Provides the latest music release information of the K -pop genre", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "recommendLottoNumber", "description": "It is a function that recommends a lotto number randomly.", "parameters": {"type": "object", "properties": {}, "required": []}}}, {"type": "function", "function": {"name": "schedule_laundry_pickup", "description": "Apply for a service to collect laundry.", "parameters": {"type": "object", "properties": {"pickup_location": {"type": "string", "description": "Extract the location of the user as it is to collect the laundry. (Example: House, 101 -dong 102, etc."}, "pickup_date": {"type": "string", "description": "Extract the laundry collection date as it is. (Example: next Monday, January 1, 2022, etc.)"}, "pickup_time": {"type": "string", "description": "Extract the time to collect the laundry as it is. (Example: 2 pm, 7 pm, etc.)"}}, "required": ["pickup_location", "pickup_date", "pickup_time"]}}}, {"type": "function", "function": {"name": "check_traffic_status", "description": "Inquire the current traffic situation on a particular path.", "parameters": {"type": "object", "properties": {"start_location": {"type": "string", "description": "Departure"}, "end_location": {"type": "string", "description": "Arrival point"}}, "required": ["start_location", "end_location"]}}}, {"type": "function", "function": {"name": "count_lowercase_letters", "description": "The number of lowercase in the string", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Cell string for lowercase"}}, "required": ["text"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the date to collect the laundry."}, "acceptable_arguments": null}
{"serial_num": 286, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "I want to apply for a laundry collection service at 8 am? To Pangyo Office"}], "input_tools": [{"type": "function", "function": {"name": "discover_new_releases_kpop", "description": "Provides the latest music release information of the K -pop genre", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "recommendLottoNumber", "description": "It is a function that recommends a lotto number randomly.", "parameters": {"type": "object", "properties": {}, "required": []}}}, {"type": "function", "function": {"name": "schedule_laundry_pickup", "description": "Apply for a service to collect laundry.", "parameters": {"type": "object", "properties": {"pickup_location": {"type": "string", "description": "Extract the location of the user as it is to collect the laundry. (Example: House, 101 -dong 102, etc."}, "pickup_date": {"type": "string", "description": "Extract the laundry collection date as it is. (Example: next Monday, January 1, 2022, etc.)"}, "pickup_time": {"type": "string", "description": "Extract the time to collect the laundry as it is. (Example: 2 pm, 7 pm, etc.)"}}, "required": ["pickup_location", "pickup_date", "pickup_time"]}}}, {"type": "function", "function": {"name": "check_traffic_status", "description": "Inquire the current traffic situation on a particular path.", "parameters": {"type": "object", "properties": {"start_location": {"type": "string", "description": "Departure"}, "end_location": {"type": "string", "description": "Arrival point"}}, "required": ["start_location", "end_location"]}}}, {"type": "function", "function": {"name": "count_lowercase_letters", "description": "The number of lowercase in the string", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Cell string for lowercase"}}, "required": ["text"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the date to collect the laundry."}, "acceptable_arguments": null}
{"serial_num": 287, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "I want to apply for a laundry collection service."}], "input_tools": [{"type": "function", "function": {"name": "discover_new_releases_kpop", "description": "Provides the latest music release information of the K -pop genre", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "recommendLottoNumber", "description": "It is a function that recommends a lotto number randomly.", "parameters": {"type": "object", "properties": {}, "required": []}}}, {"type": "function", "function": {"name": "schedule_laundry_pickup", "description": "Apply for a service to collect laundry.", "parameters": {"type": "object", "properties": {"pickup_location": {"type": "string", "description": "Extract the location of the user as it is to collect the laundry. (Example: House, 101 -dong 102, etc."}, "pickup_date": {"type": "string", "description": "Extract the laundry collection date as it is. (Example: next Monday, January 1, 2022, etc.)"}, "pickup_time": {"type": "string", "description": "Extract the time to collect the laundry as it is. (Example: 2 pm, 7 pm, etc.)"}}, "required": ["pickup_location", "pickup_date", "pickup_time"]}}}, {"type": "function", "function": {"name": "check_traffic_status", "description": "Inquire the current traffic situation on a particular path.", "parameters": {"type": "object", "properties": {"start_location": {"type": "string", "description": "Departure"}, "end_location": {"type": "string", "description": "Arrival point"}}, "required": ["start_location", "end_location"]}}}, {"type": "function", "function": {"name": "count_lowercase_letters", "description": "The number of lowercase in the string", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Cell string for lowercase"}}, "required": ["text"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me where to collect the laundry."}, "acceptable_arguments": null}
{"serial_num": 288, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "I would like to apply for a laundry collection service at 8 am."}], "input_tools": [{"type": "function", "function": {"name": "discover_new_releases_kpop", "description": "Provides the latest music release information of the K -pop genre", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "recommendLottoNumber", "description": "It is a function that recommends a lotto number randomly.", "parameters": {"type": "object", "properties": {}, "required": []}}}, {"type": "function", "function": {"name": "schedule_laundry_pickup", "description": "Apply for a service to collect laundry.", "parameters": {"type": "object", "properties": {"pickup_location": {"type": "string", "description": "Extract the location of the user as it is to collect the laundry. (Example: House, 101 -dong 102, etc."}, "pickup_date": {"type": "string", "description": "Extract the laundry collection date as it is. (Example: next Monday, January 1, 2022, etc.)"}, "pickup_time": {"type": "string", "description": "Extract the time to collect the laundry as it is. (Example: 2 pm, 7 pm, etc.)"}}, "required": ["pickup_location", "pickup_date", "pickup_time"]}}}, {"type": "function", "function": {"name": "check_traffic_status", "description": "Inquire the current traffic situation on a particular path.", "parameters": {"type": "object", "properties": {"start_location": {"type": "string", "description": "Departure"}, "end_location": {"type": "string", "description": "Arrival point"}}, "required": ["start_location", "end_location"]}}}, {"type": "function", "function": {"name": "count_lowercase_letters", "description": "The number of lowercase in the string", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Cell string for lowercase"}}, "required": ["text"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me where to collect the laundry."}, "acceptable_arguments": null}
{"serial_num": 289, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "I want to apply for a laundry collection service."}, {"role": "assistant", "content": "Please tell us the location, date and time to collect laundry."}, {"role": "user", "content": "This Sunday as a Pangyo office"}], "input_tools": [{"type": "function", "function": {"name": "discover_new_releases_kpop", "description": "Provides the latest music release information of the K -pop genre", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "recommendLottoNumber", "description": "It is a function that recommends a lotto number randomly.", "parameters": {"type": "object", "properties": {}, "required": []}}}, {"type": "function", "function": {"name": "schedule_laundry_pickup", "description": "Apply for a service to collect laundry.", "parameters": {"type": "object", "properties": {"pickup_location": {"type": "string", "description": "Extract the location of the user as it is to collect the laundry. (Example: House, 101 -dong 102, etc."}, "pickup_date": {"type": "string", "description": "Extract the laundry collection date as it is. (Example: next Monday, January 1, 2022, etc.)"}, "pickup_time": {"type": "string", "description": "Extract the time to collect the laundry as it is. (Example: 2 pm, 7 pm, etc.)"}}, "required": ["pickup_location", "pickup_date", "pickup_time"]}}}, {"type": "function", "function": {"name": "check_traffic_status", "description": "Inquire the current traffic situation on a particular path.", "parameters": {"type": "object", "properties": {"start_location": {"type": "string", "description": "Departure"}, "end_location": {"type": "string", "description": "Arrival point"}}, "required": ["start_location", "end_location"]}}}, {"type": "function", "function": {"name": "count_lowercase_letters", "description": "The number of lowercase in the string", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Cell string for lowercase"}}, "required": ["text"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the time to collect the laundry."}, "acceptable_arguments": null}
{"serial_num": 290, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "I want to apply for a laundry collection service."}, {"role": "assistant", "content": "Please tell us the location, date and time to collect laundry."}, {"role": "user", "content": "This Sunday to Pangyo Office"}], "input_tools": [{"type": "function", "function": {"name": "discover_new_releases_kpop", "description": "Provides the latest music release information of the K -pop genre", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "recommendLottoNumber", "description": "It is a function that recommends a lotto number randomly.", "parameters": {"type": "object", "properties": {}, "required": []}}}, {"type": "function", "function": {"name": "schedule_laundry_pickup", "description": "Apply for a service to collect laundry.", "parameters": {"type": "object", "properties": {"pickup_location": {"type": "string", "description": "Extract the location of the user as it is to collect the laundry. (Example: House, 101 -dong 102, etc."}, "pickup_date": {"type": "string", "description": "Extract the laundry collection date as it is. (Example: next Monday, January 1, 2022, etc.)"}, "pickup_time": {"type": "string", "description": "Extract the time to collect the laundry as it is. (Example: 2 pm, 7 pm, etc.)"}}, "required": ["pickup_location", "pickup_date", "pickup_time"]}}}, {"type": "function", "function": {"name": "check_traffic_status", "description": "Inquire the current traffic situation on a particular path.", "parameters": {"type": "object", "properties": {"start_location": {"type": "string", "description": "Departure"}, "end_location": {"type": "string", "description": "Arrival point"}}, "required": ["start_location", "end_location"]}}}, {"type": "function", "function": {"name": "count_lowercase_letters", "description": "The number of lowercase in the string", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Cell string for lowercase"}}, "required": ["text"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the time to collect the laundry."}, "acceptable_arguments": null}
{"serial_num": 291, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "I want to apply for a laundry collection service."}, {"role": "assistant", "content": "Please tell us the location, date and time to collect laundry."}, {"role": "user", "content": "It is 8:00 in the morning as a Pangyo office."}], "input_tools": [{"type": "function", "function": {"name": "discover_new_releases_kpop", "description": "Provides the latest music release information of the K -pop genre", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "recommendLottoNumber", "description": "It is a function that recommends a lotto number randomly.", "parameters": {"type": "object", "properties": {}, "required": []}}}, {"type": "function", "function": {"name": "schedule_laundry_pickup", "description": "Apply for a service to collect laundry.", "parameters": {"type": "object", "properties": {"pickup_location": {"type": "string", "description": "Extract the location of the user as it is to collect the laundry. (Example: House, 101 -dong 102, etc."}, "pickup_date": {"type": "string", "description": "Extract the laundry collection date as it is. (Example: next Monday, January 1, 2022, etc.)"}, "pickup_time": {"type": "string", "description": "Extract the time to collect the laundry as it is. (Example: 2 pm, 7 pm, etc.)"}}, "required": ["pickup_location", "pickup_date", "pickup_time"]}}}, {"type": "function", "function": {"name": "check_traffic_status", "description": "Inquire the current traffic situation on a particular path.", "parameters": {"type": "object", "properties": {"start_location": {"type": "string", "description": "Departure"}, "end_location": {"type": "string", "description": "Arrival point"}}, "required": ["start_location", "end_location"]}}}, {"type": "function", "function": {"name": "count_lowercase_letters", "description": "The number of lowercase in the string", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Cell string for lowercase"}}, "required": ["text"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the date to collect the laundry."}, "acceptable_arguments": null}
{"serial_num": 292, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "I want to apply for a laundry collection service."}, {"role": "assistant", "content": "Please tell us the location, date and time to collect laundry."}, {"role": "user", "content": "At 8 o'clock in the Pangyo office,"}], "input_tools": [{"type": "function", "function": {"name": "discover_new_releases_kpop", "description": "Provides the latest music release information of the K -pop genre", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "recommendLottoNumber", "description": "It is a function that recommends a lotto number randomly.", "parameters": {"type": "object", "properties": {}, "required": []}}}, {"type": "function", "function": {"name": "schedule_laundry_pickup", "description": "Apply for a service to collect laundry.", "parameters": {"type": "object", "properties": {"pickup_location": {"type": "string", "description": "Extract the location of the user as it is to collect the laundry. (Example: House, 101 -dong 102, etc."}, "pickup_date": {"type": "string", "description": "Extract the laundry collection date as it is. (Example: next Monday, January 1, 2022, etc.)"}, "pickup_time": {"type": "string", "description": "Extract the time to collect the laundry as it is. (Example: 2 pm, 7 pm, etc.)"}}, "required": ["pickup_location", "pickup_date", "pickup_time"]}}}, {"type": "function", "function": {"name": "check_traffic_status", "description": "Inquire the current traffic situation on a particular path.", "parameters": {"type": "object", "properties": {"start_location": {"type": "string", "description": "Departure"}, "end_location": {"type": "string", "description": "Arrival point"}}, "required": ["start_location", "end_location"]}}}, {"type": "function", "function": {"name": "count_lowercase_letters", "description": "The number of lowercase in the string", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Cell string for lowercase"}}, "required": ["text"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the date to collect the laundry."}, "acceptable_arguments": null}
{"serial_num": 293, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "I want to apply for a laundry collection service."}, {"role": "assistant", "content": "Please tell us the location, date and time to collect laundry."}, {"role": "user", "content": "Is it possible this Sunday morning at 8:00?"}], "input_tools": [{"type": "function", "function": {"name": "discover_new_releases_kpop", "description": "Provides the latest music release information of the K -pop genre", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "recommendLottoNumber", "description": "It is a function that recommends a lotto number randomly.", "parameters": {"type": "object", "properties": {}, "required": []}}}, {"type": "function", "function": {"name": "schedule_laundry_pickup", "description": "Apply for a service to collect laundry.", "parameters": {"type": "object", "properties": {"pickup_location": {"type": "string", "description": "Extract the location of the user as it is to collect the laundry. (Example: House, 101 -dong 102, etc."}, "pickup_date": {"type": "string", "description": "Extract the laundry collection date as it is. (Example: next Monday, January 1, 2022, etc.)"}, "pickup_time": {"type": "string", "description": "Extract the time to collect the laundry as it is. (Example: 2 pm, 7 pm, etc.)"}}, "required": ["pickup_location", "pickup_date", "pickup_time"]}}}, {"type": "function", "function": {"name": "check_traffic_status", "description": "Inquire the current traffic situation on a particular path.", "parameters": {"type": "object", "properties": {"start_location": {"type": "string", "description": "Departure"}, "end_location": {"type": "string", "description": "Arrival point"}}, "required": ["start_location", "end_location"]}}}, {"type": "function", "function": {"name": "count_lowercase_letters", "description": "The number of lowercase in the string", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Cell string for lowercase"}}, "required": ["text"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me where to collect the laundry."}, "acceptable_arguments": null}
{"serial_num": 294, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "I want to apply for a laundry collection service."}, {"role": "assistant", "content": "Please tell us the location, date and time to collect laundry."}, {"role": "user", "content": "I want to apply at 8 am. This Sunday is"}], "input_tools": [{"type": "function", "function": {"name": "discover_new_releases_kpop", "description": "Provides the latest music release information of the K -pop genre", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "recommendLottoNumber", "description": "It is a function that recommends a lotto number randomly.", "parameters": {"type": "object", "properties": {}, "required": []}}}, {"type": "function", "function": {"name": "schedule_laundry_pickup", "description": "Apply for a service to collect laundry.", "parameters": {"type": "object", "properties": {"pickup_location": {"type": "string", "description": "Extract the location of the user as it is to collect the laundry. (Example: House, 101 -dong 102, etc."}, "pickup_date": {"type": "string", "description": "Extract the laundry collection date as it is. (Example: next Monday, January 1, 2022, etc.)"}, "pickup_time": {"type": "string", "description": "Extract the time to collect the laundry as it is. (Example: 2 pm, 7 pm, etc.)"}}, "required": ["pickup_location", "pickup_date", "pickup_time"]}}}, {"type": "function", "function": {"name": "check_traffic_status", "description": "Inquire the current traffic situation on a particular path.", "parameters": {"type": "object", "properties": {"start_location": {"type": "string", "description": "Departure"}, "end_location": {"type": "string", "description": "Arrival point"}}, "required": ["start_location", "end_location"]}}}, {"type": "function", "function": {"name": "count_lowercase_letters", "description": "The number of lowercase in the string", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Cell string for lowercase"}}, "required": ["text"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me where to collect the laundry."}, "acceptable_arguments": null}
{"serial_num": 295, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "I would like to apply for a laundry collection service to Pangyo office?"}, {"role": "assistant", "content": "Please tell me the date and time to collect laundry."}, {"role": "user", "content": "This Sunday is"}], "input_tools": [{"type": "function", "function": {"name": "discover_new_releases_kpop", "description": "Provides the latest music release information of the K -pop genre", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "recommendLottoNumber", "description": "It is a function that recommends a lotto number randomly.", "parameters": {"type": "object", "properties": {}, "required": []}}}, {"type": "function", "function": {"name": "schedule_laundry_pickup", "description": "Apply for a service to collect laundry.", "parameters": {"type": "object", "properties": {"pickup_location": {"type": "string", "description": "Extract the location of the user as it is to collect the laundry. (Example: House, 101 -dong 102, etc."}, "pickup_date": {"type": "string", "description": "Extract the laundry collection date as it is. (Example: next Monday, January 1, 2022, etc.)"}, "pickup_time": {"type": "string", "description": "Extract the time to collect the laundry as it is. (Example: 2 pm, 7 pm, etc.)"}}, "required": ["pickup_location", "pickup_date", "pickup_time"]}}}, {"type": "function", "function": {"name": "check_traffic_status", "description": "Inquire the current traffic situation on a particular path.", "parameters": {"type": "object", "properties": {"start_location": {"type": "string", "description": "Departure"}, "end_location": {"type": "string", "description": "Arrival point"}}, "required": ["start_location", "end_location"]}}}, {"type": "function", "function": {"name": "count_lowercase_letters", "description": "The number of lowercase in the string", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Cell string for lowercase"}}, "required": ["text"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the time to collect the laundry."}, "acceptable_arguments": null}
{"serial_num": 296, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "I want to apply for a laundry collection service. Is it possible this Sunday?"}, {"role": "assistant", "content": "Please tell us the location and time to collect the laundry."}, {"role": "user", "content": "The location is Pangyo office."}], "input_tools": [{"type": "function", "function": {"name": "discover_new_releases_kpop", "description": "Provides the latest music release information of the K -pop genre", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "recommendLottoNumber", "description": "It is a function that recommends a lotto number randomly.", "parameters": {"type": "object", "properties": {}, "required": []}}}, {"type": "function", "function": {"name": "schedule_laundry_pickup", "description": "Apply for a service to collect laundry.", "parameters": {"type": "object", "properties": {"pickup_location": {"type": "string", "description": "Extract the location of the user as it is to collect the laundry. (Example: House, 101 -dong 102, etc."}, "pickup_date": {"type": "string", "description": "Extract the laundry collection date as it is. (Example: next Monday, January 1, 2022, etc.)"}, "pickup_time": {"type": "string", "description": "Extract the time to collect the laundry as it is. (Example: 2 pm, 7 pm, etc.)"}}, "required": ["pickup_location", "pickup_date", "pickup_time"]}}}, {"type": "function", "function": {"name": "check_traffic_status", "description": "Inquire the current traffic situation on a particular path.", "parameters": {"type": "object", "properties": {"start_location": {"type": "string", "description": "Departure"}, "end_location": {"type": "string", "description": "Arrival point"}}, "required": ["start_location", "end_location"]}}}, {"type": "function", "function": {"name": "count_lowercase_letters", "description": "The number of lowercase in the string", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Cell string for lowercase"}}, "required": ["text"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the time to collect the laundry."}, "acceptable_arguments": null}
{"serial_num": 297, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "I would like to apply for a laundry collection service to Pangyo office?"}, {"role": "assistant", "content": "Please tell me the date and time to collect laundry."}, {"role": "user", "content": "8 o'clock in the morning"}], "input_tools": [{"type": "function", "function": {"name": "discover_new_releases_kpop", "description": "Provides the latest music release information of the K -pop genre", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "recommendLottoNumber", "description": "It is a function that recommends a lotto number randomly.", "parameters": {"type": "object", "properties": {}, "required": []}}}, {"type": "function", "function": {"name": "schedule_laundry_pickup", "description": "Apply for a service to collect laundry.", "parameters": {"type": "object", "properties": {"pickup_location": {"type": "string", "description": "Extract the location of the user as it is to collect the laundry. (Example: House, 101 -dong 102, etc."}, "pickup_date": {"type": "string", "description": "Extract the laundry collection date as it is. (Example: next Monday, January 1, 2022, etc.)"}, "pickup_time": {"type": "string", "description": "Extract the time to collect the laundry as it is. (Example: 2 pm, 7 pm, etc.)"}}, "required": ["pickup_location", "pickup_date", "pickup_time"]}}}, {"type": "function", "function": {"name": "check_traffic_status", "description": "Inquire the current traffic situation on a particular path.", "parameters": {"type": "object", "properties": {"start_location": {"type": "string", "description": "Departure"}, "end_location": {"type": "string", "description": "Arrival point"}}, "required": ["start_location", "end_location"]}}}, {"type": "function", "function": {"name": "count_lowercase_letters", "description": "The number of lowercase in the string", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Cell string for lowercase"}}, "required": ["text"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the date to collect the laundry."}, "acceptable_arguments": null}
{"serial_num": 298, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "I want to apply for a laundry collection service."}, {"role": "assistant", "content": "Please tell me the location and date to collect the laundry."}, {"role": "user", "content": "The location is Pangyo office."}], "input_tools": [{"type": "function", "function": {"name": "discover_new_releases_kpop", "description": "Provides the latest music release information of the K -pop genre", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "recommendLottoNumber", "description": "It is a function that recommends a lotto number randomly.", "parameters": {"type": "object", "properties": {}, "required": []}}}, {"type": "function", "function": {"name": "schedule_laundry_pickup", "description": "Apply for a service to collect laundry.", "parameters": {"type": "object", "properties": {"pickup_location": {"type": "string", "description": "Extract the location of the user as it is to collect the laundry. (Example: House, 101 -dong 102, etc."}, "pickup_date": {"type": "string", "description": "Extract the laundry collection date as it is. (Example: next Monday, January 1, 2022, etc.)"}, "pickup_time": {"type": "string", "description": "Extract the time to collect the laundry as it is. (Example: 2 pm, 7 pm, etc.)"}}, "required": ["pickup_location", "pickup_date", "pickup_time"]}}}, {"type": "function", "function": {"name": "check_traffic_status", "description": "Inquire the current traffic situation on a particular path.", "parameters": {"type": "object", "properties": {"start_location": {"type": "string", "description": "Departure"}, "end_location": {"type": "string", "description": "Arrival point"}}, "required": ["start_location", "end_location"]}}}, {"type": "function", "function": {"name": "count_lowercase_letters", "description": "The number of lowercase in the string", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Cell string for lowercase"}}, "required": ["text"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the date to collect the laundry."}, "acceptable_arguments": null}
{"serial_num": 299, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "I want to apply for a laundry collection service. Is it possible this Sunday?"}, {"role": "assistant", "content": "Please tell us the location and time to collect the laundry."}, {"role": "user", "content": "8 o'clock in the morning"}], "input_tools": [{"type": "function", "function": {"name": "discover_new_releases_kpop", "description": "Provides the latest music release information of the K -pop genre", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "recommendLottoNumber", "description": "It is a function that recommends a lotto number randomly.", "parameters": {"type": "object", "properties": {}, "required": []}}}, {"type": "function", "function": {"name": "schedule_laundry_pickup", "description": "Apply for a service to collect laundry.", "parameters": {"type": "object", "properties": {"pickup_location": {"type": "string", "description": "Extract the location of the user as it is to collect the laundry. (Example: House, 101 -dong 102, etc."}, "pickup_date": {"type": "string", "description": "Extract the laundry collection date as it is. (Example: next Monday, January 1, 2022, etc.)"}, "pickup_time": {"type": "string", "description": "Extract the time to collect the laundry as it is. (Example: 2 pm, 7 pm, etc.)"}}, "required": ["pickup_location", "pickup_date", "pickup_time"]}}}, {"type": "function", "function": {"name": "check_traffic_status", "description": "Inquire the current traffic situation on a particular path.", "parameters": {"type": "object", "properties": {"start_location": {"type": "string", "description": "Departure"}, "end_location": {"type": "string", "description": "Arrival point"}}, "required": ["start_location", "end_location"]}}}, {"type": "function", "function": {"name": "count_lowercase_letters", "description": "The number of lowercase in the string", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Cell string for lowercase"}}, "required": ["text"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me where to collect the laundry."}, "acceptable_arguments": null}
{"serial_num": 300, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "I want to apply for a laundry collection service."}, {"role": "assistant", "content": "Please tell me the location and date to collect the laundry."}, {"role": "user", "content": "This Sunday"}], "input_tools": [{"type": "function", "function": {"name": "discover_new_releases_kpop", "description": "Provides the latest music release information of the K -pop genre", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "recommendLottoNumber", "description": "It is a function that recommends a lotto number randomly.", "parameters": {"type": "object", "properties": {}, "required": []}}}, {"type": "function", "function": {"name": "schedule_laundry_pickup", "description": "Apply for a service to collect laundry.", "parameters": {"type": "object", "properties": {"pickup_location": {"type": "string", "description": "Extract the location of the user as it is to collect the laundry. (Example: House, 101 -dong 102, etc."}, "pickup_date": {"type": "string", "description": "Extract the laundry collection date as it is. (Example: next Monday, January 1, 2022, etc.)"}, "pickup_time": {"type": "string", "description": "Extract the time to collect the laundry as it is. (Example: 2 pm, 7 pm, etc.)"}}, "required": ["pickup_location", "pickup_date", "pickup_time"]}}}, {"type": "function", "function": {"name": "check_traffic_status", "description": "Inquire the current traffic situation on a particular path.", "parameters": {"type": "object", "properties": {"start_location": {"type": "string", "description": "Departure"}, "end_location": {"type": "string", "description": "Arrival point"}}, "required": ["start_location", "end_location"]}}}, {"type": "function", "function": {"name": "count_lowercase_letters", "description": "The number of lowercase in the string", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Cell string for lowercase"}}, "required": ["text"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me where to collect the laundry."}, "acceptable_arguments": null}
{"serial_num": 301, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "I want to apply for a laundry collection service."}, {"role": "assistant", "content": "Please tell us the location, date and time to collect laundry."}, {"role": "user", "content": "To Pangyo Office"}, {"role": "assistant", "content": "Please tell me the date and time to collect laundry."}, {"role": "user", "content": "This Sunday is"}], "input_tools": [{"type": "function", "function": {"name": "discover_new_releases_kpop", "description": "Provides the latest music release information of the K -pop genre", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "recommendLottoNumber", "description": "It is a function that recommends a lotto number randomly.", "parameters": {"type": "object", "properties": {}, "required": []}}}, {"type": "function", "function": {"name": "schedule_laundry_pickup", "description": "Apply for a service to collect laundry.", "parameters": {"type": "object", "properties": {"pickup_location": {"type": "string", "description": "Extract the location of the user as it is to collect the laundry. (Example: House, 101 -dong 102, etc."}, "pickup_date": {"type": "string", "description": "Extract the laundry collection date as it is. (Example: next Monday, January 1, 2022, etc.)"}, "pickup_time": {"type": "string", "description": "Extract the time to collect the laundry as it is. (Example: 2 pm, 7 pm, etc.)"}}, "required": ["pickup_location", "pickup_date", "pickup_time"]}}}, {"type": "function", "function": {"name": "check_traffic_status", "description": "Inquire the current traffic situation on a particular path.", "parameters": {"type": "object", "properties": {"start_location": {"type": "string", "description": "Departure"}, "end_location": {"type": "string", "description": "Arrival point"}}, "required": ["start_location", "end_location"]}}}, {"type": "function", "function": {"name": "count_lowercase_letters", "description": "The number of lowercase in the string", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Cell string for lowercase"}}, "required": ["text"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the time to collect the laundry."}, "acceptable_arguments": null}
{"serial_num": 302, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "I want to apply for a laundry collection service."}, {"role": "assistant", "content": "Please tell us the location, date and time to collect laundry."}, {"role": "user", "content": "Is it possible this Sunday?"}, {"role": "assistant", "content": "Please tell us the location and time to collect the laundry."}, {"role": "user", "content": "The location is Pangyo office."}], "input_tools": [{"type": "function", "function": {"name": "discover_new_releases_kpop", "description": "Provides the latest music release information of the K -pop genre", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "recommendLottoNumber", "description": "It is a function that recommends a lotto number randomly.", "parameters": {"type": "object", "properties": {}, "required": []}}}, {"type": "function", "function": {"name": "schedule_laundry_pickup", "description": "Apply for a service to collect laundry.", "parameters": {"type": "object", "properties": {"pickup_location": {"type": "string", "description": "Extract the location of the user as it is to collect the laundry. (Example: House, 101 -dong 102, etc."}, "pickup_date": {"type": "string", "description": "Extract the laundry collection date as it is. (Example: next Monday, January 1, 2022, etc.)"}, "pickup_time": {"type": "string", "description": "Extract the time to collect the laundry as it is. (Example: 2 pm, 7 pm, etc.)"}}, "required": ["pickup_location", "pickup_date", "pickup_time"]}}}, {"type": "function", "function": {"name": "check_traffic_status", "description": "Inquire the current traffic situation on a particular path.", "parameters": {"type": "object", "properties": {"start_location": {"type": "string", "description": "Departure"}, "end_location": {"type": "string", "description": "Arrival point"}}, "required": ["start_location", "end_location"]}}}, {"type": "function", "function": {"name": "count_lowercase_letters", "description": "The number of lowercase in the string", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Cell string for lowercase"}}, "required": ["text"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the time to collect the laundry."}, "acceptable_arguments": null}
{"serial_num": 303, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "I want to apply for a laundry collection service."}, {"role": "assistant", "content": "Please tell us the location, date and time to collect laundry."}, {"role": "user", "content": "To Pangyo Office"}, {"role": "assistant", "content": "Please tell me the date and time to collect laundry."}, {"role": "user", "content": "8 o'clock in the morning"}], "input_tools": [{"type": "function", "function": {"name": "discover_new_releases_kpop", "description": "Provides the latest music release information of the K -pop genre", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "recommendLottoNumber", "description": "It is a function that recommends a lotto number randomly.", "parameters": {"type": "object", "properties": {}, "required": []}}}, {"type": "function", "function": {"name": "schedule_laundry_pickup", "description": "Apply for a service to collect laundry.", "parameters": {"type": "object", "properties": {"pickup_location": {"type": "string", "description": "Extract the location of the user as it is to collect the laundry. (Example: House, 101 -dong 102, etc."}, "pickup_date": {"type": "string", "description": "Extract the laundry collection date as it is. (Example: next Monday, January 1, 2022, etc.)"}, "pickup_time": {"type": "string", "description": "Extract the time to collect the laundry as it is. (Example: 2 pm, 7 pm, etc.)"}}, "required": ["pickup_location", "pickup_date", "pickup_time"]}}}, {"type": "function", "function": {"name": "check_traffic_status", "description": "Inquire the current traffic situation on a particular path.", "parameters": {"type": "object", "properties": {"start_location": {"type": "string", "description": "Departure"}, "end_location": {"type": "string", "description": "Arrival point"}}, "required": ["start_location", "end_location"]}}}, {"type": "function", "function": {"name": "count_lowercase_letters", "description": "The number of lowercase in the string", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Cell string for lowercase"}}, "required": ["text"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the date to collect the laundry."}, "acceptable_arguments": null}
{"serial_num": 304, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "I want to apply for a laundry collection service."}, {"role": "assistant", "content": "Please tell us the location, date and time to collect laundry."}, {"role": "user", "content": "8 o'clock in the morning"}, {"role": "assistant", "content": "Please tell me the location and date to collect the laundry."}, {"role": "user", "content": "The location is Pangyo office."}], "input_tools": [{"type": "function", "function": {"name": "discover_new_releases_kpop", "description": "Provides the latest music release information of the K -pop genre", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "recommendLottoNumber", "description": "It is a function that recommends a lotto number randomly.", "parameters": {"type": "object", "properties": {}, "required": []}}}, {"type": "function", "function": {"name": "schedule_laundry_pickup", "description": "Apply for a service to collect laundry.", "parameters": {"type": "object", "properties": {"pickup_location": {"type": "string", "description": "Extract the location of the user as it is to collect the laundry. (Example: House, 101 -dong 102, etc."}, "pickup_date": {"type": "string", "description": "Extract the laundry collection date as it is. (Example: next Monday, January 1, 2022, etc.)"}, "pickup_time": {"type": "string", "description": "Extract the time to collect the laundry as it is. (Example: 2 pm, 7 pm, etc.)"}}, "required": ["pickup_location", "pickup_date", "pickup_time"]}}}, {"type": "function", "function": {"name": "check_traffic_status", "description": "Inquire the current traffic situation on a particular path.", "parameters": {"type": "object", "properties": {"start_location": {"type": "string", "description": "Departure"}, "end_location": {"type": "string", "description": "Arrival point"}}, "required": ["start_location", "end_location"]}}}, {"type": "function", "function": {"name": "count_lowercase_letters", "description": "The number of lowercase in the string", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Cell string for lowercase"}}, "required": ["text"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me the date to collect the laundry."}, "acceptable_arguments": null}
{"serial_num": 305, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "I want to apply for a laundry collection service."}, {"role": "assistant", "content": "Please tell us the location, date and time to collect laundry."}, {"role": "user", "content": "This Sunday"}, {"role": "assistant", "content": "Please tell us the location and time to collect the laundry."}, {"role": "user", "content": "8 o'clock in the morning"}], "input_tools": [{"type": "function", "function": {"name": "discover_new_releases_kpop", "description": "Provides the latest music release information of the K -pop genre", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "recommendLottoNumber", "description": "It is a function that recommends a lotto number randomly.", "parameters": {"type": "object", "properties": {}, "required": []}}}, {"type": "function", "function": {"name": "schedule_laundry_pickup", "description": "Apply for a service to collect laundry.", "parameters": {"type": "object", "properties": {"pickup_location": {"type": "string", "description": "Extract the location of the user as it is to collect the laundry. (Example: House, 101 -dong 102, etc."}, "pickup_date": {"type": "string", "description": "Extract the laundry collection date as it is. (Example: next Monday, January 1, 2022, etc.)"}, "pickup_time": {"type": "string", "description": "Extract the time to collect the laundry as it is. (Example: 2 pm, 7 pm, etc.)"}}, "required": ["pickup_location", "pickup_date", "pickup_time"]}}}, {"type": "function", "function": {"name": "check_traffic_status", "description": "Inquire the current traffic situation on a particular path.", "parameters": {"type": "object", "properties": {"start_location": {"type": "string", "description": "Departure"}, "end_location": {"type": "string", "description": "Arrival point"}}, "required": ["start_location", "end_location"]}}}, {"type": "function", "function": {"name": "count_lowercase_letters", "description": "The number of lowercase in the string", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Cell string for lowercase"}}, "required": ["text"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me where to collect the laundry."}, "acceptable_arguments": null}
{"serial_num": 306, "category": "SLOT-some", "input_messages": [{"role": "system", "content": "As an AI Assistant, talk with user in Korean. If there is a suitable function, do not answer with your own knowledge and solve the request of the user by calling function. Do not arbitrarily generate the parameter values ​​required for the Function call. If you lack essential information, ask the user to get the information. If there are many missing essential information, please ask each of them. If there is no special reason, do not change the user's Korean expression to English when creating a parameter value."}, {"role": "user", "content": "I want to apply for a laundry collection service."}, {"role": "assistant", "content": "Please tell us the location, date and time to collect laundry."}, {"role": "user", "content": "8 o'clock in the morning"}, {"role": "assistant", "content": "Please tell me the location and date to collect the laundry."}, {"role": "user", "content": "This Sunday"}], "input_tools": [{"type": "function", "function": {"name": "discover_new_releases_kpop", "description": "Provides the latest music release information of the K -pop genre", "parameters": {"type": "object", "properties": {}}}}, {"type": "function", "function": {"name": "recommendLottoNumber", "description": "It is a function that recommends a lotto number randomly.", "parameters": {"type": "object", "properties": {}, "required": []}}}, {"type": "function", "function": {"name": "schedule_laundry_pickup", "description": "Apply for a service to collect laundry.", "parameters": {"type": "object", "properties": {"pickup_location": {"type": "string", "description": "Extract the location of the user as it is to collect the laundry. (Example: House, 101 -dong 102, etc."}, "pickup_date": {"type": "string", "description": "Extract the laundry collection date as it is. (Example: next Monday, January 1, 2022, etc.)"}, "pickup_time": {"type": "string", "description": "Extract the time to collect the laundry as it is. (Example: 2 pm, 7 pm, etc.)"}}, "required": ["pickup_location", "pickup_date", "pickup_time"]}}}, {"type": "function", "function": {"name": "check_traffic_status", "description": "Inquire the current traffic situation on a particular path.", "parameters": {"type": "object", "properties": {"start_location": {"type": "string", "description": "Departure"}, "end_location": {"type": "string", "description": "Arrival point"}}, "required": ["start_location", "end_location"]}}}, {"type": "function", "function": {"name": "count_lowercase_letters", "description": "The number of lowercase in the string", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "Cell string for lowercase"}}, "required": ["text"]}}}], "type_of_output": "slot", "ground_truth": {"role": "assistant", "content": "Please tell me where to collect the laundry."}, "acceptable_arguments": null}
